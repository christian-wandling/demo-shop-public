services:
  db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - '127.0.0.1:5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_CONFIG_SERVER_MODE=False
    networks:
      - backend
    ports:
      - '127.0.0.1:80:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      target: dev
    command: npx nx serve backend
    restart: always
    environment:
      - PORT=3000
      - NODE_ENV=development
      - NX_DAEMON=true
      - DATABASE_URL
      - KEYCLOAK_REALM
      - KEYCLOAK_CLIENT_API
      - KEYCLOAK_REALM_PUBLIC_KEY
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '127.0.0.1:3000:3000'
    networks:
      - backend
      - frontend
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/health']
      interval: 30s
      timeout: 3s
      retries: 3

  prisma:
    image: docker.io/node:lts-alpine
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    command: >
      sh -c "
      npx prisma migrate dev &&
      npx prisma db seed
      "
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start-dev
    environment:
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - '8080:8080'
    networks:
      - frontend
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/health/ready']
      interval: 30s
      timeout: 3s
      retries: 3

  frontend:
    restart: unless-stopped
    command: npx nx serve frontend
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      target: dev
    ports:
      - '4200:4200'
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - frontend
    depends_on:
      backend:
        condition: service_started

volumes:
  postgres_data:
  pgadmin_data:

networks:
  frontend:
  backend:
