services:
  postgres-core:
    image: postgres
    container_name: postgres-core
    environment:
      - POSTGRES_DB=demo_shop_core_dev
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - TZ=UTC
      - PGTZ=UTC
    volumes:
      - postgres-core-data:/var/lib/postgresql/data
      - ./.ops/docker/db/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - backend-net
    ports:
      - '127.0.0.1:5432:5432'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          memory: 512M

  api-core:
    container_name: api-core
    command: sh -c "npx prisma generate && npx nx serve backend --watch --host=0.0.0.0"
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
      target: dev
    environment:
      - PORT=3000
      - NODE_ENV=development
      - NX_DAEMON=false
      - NX_REJECT_UNKNOWN_LOCAL_CACHE=0
      - ALLOWED_ORIGIN=http://localhost:4200
      - KEYCLOAK_REALM=demo_shop
      - KEYCLOAK_CLIENT_API=demo_shop_api_core
      - KEYCLOAK_URL=http://localhost:8080
      - KEYCLOAK_REALM_PUBLIC_KEY
      - SENTRY_AUTH_TOKEN
      - SENTRY_ORG
      - SENTRY_TRUSTED_DOMAIN=http://localhost
      - SENTRY_DEMO_SHOP_API_DSN
      - SENTRY_DEMO_SHOP_API_PROJECT
      - POSTGRES_DB=demo_shop_core_dev
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/demo_shop_core_dev?schema=public
    volumes:
      - .:/app:cached
      - /app/node_modules
    ports:
      - '127.0.0.1:3000:3000'
    networks:
      - backend-net
      - frontend-net
      - messaging-net
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 768M
        reservations:
          memory: 384M

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start-dev --import-realm
    container_name: keycloak
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres-core/keycloak
      #      - KC_DB_URL=jdbc:postgresql://host.docker.internal/keycloak
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_LOG_LEVEL=info
      - KC_METRICS_ENABLED=true
      - KC_HEALTH_ENABLED=true
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - postgres-core
    volumes:
      - ./.ops/docker/keycloak/imports:/opt/keycloak/data/import
      - keycloak-data:/opt/keycloak/data
    ports:
      - '8080:8080'
    networks:
      - frontend-net
      - backend-net
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          memory: 512M

  frontend-core:
    container_name: frontend-core
    command: npx nx serve frontend
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      target: dev
    environment:
      - API_URL=http://api-core:3000
      - NODE_ENV=development
      - KEYCLOAK_URL=http://localhost:8080
      - SENTRY_DEMO_SHOP_UI_DSN
      - SENTRY_TRUSTED_DOMAIN=http://localhost
    ports:
      - '4200:4200'
    volumes:
      - .:/app:cached
      - /app/node_modules
    networks:
      - frontend-net
    depends_on:
      - api-core
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres-core-data:

networks:
  frontend-net:
    external: true
  backend-net:
    external: true
  messaging-net:
    external: true
