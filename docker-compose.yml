services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - backend
    ports:
      - '${POSTGRES_PORT}:5432'

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    networks:
      - backend
    ports:
      - '${PGADMIN_PORT}:80'
    depends_on:
      - db
  backend:
    restart: always
    environment:
      - PORT=3000
      - NODE_ENV=production
      - DATABASE_URL
      - KEYCLOAK_HOSTNAME
      - KEYCLOAK_PORT
      - KEYCLOAK_REALM
      - KEYCLOAK_CLIENT_API
      - KEYCLOAK_REALM_PUBLIC_KEY
      - KEYCLOAK_SECRET
    ports:
      - '127.0.0.1:3000:3000'
    networks:
      - backend
      - frontend
    build:
      context: .
      dockerfile: apps/backend/Dockerfile

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start-dev
    environment:
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    depends_on:
      - db
    restart: always
    ports:
      - '${KEYCLOAK_PORT}:8080'
    networks:
      - frontend

  frontend:
    restart: always
    ports:
      - '443:443'
    build:
      dockerfile: ./apps/frontend/Dockerfile
    networks:
      - frontend
    depends_on:
      - backend

networks:
  frontend:
  backend:
