var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddCartItemRequest.html",[0,0.171,1,2.75]],["body/interfaces/AddCartItemRequest.html",[0,0.248,1,4.762,2,1.264,3,0.248,4,0.248,5,0.185,6,4.653,7,1.6,8,2.357,9,3.339,10,1.833,11,1.027,12,1.965,13,2.035,14,2.187,15,0.488,16,2.187,17,2.109,18,1.833,19,2.035,20,2.614,21,2.614,22,2.109,23,2.187,24,0.164,25,0.349,26,1.184,27,4.949,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011]],["title/interfaces/AdditionalState.html",[0,0.171,34,2.955]],["body/interfaces/AdditionalState.html",[0,0.166,1,3.68,2,0.847,3,0.166,4,0.166,5,0.124,11,0.688,24,0.11,25,0.27,27,2.505,28,1.494,29,0.249,30,0.013,31,0.166,32,0.008,33,0.008,34,4.525,35,3.12,36,6.363,37,4.92,38,2.79,39,2.903,40,0.901,41,3.961,42,4.759,43,3.454,44,3.454,45,3.961,46,3.454,47,4.759,48,3.961,49,2.505,50,3.12,51,3.12,52,4.877,53,1.148,54,0.819,55,3.961,56,4.759,57,3.961,58,3.53,59,3.955,60,3.452,61,1.856,62,2.87,63,2.363,64,2.399,65,3.12,66,2.239,67,2.87,68,1.58,69,1.466,70,3.454,71,3.454,72,3.454,73,2.671,74,4.759,75,4.299,76,4.759,77,3.454,78,3.256,79,3.454,80,3.454,81,3.454,82,5.869,83,3.454,84,3.12,85,3.447,86,3.12,87,3.447,88,3.454,89,3.83,90,3.454,91,4.759,92,3.454,93,3.454,94,3.454,95,3.725,96,2.399,97,5.445,98,4.525,99,4.211,100,1.937,101,3.454,102,4.919,103,3.454,104,3.454,105,3.454,106,3.955,107,3.454,108,3.454,109,2.796,110,1.693,111,3.454,112,3.454,113,3.454,114,2.87,115,3.12,116,1.466]],["title/interfaces/AddressResponse.html",[0,0.171,117,2.955]],["body/interfaces/AddressResponse.html",[0,0.222,2,1.129,3,0.222,4,0.222,5,0.165,10,1.637,11,0.917,12,1.754,13,1.817,14,1.953,15,0.455,16,1.953,17,1.884,18,1.637,19,1.817,20,2.44,21,2.44,22,1.884,23,1.953,24,0.147,25,0.326,26,1.105,29,0.361,30,0.013,31,0.222,32,0.01,33,0.01,38,2.979,117,4.775,118,4.6,119,2.275,120,5.076,121,4.76,122,5.076,123,5.076,124,4.76,125,5.076,126,2.143]],["title/modules/ApiModule.html",[127,3.556,128,3.212]],["body/modules/ApiModule.html",[3,0.212,4,0.212,5,0.158,15,0.349,26,1.181,29,0.231,30,0.013,31,0.212,32,0.01,33,0.01,40,0.944,54,1.045,95,3.827,96,2.464,110,1.568,116,1.871,128,5.838,129,3.981,130,5.055,131,1.324,132,5.594,133,5.055,134,6.415,135,0.848,136,5.055,137,1.369,138,0.878,139,6.415,140,3.663,141,1.238,142,7.047,143,7.047,144,6.415,145,3.796,146,5.052,147,3.197,148,2.016,149,4.408,150,4.408,151,5.052,152,2.857,153,3.981,154,4.408,155,5.055,156,6.415,157,6.415,158,5.055,159,5.055,160,5.055,161,5.055,162,6.415,163,3.981,164,3.981,165,5.055,166,5.055,167,3.663,168,5.055]],["title/components/AppComponent.html",[169,0.903,170,1.566]],["body/components/AppComponent.html",[3,0.177,4,0.177,5,0.132,7,1.544,11,0.991,15,0.292,24,0.117,25,0.282,30,0.013,31,0.177,32,0.009,33,0.009,40,0.891,53,1.224,54,0.874,69,2.111,135,0.956,138,0.991,148,2.275,169,1.429,170,2.656,171,2.191,172,1.751,173,1.751,174,1.751,175,3.683,176,1.685,177,2.364,178,2.364,179,3.421,180,2.575,181,2.364,182,1.831,183,6.457,184,2.656,185,2.656,186,2.364,187,5.703,188,2.364,189,5.703,190,1.948,191,1.652,192,5.445,193,6.295,194,1.306,195,1.179,196,5.703,197,4.224,198,5.703,199,4.224,200,1.751,201,1.897,202,4.224,203,3.061,204,4.224,205,1.685,206,2.364,207,2.364,208,1.751,209,2.866,210,1.751,211,1.751,212,3.25,213,1.751,214,1.623,215,1.751,216,1.623,217,1.751,218,1.564,219,1.751,220,1.623,221,1.266,222,1.751,223,1.623,224,1.455,225,1.751,226,1.751,227,1.564,228,1.749,229,2.364,230,1.564,231,2.364,232,1.623,233,1.751,234,1.623,235,2.147,236,1.623,237,1.623,238,1.751,239,1.623,240,1.183,241,1.623,242,1.751,243,1.751]],["title/interfaces/AuthConfig.html",[0,0.171,244,2.75]],["body/interfaces/AuthConfig.html",[0,0.249,2,1.267,3,0.249,4,0.249,5,0.185,24,0.165,25,0.35,29,0.346,30,0.013,31,0.297,32,0.011,33,0.011,40,0.731,54,1.225,64,2.275,96,2.275,126,1.915,244,4.769,245,4.665,246,4.292,247,4.953,248,3.461,249,4.665,250,5.923,251,5.923,252,5.923,253,4.292,254,5.164]],["title/injectables/AuthFacade.html",[255,1.033,256,2.579]],["body/injectables/AuthFacade.html",[3,0.178,4,0.178,5,0.133,15,0.293,24,0.118,25,0.283,26,0.712,29,0.194,30,0.013,31,0.178,32,0.009,33,0.009,39,2.988,40,0.855,53,1.23,54,0.878,68,1.694,69,1.572,85,4.128,87,3.966,89,3.549,109,2.931,110,2.149,126,1.449,131,1.499,135,1.315,137,1.15,138,0.738,141,1.865,190,1.951,191,2.007,194,1.31,195,1.184,255,1.449,256,3.62,257,1.76,258,3.703,259,4.672,260,4.672,261,6.928,262,6.041,263,4.99,264,6.928,265,5.02,266,5.457,267,5.02,268,4.246,269,4.246,270,4.99,271,4.574,272,6.041,273,4.246,274,4.246,275,4.246,276,4.246,277,4.246,278,4.99,279,4.246,280,4.99,281,4.246,282,4.246,283,3.703,284,3.344,285,4.246,286,4.246,287,4.246,288,4.246,289,4.246,290,3.703,291,3.344,292,4.246,293,4.246]],["title/components/CartComponent.html",[169,0.903,185,1.566]],["body/components/CartComponent.html",[3,0.143,4,0.143,5,0.107,7,1.882,15,0.235,24,0.095,25,0.243,26,0.571,28,1.15,29,0.156,30,0.013,31,0.143,32,0.008,33,0.008,37,4.5,40,0.858,52,4.169,53,0.987,54,0.705,73,4.5,78,2.928,98,4.562,100,1.057,116,2.331,131,1.285,135,1.201,137,0.923,138,1,141,1.202,148,1.958,169,1.274,170,1.309,171,1.886,172,1.413,173,1.413,174,1.413,176,1.359,177,2.035,178,2.035,179,3.329,180,1.359,181,2.035,182,1.576,184,1.309,185,2.418,186,2.035,188,2.035,190,2.08,191,1.422,194,1.528,195,1.38,200,1.413,201,1.531,205,1.359,206,2.035,207,2.035,208,1.413,209,2.61,210,1.413,211,1.413,212,3.187,213,1.413,214,1.309,215,1.413,216,2.418,217,1.413,218,1.261,219,1.413,220,1.309,221,1.022,222,1.413,223,1.309,224,1.174,225,1.413,226,1.413,227,1.261,228,1.558,229,2.035,230,1.261,231,2.035,232,1.309,233,1.413,234,1.309,235,1.913,236,1.309,237,1.309,238,1.413,239,1.309,240,0.954,241,1.309,242,1.413,243,1.413,294,2.971,295,2.482,296,3.252,297,3.88,298,4.909,299,4.909,300,3.383,301,5.754,302,3.252,303,6.296,304,3.557,305,3.408,306,3.866,307,3.408,308,3.105,309,3.408,310,4.28,311,3.408,312,4.28,313,3.408,314,4.909,315,3.408,316,4.28,317,3.408,318,1.413,319,2.684,320,2.971,321,2.469,322,2.971,323,3.557,324,3.557,325,3.408,326,2.971,327,2.971,328,3.408,329,4.28,330,4.909,331,3.866,332,2.928,333,4.28,334,4.909,335,4.909,336,4.245,337,4.909,338,3.408]],["title/injectables/CartFacade.html",[255,1.033,300,2.191]],["body/injectables/CartFacade.html",[3,0.143,4,0.143,5,0.106,8,2.506,11,0.85,15,0.234,24,0.094,25,0.242,26,1.054,27,3.095,28,1.549,29,0.287,30,0.013,31,0.143,32,0.008,33,0.008,37,2.288,39,2.476,40,0.823,53,0.983,54,0.702,58,1.918,59,4.553,61,1.59,62,2.459,63,2.024,64,2.205,67,4.553,68,1.354,69,1.256,84,3.855,85,3.555,86,4.949,87,3.218,89,2.94,95,2.024,96,1.303,100,1.518,102,2.673,110,2.067,115,3.855,116,2.711,131,1.282,135,1.322,137,1.702,138,1.092,141,1.878,190,1.954,191,2.011,194,1.314,195,1.187,255,1.239,257,1.407,300,2.63,304,3.546,306,3.855,336,4.237,339,2.959,340,3.974,341,4.894,342,5.479,343,6.284,344,6.284,345,6.284,346,6.284,347,4.894,348,4.894,349,4.894,350,3.393,351,3.393,352,3.393,353,4.85,354,3.393,355,3.393,356,3.393,357,3.393,358,3.393,359,3.393,360,3.393,361,4.894,362,3.749,363,3.393,364,4.894,365,3.393,366,3.855,367,3.393,368,3.393,369,3.393,370,1.738,371,3.393,372,3.393,373,3.393,374,3.393,375,3.393,376,4.894,377,4.521,378,4.16,379,3.393,380,3.393,381,3.393,382,3.393,383,3.393,384,3.393,385,3.393,386,3.393,387,2.959,388,2.459,389,3.393,390,3.393,391,2.959,392,2.959,393,3.393,394,2.959]],["title/components/CartIconComponent.html",[169,0.903,214,1.566]],["body/components/CartIconComponent.html",[3,0.17,4,0.17,5,0.127,7,2.129,15,0.28,24,0.113,25,0.274,30,0.013,31,0.17,32,0.009,33,0.009,37,4.583,40,0.78,53,1.175,54,0.838,116,2.053,131,1.452,135,1.06,138,0.964,141,0.993,148,2.212,169,1.399,170,1.557,171,2.13,172,1.681,173,1.681,174,1.681,176,1.617,177,2.299,178,2.299,179,3.405,180,1.617,181,2.299,182,1.781,184,1.557,185,1.557,186,2.299,188,2.299,190,1.924,191,1.607,194,1.27,195,1.147,200,1.681,205,1.617,206,2.299,207,2.299,208,1.681,209,2.818,210,1.681,211,1.681,212,3.263,213,1.681,214,2.611,215,1.681,216,1.557,217,1.681,218,1.501,219,1.681,220,1.557,221,1.215,222,1.681,223,1.557,224,1.396,225,1.681,226,1.681,227,1.501,228,1.712,229,2.299,230,1.501,231,2.299,232,1.557,233,1.681,234,1.557,235,2.102,236,1.557,237,1.557,238,1.681,239,1.557,240,1.136,241,1.557,242,1.681,243,1.681,295,2.726,300,3.652,302,3.134,308,3.507,318,1.681,319,3.193,395,5.926,396,5.926,397,3.535,398,5.546,399,5.546,400,5.546,401,7.118,402,4.054,403,4.054,404,5.546,405,4.054,406,4.054,407,4.836,408,5.546]],["title/interfaces/CartItemResponse.html",[0,0.171,58,2.305]],["body/interfaces/CartItemResponse.html",[0,0.221,2,1.124,3,0.221,4,0.221,5,0.164,8,2.095,10,1.63,11,0.913,12,1.747,13,1.809,14,1.945,15,0.454,16,1.945,17,1.875,18,1.63,19,1.809,20,2.433,21,2.433,22,1.875,23,1.945,24,0.146,25,0.325,27,4.753,28,1.679,29,0.366,30,0.013,31,0.221,32,0.01,33,0.01,58,3.714,73,5.068,100,2.332,119,2.265,126,1.999,362,4.483,409,4.58,410,6.553,411,6.553,412,6.553]],["title/components/CartItemsComponent.html",[169,0.903,216,1.566]],["body/components/CartItemsComponent.html",[3,0.165,4,0.165,5,0.123,7,2.06,8,2.167,11,0.684,15,0.272,24,0.109,25,0.269,30,0.013,31,0.165,32,0.008,33,0.008,40,0.829,54,0.814,58,2.224,61,1.843,135,1.043,138,0.944,148,2.167,169,1.378,170,1.512,171,2.087,172,1.631,173,1.631,174,1.631,176,1.57,177,2.253,178,2.253,179,3.392,180,1.57,181,2.253,182,1.745,184,1.512,185,1.512,186,2.253,188,2.253,190,1.63,194,0.901,195,0.814,200,1.631,201,1.768,205,1.57,206,2.253,207,2.253,208,1.631,209,2.782,210,1.631,211,1.631,212,3.25,213,1.631,214,1.512,215,1.631,216,2.578,217,1.631,218,1.457,219,1.631,220,1.512,221,1.18,222,1.631,223,1.512,224,1.355,225,1.631,226,1.631,227,1.457,228,1.685,229,2.253,230,1.457,231,2.253,232,1.512,233,1.631,234,1.512,235,2.07,236,1.512,237,1.512,238,1.631,239,1.512,240,1.102,241,1.512,242,1.631,243,1.631,295,2.684,296,3.517,297,4.197,302,4.218,304,5.103,318,1.631,321,4.863,332,3.241,377,4.28,413,5.852,414,3.431,415,5.434,416,5.434,417,5.434,418,5.434,419,3.937,420,3.935,421,2.653,422,5.434,423,3.664,424,5.434,425,4.738,426,4.738,427,4.28,428,4.738]],["title/interfaces/CheckoutAddressForm.html",[0,0.171,429,2.75]],["body/interfaces/CheckoutAddressForm.html",[0,0.278,2,1.139,3,0.224,4,0.224,5,0.166,24,0.148,25,0.328,29,0.362,30,0.013,31,0.278,32,0.01,33,0.01,40,0.657,120,5.092,121,4.775,122,5.092,123,5.092,124,4.775,125,5.092,429,4.468,430,4.192,431,4.192,432,7.442,433,5.219,434,3.366,435,3.589,436,3.857,437,3.857,438,3.175,439,2.726,440,2.86]],["title/components/CheckoutComponent.html",[169,0.903,218,1.51]],["body/components/CheckoutComponent.html",[3,0.093,4,0.093,5,0.069,7,0.958,11,0.767,15,0.153,24,0.062,25,0.175,26,0.371,28,0.882,29,0.101,30,0.013,31,0.093,32,0.005,33,0.005,40,0.836,52,3.653,53,0.642,54,0.458,61,1.037,64,1.936,78,1.321,85,3.009,87,2.582,89,2.261,95,1.321,96,0.851,100,0.687,110,1.564,116,1.309,120,2.977,121,2.792,122,2.977,123,1.493,124,2.792,125,2.977,131,0.926,135,1.253,137,0.6,138,1.071,141,1.438,148,1.411,169,0.977,170,0.851,171,1.358,172,0.918,173,0.918,174,0.918,176,0.883,177,1.466,178,1.466,179,3.098,180,0.883,181,1.466,182,2.295,184,0.851,185,0.851,186,1.466,188,1.466,190,2.109,191,1.855,194,1.583,195,1.498,200,0.918,201,0.995,205,0.883,206,1.466,207,1.466,208,0.918,209,2.09,210,0.918,211,0.918,212,2.953,213,0.918,214,0.851,215,0.918,216,1.936,217,0.918,218,1.866,219,0.918,220,0.851,221,0.664,222,0.918,223,1.936,224,1.218,225,0.918,226,0.918,227,0.82,228,1.492,229,1.466,230,0.82,231,1.466,232,0.851,233,0.918,234,0.851,235,1.468,236,0.851,237,0.851,238,0.918,239,0.851,240,1.412,241,0.851,242,0.918,243,0.918,295,1.904,300,2.709,302,2.495,304,2.562,306,2.785,308,2.236,310,1.931,312,3.083,316,3.083,318,0.918,319,1.744,320,1.931,321,1.604,322,1.931,327,1.931,331,2.785,332,2.11,333,3.083,336,4.318,353,4.05,387,1.931,391,1.931,392,1.931,394,1.931,429,1.493,433,1.744,434,1.4,435,3.399,436,1.604,437,1.604,438,2.634,439,2.822,440,2.709,441,1.931,442,4.415,443,3.536,444,3.536,445,4.415,446,3.653,447,2.849,448,4.415,449,4.415,450,4.34,451,4.415,452,5.041,453,5.041,454,5.041,455,5.041,456,2.214,457,2.214,458,2.214,459,2.214,460,2.214,461,2.214,462,2.214,463,3.536,464,2.214,465,2.562,466,2.214,467,2.385,468,2.214,469,3.536,470,2.214,471,3.536,472,2.214,473,3.536,474,2.214,475,2.214,476,2.214,477,3.536,478,3.536,479,2.214,480,2.562,481,2.214,482,1.744,483,2.214,484,6.77,485,2.214,486,1.604,487,2.236,488,2.214,489,1.744,490,2.214,491,2.214,492,2.214,493,2.214,494,2.214,495,2.214,496,2.214,497,3.536,498,4.415,499,2.214,500,4.415,501,6.602,502,6.404,503,2.214,504,2.214,505,2.214,506,2.214,507,2.214,508,2.214,509,2.214,510,2.214,511,2.214,512,2.214,513,3.536,514,3.536,515,2.214,516,3.536,517,3.536,518,2.214,519,3.083,520,2.385,521,3.083,522,3.536,523,3.536,524,3.536,525,3.536,526,2.785,527,3.536,528,3.536,529,3.083,530,2.385,531,3.536]],["title/interfaces/CheckoutForm.html",[0,0.171,435,2.75]],["body/interfaces/CheckoutForm.html",[0,0.28,2,1.152,3,0.226,4,0.226,5,0.168,24,0.15,25,0.33,26,1.119,29,0.356,30,0.013,31,0.28,32,0.01,33,0.01,40,0.664,120,3.629,121,3.403,122,3.629,123,3.629,124,3.403,125,3.629,429,3.629,430,4.239,431,4.239,432,7.406,433,5.97,434,3.403,435,4.499,436,5.493,437,5.493,438,4.522,439,3.883,440,4.073]],["title/classes/Configuration.html",[15,0.282,145,2.089]],["body/classes/Configuration.html",[0,0.078,3,0.078,4,0.078,5,0.058,10,1.21,15,0.128,18,1.21,19,0.637,24,0.051,25,0.151,26,1.239,29,0.369,30,0.013,31,0.128,32,0.005,33,0.005,38,0.766,39,2.163,40,0.377,49,1.169,64,1.927,66,1.726,78,1.822,96,0.71,109,3.642,110,2.178,126,2.061,131,0.8,135,1.177,137,1.729,138,0.939,140,2.827,141,1.399,145,2.569,147,1.169,152,3.779,164,2.405,167,2.827,182,0.981,191,1.13,194,0.699,195,1.236,221,1.504,224,1.344,248,1.494,520,3.055,532,1.169,533,1.456,534,3.95,535,3.95,536,3.055,537,5.267,538,3.95,539,3.283,540,3.055,541,3.568,542,3.283,543,3.054,544,3.054,545,3.054,546,3.054,547,3.054,548,1.246,549,2.662,550,3.382,551,3.054,552,5.211,553,4.593,554,4.707,555,1.848,556,4.71,557,1.848,558,1.848,559,3.402,560,3.402,561,3.402,562,3.073,563,3.402,564,3.402,565,3.402,566,3.073,567,3.402,568,2.827,569,3.402,570,3.402,571,3.402,572,3.283,573,1.848,574,4.71,575,3.402,576,2.327,577,2.467,578,3.283,579,3.402,580,2.827,581,2.827,582,3.055,583,1.848,584,3.402,585,3.402,586,2.467,587,1.848,588,1.848,589,1.848,590,2.662,591,4.129,592,1.848,593,2.662,594,1.848,595,2.405,596,3.95,597,5.94,598,3.914,599,2.662,600,4.141,601,2.662,602,2.662,603,2.662,604,2.662,605,2.662,606,2.662,607,2.405,608,2.662,609,1.848,610,2.695,611,2.662,612,1.848,613,3.95,614,5.211,615,3.283,616,6.444,617,2.56,618,3.95,619,3.283,620,4.33,621,4.71,622,3.568,623,2.662,624,2.035,625,3.283,626,3.283,627,5.211,628,3.95,629,3.95,630,2.662,631,1.848,632,1.339,633,1.612,634,3.568,635,1.612,636,1.612,637,1.612,638,1.612,639,1.612,640,1.612,641,3.95,642,1.612,643,1.339,644,1.612,645,1.612,646,1.612,647,1.339,648,1.612,649,2.662,650,2.662,651,1.612,652,2.662,653,2.662,654,1.339,655,1.612,656,2.662,657,2.213,658,2.662,659,1.612,660,1.612,661,2.662,662,1.612,663,1.612,664,1.612,665,1.612,666,1.612,667,1.612,668,1.612,669,2.662,670,1.612,671,1.612,672,1.612,673,1.612,674,1.612,675,1.456,676,1.612,677,1.456,678,1.612,679,1.612,680,1.612,681,1.612,682,1.456,683,1.612,684,2.662,685,1.169,686,1.169,687,1.612,688,2.059,689,1.456,690,1.339,691,1.612,692,1.612,693,1.612,694,1.612,695,1.612,696,1.456,697,1.612,698,1.612,699,1.612,700,3.402,701,1.339,702,1.612,703,1.612]],["title/interfaces/ConfigurationParameters.html",[0,0.171,550,2.75]],["body/interfaces/ConfigurationParameters.html",[0,0.091,2,0.464,3,0.091,4,0.091,5,0.068,15,0.15,18,1.351,19,0.747,24,0.06,25,0.172,26,1.258,29,0.363,30,0.013,31,0.146,32,0.005,33,0.005,38,0.899,39,2.352,40,0.429,49,1.371,64,2.095,66,1.226,78,2.075,96,0.833,109,3.52,110,2.205,126,2.065,137,1.477,140,3.61,141,0.852,145,1.781,147,1.371,152,2.815,164,2.739,167,3.155,182,0.696,191,0.628,194,0.997,195,1.314,221,1.635,224,1.5,248,2.438,520,2.345,533,1.708,534,4.755,535,4.755,536,3.677,537,5.599,538,4.755,539,3.951,540,3.677,541,4.295,542,3.951,549,1.891,550,2.936,552,5.542,553,4.634,554,5.005,556,5.075,559,3.796,560,3.796,561,3.796,562,3.429,563,3.796,564,3.796,565,3.796,566,3.429,567,3.796,568,3.155,569,3.796,570,3.796,571,3.796,572,3.61,574,5.075,575,3.796,576,2.597,577,2.199,578,3.61,579,3.796,580,3.155,581,3.155,582,3.677,584,3.796,585,3.796,586,2.753,590,1.891,591,4.1,593,1.891,595,1.708,596,3.032,597,5.331,598,3.155,599,1.891,600,3.61,601,1.891,602,1.891,603,1.891,604,1.891,605,1.891,606,1.891,607,1.708,608,1.891,610,2.676,611,1.891,613,3.032,614,4.344,615,2.52,616,5.865,617,1.965,618,3.032,619,2.52,620,3.61,621,3.796,622,2.739,623,1.891,624,1.562,625,2.52,626,2.52,627,4.344,628,3.032,629,3.032,630,1.891,632,2.52,633,3.032,634,3.923,635,1.891,636,1.891,637,1.891,638,1.891,639,1.891,640,1.891,641,4.344,642,1.891,643,1.571,644,1.891,645,1.891,646,1.891,647,1.571,648,1.891,649,3.032,650,3.032,651,1.891,652,3.032,653,3.032,654,1.571,655,1.891,656,3.032,657,2.52,658,3.032,659,1.891,660,1.891,661,3.032,662,1.891,663,1.891,664,1.891,665,1.891,666,1.891,667,1.891,668,1.891,669,3.032,670,1.891,671,1.891,672,1.891,673,1.891,674,1.891,675,1.708,676,1.891,677,1.708,678,1.891,679,1.891,680,1.891,681,1.891,682,1.708,683,1.891,684,3.032,685,1.371,686,1.371,687,1.891,688,2.345,689,1.708,690,1.571,691,1.891,692,1.891,693,1.891,694,1.891,695,1.891,696,1.708,697,1.891,698,1.891,699,1.891,700,3.796,701,1.571,702,1.891,703,1.891]],["title/classes/CustomHttpParameterCodec.html",[15,0.282,704,2.75]],["body/classes/CustomHttpParameterCodec.html",[3,0.206,4,0.206,5,0.154,10,1.524,15,0.339,24,0.136,26,1.229,29,0.335,30,0.013,31,0.206,32,0.01,33,0.01,40,0.606,110,2.275,126,2.138,131,1.649,135,1.229,137,1.986,138,1.274,141,1.796,147,3.106,532,3.106,582,5.113,704,4.247,705,4.282,706,4.563,707,6.298,708,6.298,709,3.559,710,6.298,711,6.298,712,6.298,713,6.298,714,6.298,715,4.911,716,4.563,717,6.298,718,4.911,719,6.298,720,6.298,721,4.911,722,6.298,723,4.911,724,4.911,725,4.911,726,4.911,727,4.911]],["title/components/DateTimeComponent.html",[169,0.903,220,1.566]],["body/components/DateTimeComponent.html",[3,0.178,4,0.178,5,0.133,7,1.548,15,0.293,24,0.118,25,0.283,29,0.194,30,0.013,31,0.178,32,0.009,33,0.009,40,0.706,54,0.877,135,0.711,138,0.993,148,2.28,169,1.432,170,1.628,171,2.196,172,1.757,173,1.757,174,1.757,176,1.691,177,2.37,178,2.37,179,3.422,180,1.691,181,2.37,182,1.836,184,1.628,185,1.628,186,2.37,188,2.37,190,1.694,194,0.97,195,0.877,200,1.757,205,1.691,206,2.37,207,2.37,208,1.757,209,2.87,210,1.757,211,1.757,212,3.281,213,1.757,214,1.628,215,1.757,216,1.628,217,1.757,218,1.569,219,1.757,220,2.659,221,2.397,222,1.757,223,1.628,224,1.46,225,1.757,226,1.757,227,1.569,228,1.752,229,2.37,230,1.569,231,2.37,232,1.628,233,1.757,234,1.628,235,2.151,236,1.628,237,1.628,238,1.757,239,1.628,240,1.187,241,1.628,242,1.757,243,1.757,295,2.79,318,1.757,419,4.142,421,2.858,688,3.855,728,4.985,729,4.985,730,3.696,731,5.717,732,5.717,733,7.229,734,5.64,735,4.239,736,5.717,737,5.717,738,4.985,739,4.985]],["title/components/FormErrorComponent.html",[169,0.903,223,1.566]],["body/components/FormErrorComponent.html",[3,0.163,4,0.163,5,0.122,7,1.46,15,0.372,24,0.108,25,0.267,29,0.246,30,0.013,31,0.163,32,0.008,33,0.008,40,0.764,54,0.805,135,0.904,138,1.161,148,2.15,163,4.246,169,1.369,170,1.495,171,2.071,172,1.613,173,1.613,174,1.613,176,1.552,177,2.235,178,2.235,179,3.388,180,1.552,181,2.235,182,1.731,184,1.495,185,1.495,186,2.235,188,2.235,190,1.9,194,1.234,195,1.115,200,1.613,205,1.552,206,2.235,207,2.235,208,1.613,209,2.769,210,1.613,211,1.613,212,3.246,213,1.613,214,1.495,215,1.613,216,1.495,217,1.613,218,1.44,219,1.613,220,1.495,221,1.166,222,1.613,223,2.566,224,2.653,225,1.613,226,1.613,227,1.44,228,1.675,229,2.235,230,1.44,231,2.235,232,1.495,233,1.613,234,1.495,235,2.057,236,1.495,237,1.495,238,1.613,239,1.495,240,1.09,241,1.495,242,1.613,243,1.613,295,2.668,318,1.613,419,3.906,421,2.623,434,2.461,438,3.216,734,6.116,740,5.394,741,5.394,742,3.393,743,3.216,744,5.391,745,5.391,746,5.083,747,7.014,748,3.891,749,3.906,750,4.246,751,5.391,752,3.891,753,5.391,754,3.891,755,3.635,756,3.393,757,3.891,758,3.891,759,3.891,760,3.393,761,3.891,762,5.391,763,3.891,764,3.891,765,3.891]],["title/interfaces/GetOrderByIdRequest.html",[0,0.171,766,3.212]],["body/interfaces/GetOrderByIdRequest.html",[0,0.248,2,1.264,3,0.248,4,0.248,5,0.185,9,3.339,10,1.833,11,1.027,12,1.965,13,2.035,14,2.187,15,0.488,16,2.187,17,2.109,18,1.833,19,2.035,20,2.614,21,2.614,22,2.109,23,2.187,24,0.164,25,0.349,26,1.184,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011,100,2.482,228,1.6,766,5.562,767,4.653]],["title/interfaces/GetProductByIdRequest.html",[0,0.171,768,3.212]],["body/interfaces/GetProductByIdRequest.html",[0,0.248,2,1.264,3,0.248,4,0.248,5,0.185,9,3.339,10,1.833,11,1.027,12,1.965,13,2.035,14,2.187,15,0.488,16,2.187,17,2.109,18,1.833,19,2.035,20,2.614,21,2.614,22,2.109,23,2.187,24,0.164,25,0.349,26,1.184,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011,100,2.482,235,1.965,767,4.653,768,5.562]],["title/interfaces/HttpValidationProblemDetails.html",[0,0.171,769,2.955]],["body/interfaces/HttpValidationProblemDetails.html",[0,0.198,2,1.01,3,0.198,4,0.198,5,0.148,10,1.464,11,0.82,12,1.569,13,1.626,14,1.747,15,0.424,16,1.747,17,1.685,18,1.464,19,1.626,20,2.272,21,2.272,22,1.685,23,1.747,24,0.131,25,0.304,26,1.373,28,1.363,29,0.374,30,0.013,31,0.198,32,0.01,33,0.01,38,3.441,126,2.102,135,0.791,248,3.004,610,3.665,624,2.12,746,5.234,750,4.834,769,4.447,770,5.352,771,4.447,772,3.42,773,4.568,774,5.234,775,4.871,776,5.689,777,3.717,778,3.717]],["title/interfaces/ImageResponse.html",[0,0.171,779,2.955]],["body/interfaces/ImageResponse.html",[0,0.245,2,1.249,3,0.245,4,0.245,5,0.183,10,1.811,11,1.014,12,1.941,13,2.011,14,2.161,15,0.484,16,2.161,17,2.084,18,1.811,19,2.011,20,2.595,21,2.595,22,2.084,23,2.161,24,0.162,25,0.347,29,0.32,30,0.013,31,0.245,32,0.011,33,0.011,119,2.517,126,2.05,138,1.354,779,5.08,780,5.09,781,7.795]],["title/injectables/KeycloakService.html",[255,1.033,259,2.75]],["body/injectables/KeycloakService.html",[3,0.189,4,0.189,5,0.14,15,0.31,24,0.125,25,0.294,29,0.205,30,0.013,31,0.189,32,0.009,33,0.009,39,1.937,40,0.822,53,1.301,54,0.929,68,1.791,69,1.663,85,3.41,87,4.016,89,2.3,96,2.282,109,2.3,110,2.349,126,1.137,131,1.556,135,1.315,141,1.735,182,1.442,190,1.983,191,1.929,194,1.36,195,1.229,244,4.49,247,4.884,253,3.254,255,1.504,257,1.862,259,4.006,262,3.916,265,5.134,266,5.581,267,5.134,595,4.68,654,5.134,782,3.916,783,5.942,784,4.825,785,5.806,786,4.491,787,4.491,788,4.491,789,4.491,790,5.942,791,4.491,792,5.942,793,4.491,794,4.491,795,4.491,796,4.491,797,3.916,798,4.491,799,3.254,800,4.491,801,4.491,802,4.491,803,4.491,804,4.491,805,4.491,806,5.942,807,4.491,808,4.491,809,4.491,810,4.491,811,4.491,812,4.491]],["title/interfaces/MonitoredUser.html",[0,0.171,813,2.955]],["body/interfaces/MonitoredUser.html",[0,0.26,2,1.326,3,0.26,4,0.26,5,0.194,24,0.172,25,0.359,26,1.218,28,1.54,29,0.283,30,0.013,31,0.26,32,0.011,33,0.011,100,2.466,813,5.263,814,5.403,815,5.403]],["title/interfaces/MonitoringConfig.html",[0,0.171,816,2.955]],["body/interfaces/MonitoringConfig.html",[0,0.249,2,1.267,3,0.249,4,0.249,5,0.185,24,0.165,25,0.35,29,0.346,30,0.013,31,0.297,32,0.011,33,0.011,39,2.554,40,0.731,54,1.225,64,2.275,96,2.275,126,1.791,246,4.292,248,3.461,249,4.665,816,5.125,817,4.665,818,5.675,819,5.164,820,5.164,821,5.923,822,4.292,823,5.164]],["title/injectables/MonitoringFacade.html",[255,1.033,824,2.955]],["body/injectables/MonitoringFacade.html",[3,0.221,4,0.221,5,0.165,15,0.363,24,0.146,25,0.325,26,0.883,29,0.241,30,0.013,31,0.221,32,0.01,33,0.01,40,0.929,53,1.525,54,1.089,64,2.022,68,2.1,69,1.949,110,1.633,116,2.436,131,1.723,135,1.103,137,1.426,138,0.915,141,1.289,190,1.88,194,1.205,195,1.089,240,2.011,255,1.666,257,2.182,799,5.45,813,5.45,818,3.815,819,5.738,820,5.738,822,3.815,824,4.769,825,4.59,826,6.581,827,6.581,828,5.265,829,6.581,830,5.265,831,5.265,832,4.59,833,5.265,834,5.265,835,5.265,836,5.265,837,5.265]],["title/components/NavigationComponent.html",[169,0.903,184,1.566]],["body/components/NavigationComponent.html",[3,0.135,4,0.135,5,0.1,7,1.273,8,2.218,11,1.064,12,1.563,15,0.324,24,0.155,25,0.232,26,0.538,29,0.215,30,0.013,31,0.135,32,0.007,33,0.007,40,0.923,53,0.93,54,0.664,116,1.74,126,1.408,131,1.23,135,1.179,137,0.869,138,0.966,141,0.786,148,1.874,169,1.231,170,1.232,171,1.805,172,1.33,173,1.33,174,1.33,176,1.28,177,1.948,178,1.948,179,3.301,180,1.28,181,1.948,182,1.509,184,2.351,185,1.232,186,1.948,188,1.948,190,2.096,191,1.972,194,1.558,195,1.408,200,1.33,201,1.441,203,2.325,205,1.28,206,1.948,207,1.948,208,1.33,209,2.537,210,1.33,211,1.33,212,3.158,213,1.33,214,2.351,215,1.33,216,1.232,217,1.33,218,1.188,219,1.33,220,1.232,221,0.962,222,1.33,223,1.232,224,1.105,225,1.33,226,1.33,227,1.188,228,1.506,229,1.948,230,1.188,231,1.948,232,1.232,233,1.33,234,1.232,235,1.849,236,1.232,237,2.351,238,1.33,239,2.351,240,1.316,241,2.136,242,1.33,243,1.33,295,2.398,296,3.142,297,3.749,318,1.33,323,3.405,324,3.405,326,2.798,329,4.097,353,2.029,423,3.168,446,4.435,465,3.405,489,2.527,743,2.803,838,2.798,839,4.097,840,4.097,841,4.435,842,3.651,843,5.681,844,6.515,845,5.56,846,4.699,847,4.699,848,3.209,849,4.699,850,4.699,851,3.209,852,3.405,853,3.209,854,3.209,855,4.699,856,3.516,857,3.209,858,4.699,859,3.209,860,4.699,861,3.209,862,3.209,863,2.163,864,2.325,865,2.798,866,3.209,867,3.209,868,2.527,869,3.209,870,2.527,871,2.325,872,3.209,873,3.209,874,2.798,875,2.527,876,6.121,877,4.699,878,4.097,879,4.097]],["title/interfaces/NavigationConfig.html",[0,0.171,880,3.212]],["body/interfaces/NavigationConfig.html",[0,0.233,2,1.186,3,0.233,4,0.233,5,0.173,24,0.154,25,0.336,29,0.253,30,0.013,31,0.309,32,0.011,33,0.011,40,0.839,54,1.146,64,2.822,96,2.129,110,1.719,153,4.365,201,2.49,249,4.365,799,4.016,880,5.351,881,4.365,882,4.365,883,7.297,884,5.924,885,5.924,886,5.351,887,4.833,888,4.365,889,4.833,890,4.833,891,4.833]],["title/classes/NavigationItem.html",[15,0.282,892,2.75]],["body/classes/NavigationItem.html",[3,0.189,4,0.189,5,0.141,11,0.782,15,0.411,24,0.125,25,0.294,26,1.236,28,1.474,29,0.376,30,0.013,31,0.25,32,0.009,33,0.009,40,0.734,126,1.957,135,1.27,137,1.219,138,0.782,152,4.622,190,1.857,228,2.092,248,3.261,271,4.663,532,2.846,548,4.494,586,2.846,632,4.311,856,4.791,863,4.781,864,3.26,892,4.494,893,6.086,894,3.544,895,4.972,896,5.21,897,6.737,898,4.311,899,3.923,900,5.949,901,4.011,902,4.5,903,4.5,904,4.5,905,4.5,906,3.26,907,3.923,908,3.923,909,3.923,910,3.034,911,3.923]],["title/injectables/NavigationService.html",[255,1.033,841,2.955]],["body/injectables/NavigationService.html",[3,0.191,4,0.191,5,0.142,8,1.812,11,0.789,15,0.314,24,0.126,25,0.296,26,0.761,29,0.338,30,0.013,31,0.191,32,0.009,33,0.009,40,0.879,53,1.316,54,0.939,64,2.299,68,1.812,69,1.681,96,2.734,110,1.409,131,1.567,135,1.122,137,1.23,138,0.789,141,1.112,190,1.989,191,2.143,194,1.37,195,1.238,255,1.516,256,4.501,257,1.883,271,4.501,284,4.714,841,4.337,843,5.838,856,2.872,863,4.987,864,3.291,865,3.96,892,4.987,906,3.291,910,4.799,912,3.96,913,5.986,914,5.986,915,4.542,916,4.714,917,4.542,918,5.986,919,5.986,920,3.785,921,5.986,922,5.986,923,4.036,924,5.219,925,4.542,926,4.542,927,5.986,928,4.542,929,4.542,930,4.542,931,4.542,932,4.542,933,4.542,934,4.542,935,3.577,936,4.542,937,4.542]],["title/classes/NoReuseStrategy.html",[15,0.282,938,2.955]],["body/classes/NoReuseStrategy.html",[3,0.208,4,0.208,5,0.155,15,0.341,24,0.137,26,0.828,29,0.226,30,0.013,31,0.208,32,0.01,33,0.01,38,2.89,39,3.351,40,0.61,66,3.94,75,5.491,110,2.357,116,2.341,131,1.656,135,1.274,137,1.338,138,0.859,141,1.86,201,2.22,532,3.125,709,3.573,938,4.581,939,6.776,940,6.776,941,3.892,942,6.079,943,6.409,944,7.35,945,7.35,946,6.323,947,5.789,948,4.941,949,6.972,950,4.941,951,4.941,952,6.323,953,7.9,954,4.941,955,4.941,956,4.941]],["title/injectables/OrderApi.html",[255,1.033,957,2.75]],["body/injectables/OrderApi.html",[3,0.062,4,0.062,5,0.046,7,0.398,10,0.782,15,0.102,24,0.041,25,0.125,26,1.086,28,1.269,29,0.342,30,0.013,31,0.062,32,0.004,33,0.004,38,2.245,39,3.302,40,0.698,53,0.426,54,0.304,63,0.878,64,1.27,66,2.714,68,0.587,69,0.545,95,1.972,96,2.08,100,2.134,109,3.523,110,1.754,126,1.762,131,0.66,135,1.105,137,1.637,138,1.079,141,1.436,145,3.377,146,3.782,147,0.93,152,4.311,182,0.809,191,1.391,194,1.008,195,1.504,221,0.991,228,1.06,240,1.097,248,3.278,255,0.638,257,0.61,370,0.754,536,3.954,539,2.837,542,1.826,548,1.699,572,2.837,576,0.878,577,0.93,582,2.229,591,2.627,598,3.479,600,4.249,610,3.249,615,1.826,617,2.213,619,1.826,624,0.661,643,1.066,647,1.066,657,2.837,685,0.93,686,0.93,701,1.826,704,1.699,716,1.826,749,2.837,755,2.64,784,2.837,896,5.077,898,2.837,901,4.867,923,2.64,957,1.699,958,5.84,959,0.992,960,2.882,961,2.197,962,2.197,963,6.207,964,6.35,965,1.283,966,2.197,967,2.197,968,6.243,969,1.471,970,2.197,971,1.471,972,3.916,973,6.565,974,1.471,975,3.916,976,3.916,977,3.916,978,3.916,979,6.425,980,3.084,981,2.336,982,6.189,983,5.649,984,3.589,985,4.187,986,3.414,987,3.414,988,3.414,989,3.414,990,3.414,991,1.471,992,1.471,993,1.471,994,3.916,995,1.471,996,1.471,997,1.471,998,1.471,999,2.197,1000,1.471,1001,1.283,1002,2.882,1003,1.471,1004,1.283,1005,1.283,1006,5.537,1007,3.839,1008,3.839,1009,1.066,1010,1.283,1011,1.066,1012,1.066,1013,2.52,1014,0.831,1015,1.066,1016,1.066,1017,0.992,1018,1.283,1019,1.283,1020,2.197,1021,2.882,1022,1.283,1023,1.283,1024,1.283,1025,2.229,1026,3.414,1027,1.159,1028,1.283,1029,1.283,1030,2.197,1031,1.283,1032,1.066,1033,2.197,1034,1.283,1035,1.283,1036,1.283,1037,4.722,1038,5.113,1039,5.113,1040,5.113,1041,5.113,1042,4.187,1043,2.197,1044,5.412,1045,2.197,1046,1.826,1047,2.197,1048,2.197,1049,2.197,1050,4.722,1051,2.197,1052,4.722,1053,2.197,1054,5.113,1055,3.414,1056,2.197,1057,2.197,1058,2.197,1059,1.471,1060,2.197,1061,2.197,1062,2.197,1063,2.197,1064,1.826,1065,1.283,1066,1.283,1067,1.471,1068,1.159,1069,0.992,1070,0.992,1071,1.066]],["title/injectables/OrderDataService.html",[255,1.033,1072,2.955]],["body/injectables/OrderDataService.html",[3,0.17,4,0.17,5,0.126,11,0.702,15,0.279,24,0.112,25,0.274,26,1.231,28,1.261,29,0.336,30,0.013,31,0.17,32,0.009,33,0.009,40,0.878,49,2.555,50,3.182,51,3.182,53,1.171,54,0.836,61,1.893,62,2.928,63,2.41,64,1.552,68,1.612,69,1.496,85,3.76,87,4.095,89,2.069,100,1.253,106,5.151,110,2.278,131,1.449,135,1.26,137,1.988,138,1.276,141,1.798,190,1.652,191,1.603,194,0.925,195,0.836,255,1.401,257,1.675,370,4.123,388,2.928,530,3.731,709,2.283,957,4.576,1072,4.009,1073,6.674,1074,3.182,1075,4.358,1076,4.825,1077,4.825,1078,4.825,1079,4.825,1080,4.825,1081,4.04,1082,4.825,1083,4.04,1084,4.825,1085,5.346,1086,3.523,1087,4.009,1088,4.825,1089,4.04,1090,4.825,1091,4.04,1092,4.825,1093,4.04,1094,4.825,1095,3.523,1096,4.825,1097,4.04,1098,4.04,1099,4.04,1100,4.04,1101,5.502,1102,5.502,1103,5.502]],["title/components/OrderDetailComponent.html",[169,0.903,227,1.51]],["body/components/OrderDetailComponent.html",[3,0.115,4,0.115,5,0.086,7,1.13,8,1.664,11,0.879,15,0.189,24,0.076,25,0.206,26,0.459,29,0.125,30,0.013,31,0.115,32,0.006,33,0.006,40,0.87,53,0.793,54,0.566,61,1.282,109,2.589,110,0.849,114,4.098,116,2.093,131,1.092,135,1.153,137,0.741,138,0.879,141,1.021,148,1.664,169,1.119,170,1.051,171,1.602,172,1.134,173,1.134,174,1.134,176,1.091,177,1.729,178,1.729,179,3.22,180,1.091,181,1.729,182,1.34,184,1.051,185,1.051,186,1.729,188,1.729,190,2.047,191,1.993,194,1.469,195,1.327,200,1.134,201,1.229,205,1.091,206,1.729,207,1.729,208,1.134,209,2.344,210,1.134,211,1.134,212,3.076,213,1.134,214,1.051,215,1.134,216,1.051,217,1.134,218,1.013,219,1.134,220,2.172,221,0.82,222,1.134,223,1.051,224,0.942,225,1.134,226,1.134,227,2.093,228,2.129,229,1.729,230,1.013,231,1.729,232,2.172,233,1.134,234,1.051,235,1.681,236,1.051,237,1.051,238,1.134,239,1.051,240,2.076,241,1.051,242,1.134,243,1.134,295,2.18,296,2.857,318,1.134,331,3.285,332,3.827,340,3.576,366,3.285,370,2.896,377,3.285,423,2.813,425,3.637,426,3.637,427,3.285,447,3.196,467,2.813,480,3.023,482,2.155,486,1.983,709,2.358,773,2.638,1104,5.55,1105,6.145,1106,2.155,1107,3.409,1108,3.637,1109,3.637,1110,4.931,1111,4.098,1112,4.098,1113,4.172,1114,2.736,1115,4.172,1116,3.576,1117,2.736,1118,3.637,1119,2.386,1120,2.386,1121,4.172,1122,2.386,1123,2.386,1124,4.172,1125,2.736,1126,2.386,1127,2.386,1128,2.736,1129,2.736,1130,2.386,1131,1.983,1132,2.386,1133,2.736,1134,2.736,1135,2.386,1136,2.736,1137,4.172,1138,3.637,1139,3.637,1140,3.637,1141,3.637,1142,3.637,1143,3.637,1144,3.637,1145,3.637,1146,4.172,1147,4.172,1148,4.172,1149,4.172]],["title/injectables/OrderFacade.html",[255,1.033,340,2.579]],["body/injectables/OrderFacade.html",[3,0.193,4,0.193,5,0.144,11,0.798,15,0.317,24,0.128,25,0.298,26,1.129,28,1.523,29,0.308,30,0.013,31,0.193,32,0.009,33,0.009,40,0.831,53,1.331,54,0.95,61,2.152,68,1.832,69,1.701,100,1.871,110,2.089,116,2.821,131,1.579,135,1.302,137,1.823,138,1.17,141,1.866,190,1.763,191,1.747,194,1.052,195,0.95,228,1.244,255,1.527,257,1.904,340,3.814,342,6.233,353,4.911,370,3.661,1135,5.258,1150,4.005,1151,5.63,1152,4.37,1153,6.233,1154,5.258,1155,6.233,1156,6.031,1157,4.594,1158,4.594,1159,4.75,1160,4.594,1161,6.031,1162,4.594,1163,4.594,1164,4.594,1165,6.031,1166,4.594,1167,4.594,1168,4.594,1169,4.594,1170,4.594,1171,4.594,1172,4.594,1173,4.594]],["title/interfaces/OrderItemResponse.html",[0,0.171,1174,2.955]],["body/interfaces/OrderItemResponse.html",[0,0.225,2,1.146,3,0.225,4,0.225,5,0.168,8,2.137,10,1.662,11,0.931,12,1.782,13,1.846,14,1.983,15,0.459,16,1.983,17,1.913,18,1.662,19,1.846,20,2.463,21,2.463,22,1.913,23,1.983,24,0.149,25,0.329,27,4.787,28,1.665,29,0.363,30,0.013,31,0.225,32,0.01,33,0.01,73,5.103,119,2.311,126,2.009,362,4.515,410,6.6,411,6.6,412,6.6,1174,4.821,1175,3.613]],["title/components/OrderListComponent.html",[169,0.903,230,1.51]],["body/components/OrderListComponent.html",[3,0.126,4,0.126,5,0.094,7,1.21,8,1.782,11,0.776,15,0.207,24,0.191,25,0.221,28,0.599,29,0.137,30,0.013,31,0.126,32,0.007,33,0.007,40,0.85,53,0.868,54,0.62,114,3.238,116,1.11,131,1.17,135,1.114,138,0.776,141,0.734,148,1.782,169,1.183,170,1.151,171,1.717,172,1.243,173,1.243,174,1.243,176,1.196,177,1.852,178,1.852,179,3.267,180,1.196,181,1.852,182,1.435,184,1.151,185,1.151,186,1.852,188,1.852,190,2.036,191,1.716,194,1.45,195,1.31,200,1.243,201,1.346,205,1.196,206,1.852,207,1.852,208,1.243,209,2.455,210,1.243,211,1.243,212,3.124,213,1.243,214,1.151,215,1.243,216,1.151,217,1.243,218,1.11,219,1.243,220,2.275,221,0.899,222,1.243,223,1.151,224,1.033,225,1.243,226,1.243,227,1.11,228,2.07,229,1.852,230,2.192,231,1.852,232,2.275,233,1.243,234,1.151,235,1.777,236,1.151,237,1.151,238,1.243,239,1.151,240,1.86,241,1.151,242,1.243,243,1.243,295,2.304,296,3.019,297,3.603,318,1.243,332,2.666,340,3.745,366,3.519,378,3.238,423,3.993,447,3.347,467,3.013,480,3.238,482,2.361,486,2.172,709,2.525,923,4.271,1014,2.525,1104,5.419,1107,3.603,1112,4.291,1127,2.614,1130,2.614,1131,2.172,1132,2.614,1138,3.896,1139,3.896,1140,3.896,1141,3.896,1142,3.896,1143,3.896,1144,3.896,1145,3.896,1176,6,1177,2.361,1178,3.896,1179,3.896,1180,6.881,1181,2.998,1182,2.614,1183,2.614,1184,3.896,1185,2.614,1186,4.469,1187,2.998,1188,2.998,1189,2.998,1190,5.164,1191,4.469,1192,6.642,1193,4.469]],["title/interfaces/OrderListResponse.html",[0,0.171,1012,2.955]],["body/interfaces/OrderListResponse.html",[0,0.257,2,1.309,3,0.257,4,0.257,5,0.191,24,0.17,25,0.357,29,0.28,30,0.013,31,0.257,32,0.011,33,0.011,40,0.755,119,2.638,228,1.657,302,4.474,370,3.133,624,3.443,984,3.458,1012,5.224,1014,3.458,1175,4.125]],["title/interfaces/OrderResponse.html",[0,0.171,370,2.089]],["body/interfaces/OrderResponse.html",[0,0.228,2,1.159,3,0.228,4,0.228,5,0.169,8,2.161,24,0.151,25,0.331,28,1.641,29,0.364,30,0.013,31,0.228,32,0.01,33,0.01,40,0.827,100,2.357,119,2.337,126,1.842,228,1.814,302,4.294,370,3.431,624,3.267,775,5.265,984,3.062,1174,3.926,1175,3.653,1194,6.625,1195,5.506,1196,6.625,1197,5.985]],["title/components/OrderStatusComponent.html",[169,0.903,232,1.566]],["body/components/OrderStatusComponent.html",[3,0.169,4,0.169,5,0.126,7,1.495,11,0.7,15,0.381,24,0.112,25,0.273,30,0.013,31,0.169,32,0.009,33,0.009,40,0.778,54,0.833,61,1.887,135,0.926,138,0.959,148,2.202,169,1.394,170,1.547,171,2.121,172,1.669,173,1.669,174,1.669,176,1.606,177,2.289,178,2.289,179,3.402,180,1.606,181,2.289,182,2.023,184,1.547,185,1.547,186,2.289,188,2.289,190,1.65,200,1.669,205,1.606,206,2.289,207,2.289,208,1.669,209,2.81,210,1.669,211,1.669,212,3.26,213,1.669,214,1.547,215,1.669,216,1.547,217,1.669,218,1.491,219,1.669,220,1.547,221,1.207,222,1.669,223,1.547,224,1.387,225,1.669,226,1.669,227,1.491,228,2.101,229,2.289,230,1.491,231,2.289,232,2.603,233,1.669,234,1.547,235,2.095,236,1.547,237,1.547,238,1.669,239,1.547,240,1.128,241,1.547,242,1.669,243,1.669,295,2.717,318,1.669,419,2.918,421,2.715,743,3.293,755,4.248,756,3.511,760,3.511,775,5.232,871,2.918,878,4.814,1131,4.565,1195,2.918,1197,3.172,1198,5.493,1199,3.511,1200,5.521,1201,5.521,1202,5.521,1203,5.521,1204,4.027,1205,4.027,1206,4.027,1207,3.511,1208,4.027,1209,4.027,1210,4.027,1211,4.027,1212,4.027,1213,3.511,1214,4.814,1215,4.027,1216,4.027,1217,5.521,1218,4.027,1219,4.027,1220,5.521,1221,3.511,1222,4.027,1223,4.027]],["title/interfaces/Param.html",[0,0.171,591,2.433]],["body/interfaces/Param.html",[0,0.174,2,0.887,3,0.174,4,0.174,5,0.13,10,1.286,18,2.128,24,0.115,25,0.278,28,0.828,29,0.369,30,0.013,31,0.324,32,0.009,33,0.009,39,2.958,109,3.275,126,1.916,135,1.072,138,1.192,195,1.419,221,1.688,224,1.428,240,1.161,291,3.264,540,2.795,568,5.197,576,2.472,577,4.044,578,3.003,586,2.621,591,3.358,624,1.862,625,4.633,634,4.434,685,2.621,686,4.338,688,2.795,690,3.003,706,3.003,895,2.795,981,3.358,1025,2.795,1046,3.003,1068,5.402,1069,5.192,1070,5.192,1071,3.003,1224,3.264,1225,5.63,1226,5.402,1227,5.402,1228,4.434,1229,3.614,1230,3.614,1231,3.614,1232,3.614,1233,4.144,1234,3.614,1235,3.614,1236,3.614,1237,3.614,1238,4.909,1239,4.434,1240,3.614,1241,4.144,1242,3.614,1243,3.614,1244,4.434,1245,3.614,1246,3.614,1247,3.614,1248,3.614,1249,3.614]],["title/injectables/PermissionService.html",[255,1.033,260,2.75]],["body/injectables/PermissionService.html",[3,0.208,4,0.208,5,0.155,15,0.343,24,0.138,25,0.313,26,0.832,29,0.227,30,0.013,31,0.208,32,0.01,33,0.01,39,3.013,40,0.862,53,1.438,54,1.026,64,1.906,66,2.804,68,1.979,69,1.837,110,1.967,131,1.66,135,1.171,137,1.344,138,0.862,141,1.215,190,2.037,191,1.837,194,1.451,195,1.311,255,1.605,257,2.057,259,4.963,260,4.274,263,5.527,270,5.527,271,4.92,272,6.418,278,5.527,283,4.326,284,3.908,290,5.527,291,4.993,610,2.666,924,5.527,1250,4.326,1251,6.986,1252,4.962,1253,4.962,1254,4.962,1255,4.962,1256,6.339,1257,4.962,1258,4.962]],["title/injectables/PrintInvoiceService.html",[255,1.033,1111,2.955]],["body/injectables/PrintInvoiceService.html",[3,0.084,4,0.084,5,0.063,11,0.348,15,0.138,24,0.056,26,1.125,28,0.4,29,0.307,30,0.013,31,0.084,32,0.005,33,0.005,40,0.787,54,0.414,61,0.938,64,2.369,68,0.798,69,0.741,96,0.769,116,2.735,131,0.854,135,1.125,137,1.817,138,1.189,141,1.643,182,0.643,221,0.977,228,1.886,240,1.657,255,0.825,257,0.83,370,3.566,689,1.576,738,1.745,739,1.745,896,5.421,981,1.944,1111,2.362,1116,3.741,1190,1.745,1207,5.969,1213,4.145,1259,5.969,1260,1.745,1261,3.26,1262,3.26,1263,3.26,1264,3.26,1265,3.26,1266,3.26,1267,3.26,1268,3.26,1269,3.26,1270,4.124,1271,3.26,1272,3.26,1273,6.92,1274,5.863,1275,4.621,1276,2.001,1277,6.845,1278,3.26,1279,2.001,1280,3.26,1281,5.573,1282,2.001,1283,3.26,1284,2.001,1285,3.26,1286,2.001,1287,3.26,1288,2.001,1289,3.26,1290,2.001,1291,3.26,1292,5.484,1293,4.751,1294,2.001,1295,3.26,1296,2.001,1297,2.001,1298,2.001,1299,3.26,1300,2.001,1301,2.001,1302,2.001,1303,2.001,1304,1.745,1305,2.001,1306,2.001,1307,2.001,1308,1.576,1309,2.001,1310,2.001,1311,2.001,1312,3.26,1313,2.001,1314,2.001,1315,2.001,1316,3.26,1317,2.001,1318,2.001,1319,2.001,1320,2.001,1321,2.001,1322,2.001,1323,2.001,1324,2.001,1325,2.001,1326,7.319,1327,3.26,1328,8.209,1329,3.26,1330,2.842,1331,2.842,1332,2.842,1333,2.001,1334,2.001,1335,2.001,1336,3.26,1337,4.419,1338,4.754,1339,5.611,1340,2.001,1341,2.001,1342,2.001,1343,6.381,1344,6.071,1345,5.611,1346,2.001,1347,2.001,1348,2.001,1349,2.001,1350,2.001,1351,1.745,1352,2.001,1353,2.001,1354,2.001,1355,1.35,1356,5.916,1357,2.001,1358,2.001,1359,2.001,1360,2.001,1361,2.001,1362,2.001,1363,2.001,1364,2.001,1365,2.001,1366,1.35,1367,4.754,1368,2.001,1369,2.001,1370,3.26,1371,4.754,1372,4.145,1373,2.001,1374,3.26,1375,2.001,1376,4.124,1377,2.001,1378,4.124,1379,3.26,1380,3.26,1381,2.001,1382,3.26,1383,2.001,1384,2.001,1385,2.001,1386,2.001,1387,2.001,1388,2.001,1389,2.001,1390,2.001,1391,2.001,1392,2.001,1393,4.124,1394,2.001,1395,2.001,1396,4.563,1397,2.001,1398,2.001,1399,2.001,1400,2.001,1401,2.001,1402,1.745,1403,2.001,1404,2.842,1405,2.001,1406,2.001,1407,1.745,1408,2.001,1409,2.001,1410,2.001,1411,2.001]],["title/interfaces/ProblemDetails.html",[0,0.171,1412,2.955]],["body/interfaces/ProblemDetails.html",[0,0.207,2,1.053,3,0.207,4,0.207,5,0.154,10,1.527,11,0.855,12,1.636,13,1.695,14,1.822,15,0.435,16,1.822,17,1.757,18,1.527,19,1.695,20,2.334,21,2.334,22,1.757,23,1.822,24,0.137,25,0.312,26,1.364,28,1.391,29,0.369,30,0.013,31,0.207,32,0.01,33,0.01,38,3.457,126,2.104,135,0.825,610,3.388,772,3.566,773,4.641,774,5.318,775,4.948,776,5.78,777,3.876,778,3.876,1412,4.569,1413,5.499]],["title/injectables/ProductApi.html",[255,1.033,1414,2.75]],["body/injectables/ProductApi.html",[3,0.063,4,0.063,5,0.047,7,0.404,10,0.791,15,0.103,24,0.041,25,0.126,26,1.091,28,1.275,29,0.343,30,0.013,31,0.063,32,0.004,33,0.004,38,2.259,39,3.309,40,0.728,53,0.432,54,0.308,63,0.89,64,1.283,66,2.734,68,0.595,69,0.552,95,1.992,96,2.093,100,2.018,109,3.535,110,1.765,126,1.768,131,0.668,135,1.11,137,1.646,138,1.084,141,1.444,145,3.391,146,3.81,147,0.943,152,4.32,182,0.819,191,1.402,194,1.016,195,1.508,221,1.001,248,3.29,255,0.645,257,0.618,536,3.975,539,2.863,542,1.847,548,1.719,576,0.89,577,0.943,581,1.08,582,2.251,591,2.648,598,3.505,600,4.272,610,3.265,615,1.847,617,2.233,619,1.847,624,0.67,643,1.08,647,1.08,657,2.863,685,0.943,686,0.943,701,1.847,704,1.719,716,1.847,749,2.863,755,2.664,771,1.08,896,5.089,898,2.863,901,4.881,920,3.446,959,1.005,960,2.911,961,2.223,962,2.223,965,1.3,966,1.3,967,2.223,968,6.262,970,2.223,973,6.58,979,6.442,980,3.112,981,2.357,982,6.208,983,5.673,984,3.605,985,4.218,986,3.445,987,3.445,988,3.445,989,3.445,990,3.445,999,2.223,1001,1.3,1002,2.911,1004,1.3,1005,1.3,1006,5.562,1007,4.218,1008,4.218,1009,1.08,1010,1.3,1011,1.08,1014,0.843,1015,1.08,1016,1.08,1017,1.005,1018,1.3,1019,1.3,1020,2.223,1021,2.911,1022,1.3,1023,1.3,1024,1.3,1025,2.251,1026,3.445,1027,1.174,1028,1.3,1029,1.3,1030,2.223,1031,1.3,1032,1.08,1033,2.223,1034,1.3,1035,1.3,1036,1.3,1037,4.751,1038,5.141,1039,5.141,1040,5.141,1041,5.141,1042,4.218,1043,2.223,1044,5.438,1045,2.223,1046,1.847,1047,2.223,1048,2.223,1049,2.223,1050,4.751,1051,2.223,1052,4.751,1053,2.223,1054,5.141,1055,3.445,1056,2.223,1057,2.223,1058,2.223,1060,2.223,1061,2.223,1062,2.223,1063,2.223,1064,1.847,1065,1.3,1066,1.3,1068,1.174,1069,1.005,1070,1.005,1071,1.08,1414,1.719,1415,5.862,1416,6.237,1417,6.379,1418,2.549,1419,1.491,1420,1.491,1421,3.951,1422,1.491,1423,1.491,1424,1.491,1425,1.491,1426,3.951,1427,1.491,1428,1.491,1429,1.491,1430,1.491,1431,1.491,1432,1.08,1433,2.549,1434,0.89,1435,1.08,1436,1.491,1437,1.491,1438,1.491]],["title/injectables/ProductDataService.html",[255,1.033,1439,2.955]],["body/injectables/ProductDataService.html",[3,0.17,4,0.17,5,0.127,11,0.703,15,0.279,24,0.112,25,0.274,26,1.231,28,1.262,29,0.336,30,0.013,31,0.17,32,0.009,33,0.009,40,0.878,49,2.559,50,3.188,51,3.188,53,1.173,54,0.837,61,1.896,62,2.933,63,2.414,64,1.555,68,1.614,69,1.498,85,3.235,87,4.096,89,2.073,100,1.256,106,4.921,110,2.279,131,1.451,135,1.261,137,1.989,138,1.276,141,1.799,190,1.654,191,1.605,194,0.927,195,0.837,255,1.403,257,1.678,388,2.933,530,3.735,709,2.287,1074,3.188,1075,4.363,1076,4.83,1077,4.83,1078,4.83,1079,4.83,1080,4.83,1082,4.83,1084,4.83,1086,3.529,1087,4.014,1088,4.83,1090,4.83,1092,4.83,1095,3.529,1096,4.83,1101,5.922,1102,5.922,1103,5.922,1414,4.58,1434,4.803,1439,4.014,1440,6.677,1441,4.047,1442,4.047,1443,4.58,1444,4.047,1445,4.047,1446,4.047,1447,4.83,1448,3.529,1449,4.047,1450,4.047,1451,4.047]],["title/components/ProductDetailComponent.html",[169,0.903,234,1.566]],["body/components/ProductDetailComponent.html",[3,0.141,4,0.141,5,0.105,7,1.695,11,0.585,15,0.336,24,0.094,25,0.241,26,0.564,28,1.142,29,0.154,30,0.013,31,0.141,32,0.008,33,0.008,40,0.82,53,0.975,54,0.696,100,1.044,116,2.115,131,1.274,135,1.196,137,0.911,138,0.993,141,1.191,148,1.94,169,1.265,170,1.293,171,1.869,172,1.395,173,1.395,174,1.395,176,1.342,177,2.017,178,2.017,179,3.324,180,1.342,181,2.017,182,1.562,184,1.293,185,1.293,186,2.017,188,2.017,190,2.076,191,2.005,194,1.52,195,1.373,200,1.395,201,1.511,203,2.438,205,1.342,206,2.017,207,2.017,208,1.395,209,2.595,210,1.395,211,1.395,212,3.181,213,1.395,214,1.293,215,1.395,216,1.293,217,1.395,218,1.246,219,1.395,220,1.293,221,1.009,222,1.395,223,1.293,224,1.159,225,1.395,226,1.395,227,1.246,228,1.547,229,2.017,230,1.246,231,2.017,232,1.293,233,1.395,234,2.404,235,2.652,236,1.293,237,1.293,238,1.395,239,1.293,240,0.943,241,1.293,242,1.395,243,1.395,295,2.464,296,3.229,300,3.363,308,3.076,318,1.395,332,2.902,519,4.242,709,2.749,743,2.902,773,3.076,842,3.734,852,3.525,870,2.65,871,2.438,1106,2.65,1107,3.852,1108,4.242,1109,4.242,1110,5.458,1112,4.536,1118,4.242,1119,2.934,1120,2.934,1122,2.934,1123,2.934,1126,2.934,1152,3.525,1452,5.295,1453,6.371,1454,5.713,1455,4.865,1456,4.865,1457,3.365,1458,3.365,1459,4.865,1460,4.865,1461,2.65,1462,3.365,1463,3.365,1464,4.865,1465,4.865,1466,4.865]],["title/injectables/ProductFacade.html",[255,1.033,842,2.433]],["body/injectables/ProductFacade.html",[3,0.191,4,0.191,5,0.142,11,0.789,15,0.314,24,0.126,25,0.296,26,1.122,28,1.518,29,0.306,30,0.013,31,0.191,32,0.009,33,0.009,40,0.879,53,1.316,54,0.939,61,2.128,68,1.812,69,1.681,100,1.857,110,2.077,116,2.812,131,1.567,135,1.298,137,1.813,138,1.163,141,1.86,190,1.753,191,1.734,194,1.04,195,0.939,255,1.516,257,1.883,353,4.898,842,3.571,947,5.273,1087,4.337,1153,6.206,1154,5.219,1159,4.714,1434,2.709,1443,4.799,1448,3.96,1467,3.96,1468,5.986,1469,7.117,1470,7.117,1471,5.986,1472,4.542,1473,4.542,1474,5.219,1475,4.542,1476,4.542,1477,4.542,1478,5.986,1479,4.542,1480,5.986,1481,4.542,1482,3.577,1483,4.542,1484,4.542,1485,4.542,1486,4.542,1487,4.542,1488,4.542,1489,4.542]],["title/components/ProductListComponent.html",[169,0.903,236,1.566]],["body/components/ProductListComponent.html",[3,0.16,4,0.16,5,0.119,7,1.439,15,0.367,24,0.106,25,0.263,30,0.013,31,0.16,32,0.008,33,0.008,40,0.817,53,1.104,54,0.788,116,1.411,131,1.392,135,1.026,138,0.923,141,0.933,148,2.12,169,1.354,170,1.464,171,2.041,172,1.58,173,1.58,174,1.58,176,1.52,177,2.203,178,2.203,179,3.379,180,1.52,181,2.203,182,1.706,184,1.464,185,1.464,186,2.203,188,2.203,190,1.888,191,1.54,194,1.217,195,1.099,200,1.58,201,1.712,205,1.52,206,2.203,207,2.203,208,1.58,209,2.744,210,1.58,211,1.58,212,3.237,213,1.58,214,1.464,215,1.58,216,1.464,217,1.58,218,1.411,219,1.58,220,1.464,221,1.142,222,1.58,223,1.464,224,1.313,225,1.58,226,1.58,227,1.411,228,1.657,229,2.203,230,1.411,231,2.203,232,1.464,233,1.58,234,1.464,235,2.609,236,2.543,237,1.464,238,1.58,239,1.464,240,1.067,241,1.464,242,1.58,243,1.58,295,2.639,296,3.458,297,4.126,318,1.58,332,3.17,423,3.583,709,3.003,743,3.17,842,3.949,852,3.851,870,3.001,871,2.761,920,4.679,1014,3.003,1107,4.126,1112,4.797,1177,3.001,1178,4.634,1179,4.634,1182,3.323,1183,3.323,1185,3.323,1452,4.797,1461,3.001,1490,5.772,1491,5.314,1492,3.811,1493,5.314,1494,5.314,1495,5.314]],["title/interfaces/ProductListResponse.html",[0,0.171,1432,2.955]],["body/interfaces/ProductListResponse.html",[0,0.257,2,1.309,3,0.257,4,0.257,5,0.191,24,0.17,25,0.357,29,0.28,30,0.013,31,0.257,32,0.011,33,0.011,40,0.755,119,2.638,235,2.034,302,4.474,624,3.443,984,3.458,1014,3.458,1432,5.224,1434,3.65,1496,4.818]],["title/interfaces/ProductResponse.html",[0,0.171,1434,2.433]],["body/interfaces/ProductResponse.html",[0,0.227,2,1.154,3,0.227,4,0.227,5,0.169,10,2.353,24,0.15,25,0.33,28,1.588,29,0.368,30,0.013,31,0.227,32,0.01,33,0.01,40,0.666,100,2.353,119,2.326,126,2.012,138,1.318,450,5.975,624,3.569,779,5.497,875,5.975,984,3.048,1434,3.986,1496,4.248,1497,6.615,1498,7.587,1499,4.703]],["title/components/ProductSearchComponent.html",[169,0.903,237,1.566]],["body/components/ProductSearchComponent.html",[3,0.153,4,0.153,5,0.114,7,1.395,15,0.356,24,0.101,25,0.255,26,0.611,29,0.167,30,0.013,31,0.153,32,0.008,33,0.008,40,0.845,53,1.056,54,0.754,116,2.403,126,1.512,131,1.349,135,1.148,137,0.987,138,1.19,141,1.261,148,2.054,169,1.322,170,1.4,171,1.978,172,1.511,173,1.511,174,1.511,176,1.454,177,2.135,178,2.135,179,3.36,180,1.454,181,2.135,182,1.654,184,1.4,185,1.4,186,2.135,188,2.135,190,1.987,191,1.881,194,1.367,195,1.235,200,1.511,201,1.637,205,1.454,206,2.135,207,2.135,208,1.511,209,2.691,210,1.511,211,1.511,212,3.217,213,1.511,214,1.4,215,1.511,216,1.4,217,1.511,218,1.349,219,1.511,220,1.4,221,1.092,222,1.511,223,1.4,224,1.255,225,1.511,226,1.511,227,1.349,228,1.617,229,2.135,230,1.349,231,2.135,232,1.4,233,1.511,234,1.4,235,2.523,236,1.4,237,2.493,238,1.511,239,1.4,240,1.021,241,1.4,242,1.511,243,1.511,295,2.576,296,3.375,318,1.511,434,2.305,446,4.703,465,3.732,489,2.87,743,3.072,842,3.872,852,3.732,874,3.178,901,2.457,1337,2.87,1343,3.178,1372,3.178,1443,4.027,1452,5.15,1461,2.87,1500,6.197,1501,3.178,1502,5.66,1503,5.972,1504,5.15,1505,5.15,1506,6.491,1507,5.15,1508,3.644,1509,5.15,1510,3.644,1511,3.644,1512,3.644,1513,5.15,1514,3.644,1515,3.644,1516,3.644,1517,3.644,1518,3.178,1519,3.644,1520,5.15]],["title/interfaces/RemoveCartItemRequest.html",[0,0.171,1521,3.212]],["body/interfaces/RemoveCartItemRequest.html",[0,0.248,2,1.264,3,0.248,4,0.248,5,0.185,7,1.6,8,2.357,9,3.339,10,1.833,11,1.027,12,1.965,13,2.035,14,2.187,15,0.488,16,2.187,17,2.109,18,1.833,19,2.035,20,2.614,21,2.614,22,2.109,23,2.187,24,0.164,25,0.349,26,1.184,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011,100,2.428,1521,5.562,1522,5.152]],["title/interfaces/Request.html",[0,0.171,617,2.305]],["body/interfaces/Request.html",[0,0.251,2,1.28,3,0.251,4,0.251,5,0.187,10,1.856,11,1.039,12,1.989,13,2.06,14,2.214,15,0.491,16,2.214,17,2.135,18,1.856,19,2.06,20,2.634,21,2.634,22,2.135,23,2.214,24,0.166,25,0.352,29,0.273,30,0.012,31,0.251,32,0.011,33,0.011,126,1.923,617,4.021,1523,5.216,1524,7.858]],["title/classes/RouteItem.html",[15,0.282,856,2.579]],["body/classes/RouteItem.html",[3,0.187,4,0.187,5,0.139,11,0.772,15,0.407,24,0.123,25,0.292,26,1.11,28,1.467,29,0.375,30,0.013,31,0.248,32,0.009,33,0.009,40,0.728,126,1.95,135,1.265,137,1.203,138,0.772,152,4.613,190,1.847,194,1.017,195,0.919,228,2.086,248,3.241,271,4.644,532,2.809,548,4.465,586,2.809,632,4.274,856,4.871,863,4.757,864,3.218,892,5.274,893,4.645,894,3.498,895,4.951,896,5.193,897,6.716,898,3.218,899,3.873,901,2.995,906,3.218,907,3.873,908,5.143,909,5.143,910,2.995,911,3.873,1525,4.442,1526,7.343,1527,4.442,1528,4.442,1529,4.442,1530,4.442,1531,4.442]],["title/interfaces/ShoppingSessionResponse.html",[0,0.171,1532,3.212]],["body/interfaces/ShoppingSessionResponse.html",[0,0.245,2,1.249,3,0.245,4,0.245,5,0.183,7,1.581,8,2.328,24,0.162,25,0.347,28,1.618,29,0.343,30,0.013,31,0.245,32,0.011,33,0.011,40,0.721,58,3.299,99,3.936,100,2.418,119,2.517,302,4.405,624,3.375,984,3.299,1196,6.797,1532,5.522,1533,5.09]],["title/interfaces/UpdateCartItemQuantityRequest.html",[0,0.171,60,2.579]],["body/interfaces/UpdateCartItemQuantityRequest.html",[0,0.248,2,1.261,3,0.248,4,0.248,5,0.184,7,1.596,8,2.351,9,3.331,10,1.828,11,1.024,12,1.96,13,2.03,14,2.182,15,0.487,16,2.182,17,2.104,18,1.828,19,2.03,20,2.611,21,2.611,22,2.104,23,2.182,24,0.164,25,0.349,26,1.182,28,1.508,29,0.269,30,0.012,31,0.248,32,0.011,33,0.011,60,4.46,362,4.769,1534,3.727]],["title/interfaces/UpdateCartItemQuantityRequestWrapper.html",[0,0.171,1535,3.212]],["body/interfaces/UpdateCartItemQuantityRequestWrapper.html",[0,0.248,2,1.261,3,0.248,4,0.248,5,0.184,7,1.91,8,2.813,24,0.164,25,0.349,28,1.508,29,0.322,30,0.013,31,0.248,32,0.011,33,0.011,40,0.728,60,5.23,100,2.426,362,4.207,530,3.974,617,3.985,1534,3.727,1535,5.554,1536,5.139]],["title/interfaces/UpdateCartItemQuantityResponse.html",[0,0.171,1537,3.212]],["body/interfaces/UpdateCartItemQuantityResponse.html",[0,0.249,2,1.267,3,0.249,4,0.249,5,0.185,7,1.604,8,2.362,10,1.837,11,1.029,12,1.969,13,2.04,14,2.193,15,0.488,16,2.193,17,2.114,18,1.837,19,2.04,20,2.618,21,2.618,22,2.114,23,2.193,24,0.165,25,0.35,28,1.511,29,0.271,30,0.012,31,0.249,32,0.011,33,0.011,119,2.554,362,4.775,1534,3.746,1537,5.57]],["title/interfaces/UpdateUserAddressRequest.html",[0,0.171,487,2.579]],["body/interfaces/UpdateUserAddressRequest.html",[0,0.221,2,1.124,3,0.221,4,0.221,5,0.164,9,2.969,10,1.63,11,0.913,12,1.747,13,1.809,14,1.945,15,0.454,16,1.945,17,1.875,18,1.63,19,1.809,20,2.433,21,2.433,22,1.875,23,1.945,24,0.146,25,0.325,26,1.102,29,0.361,30,0.013,31,0.221,32,0.01,33,0.01,38,2.973,120,5.068,121,4.753,122,5.068,123,5.068,124,4.753,125,5.068,126,2.142,240,1.471,440,2.822,487,4.156,1534,3.322]],["title/interfaces/UpdateUserPhoneRequest.html",[0,0.171,1538,2.75]],["body/interfaces/UpdateUserPhoneRequest.html",[0,0.245,2,1.246,3,0.245,4,0.245,5,0.182,9,3.291,10,1.806,11,1.012,12,1.936,13,2.006,14,2.156,15,0.483,16,2.156,17,2.079,18,1.806,19,2.006,20,2.592,21,2.592,22,2.079,23,2.156,24,0.162,25,0.346,26,1.174,29,0.266,30,0.013,31,0.245,32,0.011,33,0.011,38,3.112,126,1.901,240,1.631,439,4.081,1534,3.682,1538,4.72]],["title/injectables/UserFacade.html",[255,1.033,447,2.305]],["body/injectables/UserFacade.html",[3,0.202,4,0.202,5,0.15,11,0.835,15,0.332,24,0.134,25,0.307,26,1.041,29,0.284,30,0.013,31,0.202,32,0.01,33,0.01,40,0.849,53,1.392,54,0.993,61,2.25,68,1.916,69,1.778,85,4.117,87,3.95,89,3.524,110,1.49,131,1.626,135,1.262,137,1.681,138,1.079,141,1.781,190,1.801,191,1.799,194,1.1,195,0.993,255,1.572,257,1.991,353,4.351,439,2.46,440,2.581,447,3.509,487,4.599,1116,3.038,1538,4.904,1539,4.189,1540,5.728,1541,6.341,1542,7.273,1543,6.209,1544,6.209,1545,4.804,1546,4.804,1547,6.209,1548,4.804,1549,6.209,1550,4.804,1551,6.209,1552,4.804,1553,4.804,1554,4.804,1555,4.804,1556,4.804,1557,4.804]],["title/components/UserNavigationComponent.html",[169,0.903,239,1.566]],["body/components/UserNavigationComponent.html",[3,0.134,4,0.134,5,0.099,7,1.264,11,0.961,15,0.219,24,0.088,25,0.231,30,0.013,31,0.134,32,0.007,33,0.007,40,0.801,53,0.921,54,0.657,85,3.759,87,3.475,89,3.324,131,1.222,135,1.206,138,0.811,141,1.354,148,1.862,169,1.224,170,1.221,171,1.793,172,1.318,173,1.318,174,1.318,176,1.268,177,1.935,178,1.935,179,3.297,180,1.268,181,1.935,182,1.499,184,1.221,185,1.221,186,1.935,188,1.935,190,2.057,191,1.966,194,1.486,195,1.342,200,1.318,203,2.303,205,1.268,206,1.935,207,1.935,208,1.318,209,2.526,210,1.318,211,1.318,212,3.153,213,1.318,214,1.221,215,1.318,216,1.221,217,1.318,218,1.177,219,1.318,220,1.221,221,0.953,222,1.318,223,1.221,224,1.095,225,1.318,226,1.318,227,1.177,228,1.498,229,1.935,230,1.177,231,1.935,232,1.221,233,1.318,234,1.221,235,1.839,236,1.221,237,1.221,238,1.318,239,2.341,240,1.964,241,2.124,242,1.318,243,1.318,256,3.854,265,4.415,266,4.799,267,5.212,295,2.385,300,3.274,308,2.952,318,1.318,421,2.144,447,3.444,467,3.147,480,3.382,486,2.303,839,4.07,840,4.07,868,5.781,906,2.303,916,3.676,1558,6.4,1559,2.772,1560,7.012,1561,5.53,1562,3.179,1563,3.179,1564,3.179,1565,3.179,1566,3.179,1567,3.179,1568,3.179,1569,4.667,1570,4.07,1571,5.53,1572,3.179,1573,3.179,1574,4.667,1575,3.179,1576,3.179,1577,6.094,1578,4.667,1579,6.094,1580,6.272,1581,4.415]],["title/interfaces/UserPhoneResponse.html",[0,0.171,1582,3.212]],["body/interfaces/UserPhoneResponse.html",[0,0.246,2,1.255,3,0.246,4,0.246,5,0.183,10,1.82,11,1.019,12,1.95,13,2.02,14,2.171,15,0.485,16,2.171,17,2.094,18,1.82,19,2.02,20,2.603,21,2.603,22,2.094,23,2.171,24,0.163,25,0.348,29,0.268,30,0.013,31,0.246,32,0.011,33,0.011,38,3.122,119,2.53,126,1.907,439,4.089,1582,5.538,1583,4.62]],["title/interfaces/UserResponse.html",[0,0.171,1116,2.579]],["body/interfaces/UserResponse.html",[0,0.226,2,1.152,3,0.226,4,0.226,5,0.168,24,0.15,25,0.33,26,1.271,28,1.449,29,0.363,30,0.013,31,0.226,32,0.01,33,0.01,38,3.006,40,0.664,100,2.352,117,5.493,119,2.321,126,2.111,436,5.493,437,5.493,438,4.522,439,3.883,440,4.187,984,3.042,1116,4.219,1583,4.239]],["title/interfaces/ValidationProblemDetails.html",[0,0.171,1435,2.955]],["body/interfaces/ValidationProblemDetails.html",[0,0.199,2,1.014,3,0.199,4,0.199,5,0.148,10,1.47,11,0.823,12,1.575,13,1.632,14,1.754,15,0.425,16,1.754,17,1.691,18,1.47,19,1.632,20,2.278,21,2.278,22,1.691,23,1.754,24,0.132,25,0.304,26,1.374,28,1.366,29,0.375,30,0.013,31,0.199,32,0.01,33,0.01,38,3.442,126,2.103,135,0.794,248,3.011,610,3.672,624,2.128,746,5.242,771,4.459,772,3.433,773,4.575,774,5.242,775,4.878,776,5.698,777,3.732,778,3.732,1435,4.459,1584,5.366]],["title/changelog.html",[1585,2.681,1586,2.681,1587,2.681]],["body/changelog.html",[5,0.121,7,1.458,13,1.338,17,1.387,18,1.205,30,0.008,32,0.008,33,0.008,224,1.338,228,1.458,235,1.292,240,1.508,241,1.492,247,3.406,336,3.631,407,3.387,439,1.99,440,2.087,530,4.168,553,2.619,554,3.059,580,2.815,677,3.059,746,2.815,773,2.457,784,2.815,920,2.457,981,3.982,1014,2.195,1032,5.08,1152,5.578,1351,3.387,1355,2.619,1366,3.631,1499,4.696,1587,3.059,1588,3.884,1589,3.884,1590,3.387,1591,3.884,1592,3.387,1593,7.255,1594,8.202,1595,3.884,1596,5.39,1597,5.82,1598,4.696,1599,3.884,1600,3.884,1601,3.884,1602,3.884,1603,3.387,1604,3.884,1605,3.884,1606,3.884,1607,3.884,1608,6.611,1609,3.884,1610,3.884,1611,3.884,1612,3.884,1613,3.884,1614,6.485,1615,3.884,1616,6.181,1617,6.181,1618,7.582,1619,3.884,1620,3.884,1621,5.385,1622,3.884,1623,3.884,1624,3.884,1625,3.884,1626,3.884,1627,3.884,1628,3.884,1629,3.884,1630,3.884,1631,3.884,1632,3.884,1633,3.884,1634,3.884,1635,3.884,1636,3.884,1637,3.884,1638,3.884,1639,3.884,1640,3.884,1641,7.01,1642,6.181,1643,3.884,1644,3.884,1645,6.675,1646,3.884,1647,5.385,1648,3.884,1649,3.884,1650,3.884,1651,3.884,1652,4.696,1653,5.385,1654,3.884,1655,3.387,1656,3.884,1657,7.01,1658,3.884,1659,3.884,1660,3.387,1661,3.884,1662,3.387,1663,3.387,1664,3.884,1665,3.387,1666,3.884,1667,3.884,1668,3.884,1669,5.385,1670,3.884,1671,3.884,1672,3.884,1673,5.385,1674,3.884,1675,3.884,1676,3.884,1677,3.884,1678,5.385,1679,3.884,1680,3.884,1681,3.884,1682,5.385,1683,5.385,1684,4.241,1685,3.884,1686,3.884,1687,3.884,1688,3.884,1689,5.39,1690,3.387,1691,3.387,1692,3.884,1693,3.387,1694,3.387]],["title/coverage.html",[1695,4.855]],["body/coverage.html",[0,0.334,1,1.324,5,0.061,6,2.528,7,1.506,8,2.341,9,3.316,15,0.358,29,0.342,30,0.013,32,0.005,33,0.005,34,1.423,35,3.206,58,1.11,59,1.423,60,1.242,65,3.206,67,1.423,78,5.034,96,0.754,99,2.164,100,0.996,117,1.423,118,1.713,119,2.988,140,1.423,145,1.006,169,1.578,170,0.754,175,1.713,184,0.754,185,0.754,192,1.547,214,0.754,216,0.754,218,0.727,220,0.754,223,0.754,227,0.727,228,0.532,230,0.727,232,0.754,234,0.754,235,0.653,236,0.754,237,0.754,239,0.754,240,0.899,244,1.324,245,2.528,246,3.406,253,1.423,255,1.826,256,1.242,258,1.713,259,1.324,260,1.324,294,1.713,300,1.055,321,1.423,323,2.326,324,2.326,339,1.713,340,1.242,362,2.428,370,1.006,395,1.713,396,1.713,397,1.713,409,1.713,413,1.713,414,1.713,429,1.324,430,2.528,431,2.528,435,1.324,439,1.644,440,1.055,441,1.713,447,1.11,487,1.242,533,2.528,550,1.324,591,1.172,617,1.814,704,1.324,705,1.713,728,1.713,729,1.713,730,1.713,740,1.713,741,1.713,742,1.713,750,1.547,766,1.547,767,2.528,768,1.547,769,1.423,770,1.713,771,2.326,772,2.949,779,1.423,780,1.713,782,1.713,813,1.423,814,1.713,815,1.713,816,1.423,817,2.528,822,1.423,824,1.423,825,1.713,838,1.713,841,1.423,842,1.172,856,1.242,868,1.547,880,1.547,881,3.206,882,3.206,886,1.547,888,1.547,892,1.324,893,2.528,894,2.528,912,1.713,938,1.423,939,1.713,940,1.713,941,1.547,957,1.324,958,1.713,959,3.75,1009,1.423,1011,1.423,1012,1.423,1014,1.814,1015,1.423,1016,1.423,1069,1.324,1070,1.324,1072,1.423,1073,1.713,1074,2.528,1085,1.547,1104,2.528,1105,1.713,1106,2.528,1111,1.423,1116,1.242,1131,1.423,1150,1.713,1151,1.547,1174,1.423,1175,2.745,1176,1.713,1177,2.528,1198,1.713,1199,1.713,1224,4.821,1226,1.547,1227,1.547,1228,1.547,1239,1.547,1244,1.547,1250,1.713,1259,1.713,1260,1.713,1274,1.423,1275,2.326,1281,2.326,1292,1.547,1293,1.423,1308,1.547,1355,1.324,1366,1.324,1412,1.423,1413,1.713,1414,1.324,1415,1.713,1432,1.423,1434,1.172,1435,1.423,1439,1.423,1440,1.713,1443,1.324,1452,2.949,1453,1.713,1467,1.713,1482,1.547,1490,1.713,1496,2.528,1500,1.713,1501,1.713,1521,1.547,1522,1.713,1523,1.713,1532,1.547,1533,1.713,1534,3.277,1535,1.547,1536,1.713,1537,1.547,1538,1.324,1539,1.713,1540,1.547,1558,1.713,1559,1.713,1582,1.547,1583,2.528,1584,1.713,1596,4.518,1614,4.098,1695,1.713,1696,1.547,1697,1.964,1698,1.964,1699,3.206,1700,7.893,1701,8.148,1702,7.421,1703,1.547,1704,5.182,1705,1.713,1706,1.713,1707,1.713,1708,1.713,1709,2.528,1710,1.547,1711,1.713,1712,4.7,1713,1.713,1714,1.713,1715,3.21,1716,1.964,1717,1.964,1718,1.964,1719,1.964,1720,1.713,1721,1.964,1722,5.936,1723,1.964,1724,1.964,1725,1.964,1726,6.516,1727,5.182,1728,3.21,1729,1.713,1730,1.964,1731,5.561,1732,5.868,1733,1.713,1734,1.964,1735,6.122,1736,5.561,1737,4.849,1738,5.561,1739,2.799,1740,1.964,1741,1.713,1742,1.713,1743,1.713,1744,1.713,1745,1.713,1746,1.713,1747,1.713,1748,1.964,1749,2.799,1750,1.964,1751,1.713,1752,4.098,1753,1.713,1754,1.713,1755,1.713,1756,1.713,1757,2.799,1758,3.21,1759,1.713,1760,4.098,1761,4.098,1762,1.713,1763,1.713,1764,1.713,1765,1.713,1766,1.713,1767,1.713,1768,1.713,1769,2.799,1770,2.799,1771,1.713,1772,1.713,1773,1.713,1774,1.964,1775,1.713,1776,2.799,1777,1.547,1778,1.964,1779,1.964,1780,3.206,1781,1.547,1782,1.964,1783,1.713]],["title/dependencies.html",[1784,2.968,1785,3.554]],["body/dependencies.html",[15,0.432,30,0.013,32,0.01,33,0.01,46,4.239,54,1.005,63,2.9,132,4.239,176,1.939,201,2.184,221,1.876,247,4.376,318,2.015,434,3.075,797,4.239,832,4.239,1273,4.239,1660,4.239,1785,3.523,1786,4.862,1787,8.055,1788,4.862,1789,4.862,1790,6.257,1791,5.456,1792,4.862,1793,4.862,1794,4.862,1795,4.862,1796,7.305,1797,4.862,1798,4.862,1799,4.862,1800,4.862,1801,4.862,1802,4.239,1803,4.862,1804,4.862,1805,4.862,1806,4.862,1807,4.862,1808,4.862,1809,4.862,1810,4.862,1811,6.257,1812,4.862,1813,4.862,1814,4.862,1815,4.862,1816,6.257,1817,4.862,1818,4.862,1819,4.862,1820,4.862,1821,4.862,1822,4.862,1823,4.862,1824,4.862,1825,4.862,1826,4.862,1827,4.862,1828,4.862,1829,4.862,1830,4.862,1831,6.257,1832,4.862,1833,4.862,1834,4.862,1835,4.862,1836,4.239,1837,4.862,1838,4.862,1839,4.862,1840,4.862,1841,4.862,1842,4.862,1843,4.862]],["title/miscellaneous/enumerations.html",[1844,1.924,1845,4.277]],["body/miscellaneous/enumerations.html",[11,1.007,12,1.927,13,1.996,14,2.145,15,0.482,16,2.145,17,2.069,18,1.798,19,1.996,20,2.584,21,2.584,22,2.069,23,2.145,24,0.161,30,0.013,32,0.011,33,0.011,195,1.608,271,4.414,785,6.087,863,4.707,910,4.707,941,5.498,1175,3.907,1195,5.058,1197,5.498,1221,6.087,1844,3.275,1845,5.053,1846,5.795,1847,6.981,1848,5.053,1849,6.981,1850,5.795,1851,5.795,1852,5.795]],["title/miscellaneous/functions.html",[1844,1.924,1853,4.277]],["body/miscellaneous/functions.html",[24,0.173,26,1.044,29,0.285,30,0.013,32,0.011,33,0.011,137,1.687,138,1.082,141,1.525,145,3.19,194,1.426,195,1.288,550,5.207,959,4.913,1709,4.905,1710,5.738,1844,3.52,1853,5.431,1854,5.431,1855,6.228]],["title/index.html",[24,0.095,1585,2.681,1586,2.681]],["body/index.html",[5,0.196,7,0.52,11,0.333,12,1.541,13,2.544,22,0.685,28,0.383,29,0.088,30,0.012,32,0.005,33,0.005,49,1.213,69,0.71,96,1.538,98,2.902,99,1.294,135,0.322,138,0.696,145,1.613,152,1.78,163,1.511,167,2.282,169,0.697,171,1.538,180,1.849,195,0.397,212,0.765,228,1.085,235,1.047,240,1.928,241,1.21,247,4.189,265,1.39,267,2.282,428,1.673,438,1.145,520,1.294,521,1.673,526,1.511,529,3.492,537,4.332,540,3.709,541,1.511,553,4.09,562,1.511,566,3.154,580,1.39,581,1.39,610,1.031,620,1.39,622,1.511,626,1.39,675,2.48,682,1.511,696,1.511,706,2.902,716,3.358,743,1.145,749,2.902,774,3.358,784,2.902,818,4.685,875,1.511,879,4.041,920,2.533,923,2.123,935,1.511,943,1.673,1017,1.294,1064,1.39,1075,4.031,1152,2.902,1195,3.708,1366,1.294,1404,4.463,1407,1.673,1497,2.746,1502,1.673,1580,1.673,1587,2.48,1590,4.041,1597,1.673,1598,5.776,1603,1.673,1608,3.492,1652,4.463,1655,1.673,1662,1.673,1663,1.673,1665,2.746,1684,1.511,1689,2.746,1690,2.746,1691,1.673,1693,2.746,1694,4.041,1696,3.65,1783,2.746,1785,1.39,1791,1.673,1836,4.796,1856,1.673,1857,3.149,1858,1.919,1859,1.919,1860,4.635,1861,3.149,1862,1.919,1863,1.919,1864,4.005,1865,3.149,1866,5.118,1867,1.919,1868,1.919,1869,3.149,1870,3.149,1871,5.5,1872,3.149,1873,4.005,1874,3.149,1875,1.511,1876,3.149,1877,1.919,1878,3.149,1879,1.919,1880,1.919,1881,1.919,1882,1.919,1883,1.919,1884,1.919,1885,4.635,1886,1.919,1887,1.919,1888,1.919,1889,5.5,1890,1.919,1891,1.919,1892,1.919,1893,1.919,1894,5.118,1895,1.919,1896,1.919,1897,1.919,1898,5.118,1899,1.919,1900,1.919,1901,3.149,1902,3.149,1903,1.919,1904,1.919,1905,1.919,1906,3.149,1907,3.149,1908,1.919,1909,1.919,1910,1.919,1911,1.919,1912,1.919,1913,1.919,1914,1.919,1915,3.149,1916,3.149,1917,1.919,1918,1.919,1919,1.919,1920,5.81,1921,6.066,1922,1.919,1923,1.919,1924,1.919,1925,1.919,1926,4.635,1927,1.919,1928,1.919,1929,1.919,1930,4.635,1931,4.005,1932,1.919,1933,1.919,1934,1.919,1935,1.919,1936,1.919,1937,3.149,1938,4.635,1939,1.919,1940,1.919,1941,1.919,1942,5.118,1943,1.919,1944,1.919,1945,6.066,1946,1.919,1947,6.465,1948,1.919,1949,3.149,1950,6.762,1951,3.149,1952,4.005,1953,1.919,1954,6.066,1955,1.919,1956,1.919,1957,5.5,1958,3.149,1959,1.919,1960,5.81,1961,1.919,1962,3.149,1963,3.149,1964,7.386,1965,1.919,1966,1.919,1967,1.919,1968,3.149,1969,3.149,1970,1.919,1971,5.81,1972,1.919,1973,1.919,1974,1.919,1975,1.919,1976,1.919,1977,1.919,1978,1.919,1979,1.919,1980,1.919,1981,1.919,1982,1.919,1983,5.5,1984,4.005,1985,3.149,1986,3.149,1987,6.465,1988,4.005,1989,1.673,1990,1.919,1991,1.919,1992,3.149,1993,1.919,1994,5.118,1995,1.919,1996,1.919,1997,1.919,1998,1.919,1999,1.919,2000,1.919,2001,3.149,2002,4.635,2003,1.919,2004,3.149,2005,1.919,2006,1.919,2007,1.919,2008,1.919,2009,1.919,2010,1.919,2011,1.919,2012,1.919,2013,1.919,2014,3.149,2015,1.919,2016,1.919,2017,1.919,2018,4.005,2019,1.919,2020,3.149,2021,1.919,2022,1.673,2023,1.919,2024,3.149,2025,1.919,2026,1.919,2027,1.919,2028,5.118,2029,1.919,2030,1.919,2031,3.149,2032,1.919,2033,1.919,2034,1.919,2035,3.149,2036,1.919,2037,3.149,2038,1.919,2039,1.919,2040,1.919,2041,1.919,2042,1.919,2043,1.919,2044,1.919,2045,1.919,2046,1.919,2047,1.919,2048,1.673,2049,3.149,2050,1.919,2051,1.919,2052,1.919,2053,1.919,2054,1.919,2055,1.673,2056,1.919,2057,1.919,2058,1.919,2059,4.635,2060,1.919,2061,4.635,2062,1.919,2063,1.919,2064,1.919,2065,1.919,2066,1.919,2067,6.066,2068,4.005,2069,4.005,2070,4.635,2071,4.005,2072,5.81,2073,4.635,2074,3.149,2075,4.635,2076,1.673,2077,3.149,2078,1.919,2079,3.149,2080,1.919,2081,3.149,2082,4.463,2083,1.919,2084,1.919,2085,1.919,2086,1.919,2087,1.919,2088,4.635,2089,1.919,2090,1.919,2091,3.149,2092,1.919,2093,1.919,2094,5.118,2095,4.005,2096,1.919,2097,1.919,2098,3.149,2099,3.149,2100,3.149,2101,1.919,2102,1.919,2103,1.919,2104,1.919,2105,1.919,2106,3.149,2107,1.919,2108,4.005,2109,1.919,2110,5.118,2111,1.919,2112,1.919,2113,1.919,2114,4.635,2115,1.919,2116,1.919,2117,3.149,2118,1.919,2119,1.919,2120,5.118,2121,3.149,2122,1.919,2123,1.919,2124,1.919,2125,1.919,2126,1.919,2127,1.919,2128,1.919,2129,1.919,2130,1.919,2131,4.635,2132,1.919,2133,1.919,2134,1.919,2135,1.919,2136,4.005,2137,3.149,2138,4.635,2139,1.919,2140,1.919,2141,1.919,2142,1.919,2143,1.919,2144,1.919,2145,1.919,2146,1.919,2147,1.919,2148,1.919,2149,1.919,2150,1.919,2151,1.919,2152,1.919,2153,1.919,2154,5.118,2155,1.919,2156,1.919,2157,1.919,2158,1.919,2159,1.919,2160,1.919,2161,1.919,2162,1.919,2163,1.919,2164,1.919,2165,1.919,2166,1.919,2167,2.902,2168,1.919,2169,1.919,2170,1.511]],["title/license.html",[1585,2.681,1586,2.681,2167,2.466]],["body/license.html",[30,0.01,32,0.01,33,0.01,553,4.45,607,4.164,980,4.164,1581,3.831,1593,4.61,1696,4.164,1802,4.61,2022,4.61,2055,4.61,2076,4.61,2167,3.831,2170,4.164,2171,7.194,2172,5.288,2173,5.288,2174,5.288,2175,6.599,2176,5.288,2177,5.288,2178,5.288,2179,5.288,2180,5.288,2181,5.288,2182,6.599,2183,8.176,2184,5.288,2185,5.288,2186,5.288,2187,7.194,2188,5.288,2189,6.599,2190,5.288,2191,5.288,2192,5.288,2193,5.288,2194,5.288,2195,5.288,2196,5.288,2197,5.288,2198,6.599,2199,5.288,2200,5.288,2201,5.288,2202,5.288,2203,5.288,2204,5.288,2205,6.599,2206,6.599,2207,5.288,2208,5.288,2209,5.288,2210,5.288,2211,5.288,2212,5.288,2213,5.288,2214,5.288,2215,5.288,2216,5.288,2217,5.288,2218,5.288,2219,5.288,2220,5.288,2221,5.288,2222,5.288,2223,5.288,2224,5.288,2225,5.288,2226,5.288,2227,5.288,2228,5.288,2229,5.288,2230,5.288,2231,5.288,2232,5.288]],["title/modules.html",[129,4.386]],["body/modules.html",[30,0.012,32,0.012,33,0.012,128,5.158,129,5.158,626,4.746,2048,5.711,2233,6.549]],["title/overview.html",[1875,4.386]],["body/overview.html",[2,1.34,30,0.011,32,0.011,33,0.011,127,6.372,149,5.459,150,5.459,151,4.931,171,2.405,205,2.497,257,2.595,378,4.536,532,3.959,1184,5.459,1355,4.221,1581,4.536,1729,5.459,1733,5.459,1785,4.536,1875,4.931,2234,6.261,2235,7.308,2236,6.261]],["title/properties.html",[25,0.243,1784,2.968]],["body/properties.html",[25,0.322,30,0.013,32,0.012,33,0.012,1592,5.68,2082,5.68,2167,4.72,2170,5.13]],["title/miscellaneous/typealiases.html",[1844,1.924,2237,4.905]],["body/miscellaneous/typealiases.html",[6,3.31,7,1.539,18,2.236,24,0.117,28,0.84,29,0.362,30,0.013,32,0.009,33,0.009,39,1.812,119,2.451,126,1.747,135,1.157,221,1.704,224,1.447,240,1.177,248,3.831,540,2.833,568,5.382,576,2.507,577,3.594,578,4.118,586,2.657,624,1.887,625,4.666,685,2.657,688,2.833,690,3.045,706,3.045,769,3.045,895,2.833,981,3.39,1009,4.118,1011,4.118,1025,2.833,1046,3.045,1069,3.832,1070,3.832,1071,3.045,1085,4.476,1224,3.31,1226,4.476,1227,4.476,1228,5.072,1229,3.664,1230,3.664,1231,3.664,1232,3.664,1234,3.664,1235,3.664,1236,4.955,1237,3.664,1238,4.955,1239,5.072,1240,3.664,1242,3.664,1243,3.664,1244,5.072,1245,3.664,1246,3.664,1247,3.664,1248,3.664,1249,3.664,1274,4.118,1275,4.118,1281,4.118,1293,4.118,1412,3.045,1443,3.832,1699,3.31,1703,4.476,1751,3.664,1752,6.622,1753,4.955,1762,3.664,1763,4.955,1764,3.664,1765,4.955,1766,3.664,1767,3.664,1768,4.955,1769,3.664,1770,5.615,1771,4.955,1776,3.664,1777,4.476,1780,3.31,1781,4.476,1844,2.375,1848,3.664,2238,4.202,2239,4.202,2240,5.683,2241,3.664,2242,4.202,2243,4.202,2244,7.595,2245,4.202,2246,4.202,2247,5.683,2248,3.664,2249,4.202,2250,4.202,2251,4.202]],["title/miscellaneous/variables.html",[1017,3.308,1844,1.924]],["body/miscellaneous/variables.html",[1,0.971,11,0.43,12,0.823,24,0.04,27,0.911,28,1.162,29,0.288,30,0.013,32,0.004,33,0.004,34,1.044,35,1.135,36,2.158,37,1.669,38,0.597,39,0.621,42,3.791,43,1.256,44,1.256,47,2.837,52,3.681,56,2.837,58,1.399,59,1.793,60,0.911,64,2.517,65,3.739,66,1.839,67,1.793,68,1.734,69,1.609,70,2.837,71,1.256,72,1.256,73,0.971,74,2.158,75,1.949,76,2.158,77,1.256,78,3.343,79,1.256,80,1.256,81,1.256,82,3.366,83,3.366,84,1.135,85,2.978,86,1.135,87,2.747,88,1.256,89,3.356,90,1.256,91,4.676,92,1.256,93,1.256,94,1.256,95,2.594,96,2.153,97,2.837,98,2.357,99,2.194,100,1.349,101,1.256,102,2.562,103,1.256,104,1.256,105,1.256,106,1.793,107,1.256,108,1.256,109,1.977,110,2.191,111,2.837,112,1.256,113,1.256,114,1.044,115,1.135,116,0.533,121,1.565,124,0.911,138,0.25,145,1.268,151,1.135,153,4.223,154,1.256,169,0.72,182,1.524,192,1.949,193,2.158,194,1.74,195,1.566,218,0.533,221,0.432,227,0.533,228,0.39,230,0.533,235,0.479,240,1.33,244,0.971,245,1.135,246,2.797,247,0.911,253,2.357,254,1.256,256,1.565,260,0.971,280,1.256,300,0.774,308,0.911,323,2.797,324,2.797,336,1.669,378,3.681,388,1.044,427,1.949,438,0.859,439,1.268,440,1.748,446,2.357,447,0.814,450,1.949,465,1.044,467,0.971,487,0.911,520,0.971,526,4.414,536,0.971,572,1.044,576,3.03,620,1.793,654,2.357,686,4.07,755,0.971,799,3.681,816,1.044,817,1.135,818,1.044,822,2.357,823,1.256,824,1.044,881,1.135,882,2.562,883,3.791,884,1.256,885,3.366,886,2.562,887,1.256,888,2.562,889,1.256,890,1.256,891,3.791,895,2.603,910,2.194,916,1.949,920,2.442,923,1.669,935,1.135,938,1.044,942,1.256,947,1.135,957,1.669,959,1.669,981,1.941,1015,1.793,1016,1.793,1017,0.971,1025,0.971,1027,1.135,1032,1.044,1064,1.044,1072,1.044,1087,2.357,1094,1.256,1107,0.971,1151,1.949,1155,1.256,1159,1.949,1194,2.158,1214,1.256,1274,1.044,1275,2.357,1281,2.357,1292,1.949,1293,1.044,1304,1.256,1308,1.949,1330,4.139,1331,2.158,1332,2.158,1337,1.135,1344,1.256,1355,1.669,1366,0.971,1396,1.256,1402,1.256,1414,1.669,1439,1.044,1447,1.256,1474,2.158,1482,1.949,1518,1.256,1538,0.971,1540,1.949,1541,1.256,1570,4.43,1581,3.44,1684,1.949,1699,1.135,1703,1.135,1705,1.256,1706,2.158,1707,1.256,1708,2.837,1709,1.135,1710,1.135,1711,2.158,1713,1.256,1714,2.158,1720,2.158,1722,1.256,1737,2.158,1739,1.256,1741,1.256,1742,2.837,1743,1.256,1744,2.158,1745,1.256,1746,2.158,1747,2.837,1749,1.256,1754,1.256,1755,2.158,1756,2.837,1757,1.256,1759,1.256,1760,1.256,1761,3.791,1772,1.256,1773,2.158,1775,1.256,1777,1.135,1780,1.135,1781,1.135,1844,0.814,1854,1.256,1856,1.256,1989,2.158,2241,2.158,2248,2.158,2252,2.475,2253,2.475,2254,1.44,2255,1.44,2256,1.44,2257,1.44,2258,1.44,2259,2.475,2260,2.475,2261,3.861,2262,1.44,2263,3.861,2264,1.44,2265,1.44,2266,1.44,2267,1.44,2268,2.475,2269,3.861,2270,5.08,2271,2.475,2272,4.747,2273,3.861,2274,2.475,2275,2.475,2276,2.475,2277,3.253,2278,3.861,2279,2.475,2280,2.475,2281,1.44,2282,1.44,2283,1.44,2284,1.44,2285,1.44,2286,1.44,2287,1.44,2288,1.44,2289,1.44,2290,1.44,2291,1.44,2292,1.44,2293,1.44,2294,1.44,2295,1.44,2296,1.44,2297,1.44,2298,1.44,2299,1.44,2300,1.44,2301,2.475,2302,2.475,2303,1.44,2304,1.44,2305,1.44,2306,1.44,2307,1.44,2308,2.475,2309,1.44,2310,3.253,2311,3.253,2312,2.475,2313,2.475,2314,1.44,2315,1.44,2316,1.44,2317,1.44,2318,2.475,2319,1.44,2320,1.44,2321,1.44,2322,2.475,2323,1.44,2324,1.44,2325,1.44,2326,1.44,2327,1.44,2328,1.44,2329,1.44,2330,1.44,2331,1.44,2332,1.44,2333,1.44,2334,1.44,2335,2.475,2336,4.348,2337,1.44,2338,2.475,2339,1.44,2340,3.253,2341,1.44,2342,2.475,2343,2.475,2344,1.44,2345,1.44,2346,1.44,2347,1.44,2348,1.44,2349,4.348,2350,1.44,2351,1.44,2352,1.44,2353,1.44,2354,2.475,2355,2.475,2356,1.44,2357,1.44,2358,1.44,2359,1.44,2360,1.44,2361,1.44,2362,1.44,2363,1.44,2364,1.44,2365,1.44,2366,1.44,2367,1.44,2368,1.44,2369,1.44,2370,1.44,2371,1.44,2372,1.44,2373,1.44,2374,1.44,2375,1.44,2376,1.44,2377,1.44,2378,1.44,2379,1.44,2380,1.44,2381,1.44,2382,1.44,2383,1.44,2384,1.44,2385,1.44,2386,3.861,2387,2.475,2388,1.44,2389,1.44,2390,1.44,2391,1.44,2392,1.44,2393,1.44,2394,1.44,2395,1.44,2396,1.44,2397,1.44,2398,1.44,2399,2.475,2400,2.475,2401,1.44,2402,1.44,2403,1.44,2404,2.475,2405,1.44,2406,1.44,2407,1.44,2408,1.44,2409,1.44,2410,1.44,2411,1.44,2412,1.44,2413,1.44,2414,1.44,2415,1.44,2416,1.44,2417,1.44,2418,1.44,2419,1.44,2420,1.44,2421,1.44,2422,1.44,2423,1.44,2424,1.44,2425,1.44]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":78,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["0.0.1",{"_index":1677,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["0.14.10",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1666,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":1656,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":1648,"title":{},"body":{"changelog.html":{}}}],["0.3.10",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["0.3.11",{"_index":1633,"title":{},"body":{"changelog.html":{}}}],["0.3.12",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["0.3.13",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["0.3.14",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["0.3.15",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["0.3.16",{"_index":1624,"title":{},"body":{"changelog.html":{}}}],["0.3.17",{"_index":1615,"title":{},"body":{"changelog.html":{}}}],["0.3.18",{"_index":1613,"title":{},"body":{"changelog.html":{}}}],["0.3.19",{"_index":1606,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["0.3.20",{"_index":1602,"title":{},"body":{"changelog.html":{}}}],["0.3.21",{"_index":1601,"title":{},"body":{"changelog.html":{}}}],["0.3.22",{"_index":1595,"title":{},"body":{"changelog.html":{}}}],["0.3.23",{"_index":1592,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.3.3",{"_index":1644,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":1643,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["0.3.6",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["0.3.7",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["0.3.9",{"_index":1635,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1704,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1641,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1639,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1594,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1659,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1647,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":378,"title":{},"body":{"injectables/CartFacade.html":{},"components/OrderListComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.1",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1209,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["1.6.0",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1734,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1032,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.2",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":919,"title":{},"body":{"injectables/NavigationService.html":{}}}],["102",{"_index":922,"title":{},"body":{"injectables/NavigationService.html":{}}}],["105",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":1614,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["123",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1234567890",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["125",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1607,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1596,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["15",{"_index":1355,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["150",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1733,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["165",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["18.1.1",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["18.2.9",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["195",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1395,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["2.1.0",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["2.39.1",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":1715,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1366,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1657,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":1593,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22",{"_index":1351,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"changelog.html":{}}}],["22.0.5",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["22daee8",{"_index":1600,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1667,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1331,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["26.0.0",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["28",{"_index":1212,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["3",{"_index":1400,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["3.2.3",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["3/20",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":1216,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["33",{"_index":1729,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["4",{"_index":1207,"title":{},"body":{"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["4.0.2",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1381,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["4567",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":1627,"title":{},"body":{"changelog.html":{}}}],["49",{"_index":1622,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1184,"title":{},"body":{"components/OrderListComponent.html":{},"overview.html":{}}}],["5.0",{"_index":552,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["5.18.0",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["5/28",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1223,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["51",{"_index":1611,"title":{},"body":{"changelog.html":{}}}],["52",{"_index":1604,"title":{},"body":{"changelog.html":{}}}],["5374a97",{"_index":1628,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":1599,"title":{},"body":{"changelog.html":{}}}],["54417dc",{"_index":1605,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1337,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["6.2.1",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":758,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["634f627",{"_index":1623,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["768",{"_index":478,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["8",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["8.38.0",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["8.41.0",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["8/16",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1219,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["9",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["987654321",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.created",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.order",{"_index":936,"title":{},"body":{"injectables/NavigationService.html":{}}}],["a.status",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4",{"_index":1313,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["a[pr",{"_index":2132,"title":{},"body":{"index.html":{}}}],["above",{"_index":2204,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":907,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["acc",{"_index":76,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":615,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["accepts",{"_index":623,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts.find((x",{"_index":664,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts.length",{"_index":663,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts[0",{"_index":665,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["access",{"_index":1921,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":783,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["accesstoken",{"_index":534,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["account",{"_index":1404,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"index.html":{}}}],["accountname",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountnumber",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":2228,"title":{},"body":{"license.html":{}}}],["actions",{"_index":2109,"title":{},"body":{"index.html":{}}}],["activatedroute",{"_index":1110,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":953,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["actual_component",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["add",{"_index":1152,"title":{},"body":{"injectables/OrderFacade.html":{},"components/ProductDetailComponent.html":{},"changelog.html":{},"index.html":{}}}],["add(order",{"_index":1156,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["addbuttonenabled",{"_index":1454,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["addcartitem401response",{"_index":1009,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["addcartitemrequest",{"_index":1,"title":{"interfaces/AddCartItemRequest.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addcompanyinformation",{"_index":1261,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addcompanyinformation(doc",{"_index":1272,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addcustomerinformation",{"_index":1262,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addcustomerinformation(doc",{"_index":1278,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["added",{"_index":1690,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addentity(order",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addentity(product",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addfooter",{"_index":1263,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addfooter(doc",{"_index":1280,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addinvoicedetails",{"_index":1264,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addinvoicedetails(doc",{"_index":1283,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["additem",{"_index":341,"title":{},"body":{"injectables/CartFacade.html":{}}}],["additem(productid",{"_index":349,"title":{},"body":{"injectables/CartFacade.html":{}}}],["additionalstate",{"_index":34,"title":{"interfaces/AdditionalState.html":{}},"body":{"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addline",{"_index":1265,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addline(doc",{"_index":1285,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addlogo",{"_index":1266,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addlogo(doc",{"_index":1287,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addpage",{"_index":1267,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addpage(doc",{"_index":1289,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["address",{"_index":440,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["address.dirty",{"_index":491,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["address.valid",{"_index":492,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["addressresponse",{"_index":117,"title":{"interfaces/AddressResponse.html":{}},"body":{"interfaces/AddressResponse.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["addtablefooter",{"_index":1268,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtablefooter(doc",{"_index":1291,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableheader",{"_index":1269,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableheader(doc",{"_index":1295,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableitems",{"_index":1270,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableitems(doc",{"_index":1297,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtocart",{"_index":1455,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["addtocart(id",{"_index":1456,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["addtohttpparams",{"_index":961,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["addtohttpparams(httpparams",{"_index":967,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["addtohttpparamsrecursive",{"_index":962,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["addtohttpparamsrecursive(httpparams",{"_index":970,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["admin",{"_index":2030,"title":{},"body":{"index.html":{}}}],["again",{"_index":2078,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2238,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1343,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"components/ProductSearchComponent.html":{}}}],["allowdisplay",{"_index":928,"title":{},"body":{"injectables/NavigationService.html":{}}}],["allowdisplay(item.options?.['permissionstrategy",{"_index":933,"title":{},"body":{"injectables/NavigationService.html":{}}}],["allowedproductfiltertypes",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":159,"title":{},"body":{"modules/ApiModule.html":{}}}],["amount",{"_index":1194,"title":{},"body":{"interfaces/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":2196,"title":{},"body":{"license.html":{}}}],["angular",{"_index":49,"title":{},"body":{"interfaces/AdditionalState.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"index.html":{}}}],["angular/animations",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["angular/build",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":318,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":147,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["angular/compiler",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":434,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"components/FormErrorComponent.html":{},"components/ProductSearchComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NoReuseStrategy.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"dependencies.html":{}}}],["animate('300ms",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate('500ms",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate('700ms",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animatebackdrop",{"_index":323,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animateslideover",{"_index":324,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":326,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{}}}],["any[]).foreach(elem",{"_index":1028,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["apartment",{"_index":120,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["api",{"_index":13,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["api.ts",{"_index":959,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api.ts:110",{"_index":974,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:112",{"_index":1422,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:119",{"_index":991,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:121",{"_index":1423,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:128",{"_index":992,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:130",{"_index":1424,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:137",{"_index":993,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:139",{"_index":1425,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:198",{"_index":995,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:200",{"_index":1427,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:208",{"_index":996,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:210",{"_index":1428,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:218",{"_index":997,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:220",{"_index":1429,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:228",{"_index":998,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:230",{"_index":1430,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:40",{"_index":1000,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:41",{"_index":1003,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:42",{"_index":1001,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["api.ts:43",{"_index":966,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["api.ts:44",{"_index":1431,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:45",{"_index":1418,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:68",{"_index":969,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:70",{"_index":1419,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:77",{"_index":971,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:79",{"_index":1420,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api/v1/orders",{"_index":1059,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api/v1/orders/${this.configuration.encodeparam",{"_index":1067,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api/v1/products",{"_index":1437,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api/v1/products/${this.configuration.encodeparam",{"_index":1438,"title":{},"body":{"injectables/ProductApi.html":{}}}],["apikeys",{"_index":535,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["apimodule",{"_index":128,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules.html":{}}}],["apis",{"_index":1714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":170,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1860,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":600,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["application/vnd.company+json",{"_index":602,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["applicationconfig",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":2025,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":162,"title":{},"body":{"modules/ApiModule.html":{}}}],["appropriate",{"_index":2117,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":1708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/.../app.config.ts",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.store.ts",{"_index":2241,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../provide",{"_index":1854,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/+state/app.store.ts",{"_index":1699,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/app.component.ts",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["apps/frontend/src/app/app.component.ts:16",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/frontend/src/app/app.component.ts:17",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/frontend/src/app/app.config.ts",{"_index":1705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/app.routes.ts",{"_index":1707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/providers/provide",{"_index":1709,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/strategies/no",{"_index":939,"title":{},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{}}}],["appstate",{"_index":1703,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["appstore",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["architects/ngrx",{"_index":50,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["architecture",{"_index":1878,"title":{},"body":{"index.html":{}}}],["args",{"_index":272,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["arising",{"_index":2231,"title":{},"body":{"license.html":{}}}],["array",{"_index":624,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"injectables/OrderApi.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(basepath",{"_index":1022,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["array.isarray(value",{"_index":1027,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["article",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asp.net",{"_index":1869,"title":{},"body":{"index.html":{}}}],["assets",{"_index":2101,"title":{},"body":{"index.html":{}}}],["associated",{"_index":2184,"title":{},"body":{"license.html":{}}}],["async",{"_index":85,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2047,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":2045,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["austria",{"_index":524,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["auth",{"_index":1665,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["auth.ts",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_config",{"_index":253,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/KeycloakService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":244,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"injectables/KeycloakService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":785,"title":{},"body":{"injectables/KeycloakService.html":{},"miscellaneous/enumerations.html":{}}}],["authentication",{"_index":566,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["authfacade",{"_index":256,"title":{"injectables/AuthFacade.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/NavigationService.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authfacade.authorize",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authfacade.gettoken",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authfacade.isauthenticated",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":1887,"title":{},"body":{"index.html":{}}}],["authorize",{"_index":261,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["authorized",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":2222,"title":{},"body":{"license.html":{}}}],["auto",{"_index":16,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["autocomplete",{"_index":1650,"title":{},"body":{"changelog.html":{}}}],["automatic",{"_index":1937,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":2089,"title":{},"body":{"index.html":{}}}],["available",{"_index":626,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":89,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1954,"title":{},"body":{"index.html":{}}}],["axios",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":935,"title":{},"body":{"injectables/NavigationService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["b.created",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b.order",{"_index":937,"title":{},"body":{"injectables/NavigationService.html":{}}}],["b.status",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b[test",{"_index":2133,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1608,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["backwards",{"_index":679,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["bag",{"_index":408,"title":{},"body":{"components/CartIconComponent.html":{}}}],["bank",{"_index":1402,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["bankingtext",{"_index":1401,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["bankname",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":161,"title":{},"body":{"modules/ApiModule.html":{}}}],["base_path",{"_index":1015,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":976,"title":{},"body":{"injectables/OrderApi.html":{}}}],["baseline",{"_index":1371,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["basepath",{"_index":536,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["basepath[0",{"_index":1023,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["basic",{"_index":571,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["bearer",{"_index":572,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":1679,"title":{},"body":{"changelog.html":{}}}],["bg",{"_index":870,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["binary",{"_index":1249,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["blob",{"_index":1055,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["body",{"_index":983,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["bold",{"_index":1339,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["booleanattribute",{"_index":1571,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["bootstrap",{"_index":2234,"title":{},"body":{"overview.html":{}}}],["border",{"_index":1214,"title":{},"body":{"components/OrderStatusComponent.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":2024,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":2075,"title":{},"body":{"index.html":{}}}],["broken",{"_index":1625,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2048,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":1791,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bucket",{"_index":2100,"title":{},"body":{"index.html":{}}}],["bug",{"_index":1616,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1945,"title":{},"body":{"index.html":{}}}],["builds",{"_index":2077,"title":{},"body":{"index.html":{}}}],["built",{"_index":1861,"title":{},"body":{"index.html":{}}}],["business",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["byte",{"_index":1248,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["c",{"_index":2172,"title":{},"body":{"license.html":{}}}],["c[merge",{"_index":2137,"title":{},"body":{"index.html":{}}}],["calculated",{"_index":335,"title":{},"body":{"components/CartComponent.html":{}}}],["calling",{"_index":1066,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["canactivate",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivatefn",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["care",{"_index":585,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["cart",{"_index":7,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/ProductApi.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cart'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["cart.animations",{"_index":325,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.html",{"_index":298,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.scss",{"_index":299,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.facade",{"_index":319,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{}}}],["cartcomponent",{"_index":185,"title":{"components/CartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["cartfacade",{"_index":300,"title":{"injectables/CartFacade.html":{}},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"components/ProductDetailComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartfacade.loadshoppingsession",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cartfilter",{"_index":1753,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["carticoncomponent",{"_index":214,"title":{"components/CartIconComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["cartitemresponse",{"_index":58,"title":{"interfaces/CartItemResponse.html":{}},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartitemscomponent",{"_index":216,"title":{"components/CartItemsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["cartstore",{"_index":67,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":697,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["catalog",{"_index":1890,"title":{},"body":{"index.html":{}}}],["catch",{"_index":391,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["categories",{"_index":875,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/ProductResponse.html":{},"index.html":{}}}],["category",{"_index":849,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cd",{"_index":2091,"title":{},"body":{"index.html":{}}}],["cdn",{"_index":2069,"title":{},"body":{"index.html":{}}}],["center",{"_index":1213,"title":{},"body":{"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["changedetection",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["changedetectionstrategy",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["changelog",{"_index":1587,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":1589,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":2179,"title":{},"body":{"license.html":{}}}],["charset=utf8",{"_index":601,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["check",{"_index":595,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{}}}],["checkout",{"_index":336,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["checkout'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["checkout.component.html",{"_index":443,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.scss",{"_index":444,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutaddressform",{"_index":429,"title":{"interfaces/CheckoutAddressForm.html":{}},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["checkoutbuttonenabled",{"_index":301,"title":{},"body":{"components/CartComponent.html":{}}}],["checkoutcomponent",{"_index":218,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkoutform",{"_index":435,"title":{"interfaces/CheckoutForm.html":{}},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["checks",{"_index":2074,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1974,"title":{},"body":{"index.html":{}}}],["christian",{"_index":2173,"title":{},"body":{"license.html":{}}}],["ci",{"_index":1693,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ci/cd",{"_index":1951,"title":{},"body":{"index.html":{}}}],["city",{"_index":121,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":2225,"title":{},"body":{"license.html":{}}}],["class",{"_index":15,"title":{"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"classes/NavigationItem.html":{},"classes/NoReuseStrategy.html":{},"classes/RouteItem.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["class.bg",{"_index":1217,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["classes",{"_index":532,"title":{},"body":{"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"classes/NavigationItem.html":{},"classes/NoReuseStrategy.html":{},"classes/RouteItem.html":{},"overview.html":{}}}],["click",{"_index":1992,"title":{},"body":{"index.html":{}}}],["client",{"_index":1901,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":252,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["clone",{"_index":1963,"title":{},"body":{"index.html":{}}}],["close",{"_index":329,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{}}}],["closecart",{"_index":303,"title":{},"body":{"components/CartComponent.html":{}}}],["cloud",{"_index":1691,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloudflare",{"_index":2067,"title":{},"body":{"index.html":{}}}],["code",{"_index":529,"title":{},"body":{"components/CheckoutComponent.html":{},"index.html":{}}}],["collection_formats",{"_index":1016,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns",{"_index":1292,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columns.amount.x",{"_index":1378,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["columns.article.x",{"_index":1370,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["columns.price.x",{"_index":1376,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["columns.qty.x",{"_index":1374,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["commerce",{"_index":1859,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1930,"title":{},"body":{"index.html":{}}}],["commitlint/commitizen",{"_index":1928,"title":{},"body":{"index.html":{}}}],["common",{"_index":696,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["commonmodule",{"_index":295,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["company@example.com",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companydata",{"_index":1275,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["companydata.zipcode",{"_index":1348,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["compatibility",{"_index":680,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["complete",{"_index":1876,"title":{},"body":{"index.html":{}}}],["completed",{"_index":1221,"title":{},"body":{"components/OrderStatusComponent.html":{},"miscellaneous/enumerations.html":{}}}],["component",{"_index":169,"title":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["components",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":1995,"title":{},"body":{"index.html":{}}}],["comprehensive",{"_index":2063,"title":{},"body":{"index.html":{}}}],["computed",{"_index":52,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":2203,"title":{},"body":{"license.html":{}}}],["config",{"_index":799,"title":{},"body":{"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["config.routes.filter(route",{"_index":889,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":246,"title":{},"body":{"interfaces/AuthConfig.html":{},"interfaces/MonitoringConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/print",{"_index":1309,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["configuration",{"_index":145,"title":{"classes/Configuration.html":{}},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration#isjsonmime",{"_index":658,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationfactory",{"_index":139,"title":{},"body":{"modules/ApiModule.html":{}}}],["configurationparameters",{"_index":550,"title":{"interfaces/ConfigurationParameters.html":{}},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurationparameters.accesstoken",{"_index":642,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.apikeys",{"_index":636,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.basepath",{"_index":644,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.credentials",{"_index":652,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.encodeparam",{"_index":649,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.encoder",{"_index":648,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.password",{"_index":640,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.username",{"_index":638,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.withcredentials",{"_index":646,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurations",{"_index":1904,"title":{},"body":{"index.html":{}}}],["configured",{"_index":2111,"title":{},"body":{"index.html":{}}}],["configuring",{"_index":1976,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":2038,"title":{},"body":{"index.html":{}}}],["connect",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["connected",{"_index":2027,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2055,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":2031,"title":{},"body":{"index.html":{}}}],["console.error('could",{"_index":1134,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["console.error(err",{"_index":393,"title":{},"body":{"injectables/CartFacade.html":{}}}],["const",{"_index":64,"title":{},"body":{"interfaces/AdditionalState.html":{},"interfaces/AuthConfig.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":548,"title":{},"body":{"classes/Configuration.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{}}}],["constructor(@optional",{"_index":155,"title":{},"body":{"modules/ApiModule.html":{}}}],["constructor(configurationparameters",{"_index":549,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["constructor(httpclient",{"_index":965,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["constructor(label",{"_index":899,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["containerization",{"_index":1948,"title":{},"body":{"index.html":{}}}],["containers",{"_index":1988,"title":{},"body":{"index.html":{}}}],["content",{"_index":616,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes",{"_index":621,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes.find((x",{"_index":660,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes.length",{"_index":659,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes[0",{"_index":662,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["context",{"_index":1040,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["continue",{"_index":337,"title":{},"body":{"components/CartComponent.html":{}}}],["continuous",{"_index":1952,"title":{},"body":{"index.html":{}}}],["contract",{"_index":2229,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":1237,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["copies",{"_index":2198,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2182,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2171,"title":{},"body":{"license.html":{}}}],["core",{"_index":1870,"title":{},"body":{"index.html":{}}}],["correct",{"_index":614,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["count",{"_index":1192,"title":{},"body":{"components/OrderListComponent.html":{}}}],["country",{"_index":122,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["coverage",{"_index":1695,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":1972,"title":{},"body":{"index.html":{}}}],["create",{"_index":1075,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"index.html":{}}}],["create(dto",{"_index":94,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["create(entity",{"_index":1080,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["createcheckoutform",{"_index":452,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["created",{"_index":1195,"title":{},"body":{"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["createdrawoptions",{"_index":1308,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createdrawoptions(doc.internal.pagesize.getwidth",{"_index":1314,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["creates",{"_index":2087,"title":{},"body":{"index.html":{}}}],["creation",{"_index":1984,"title":{},"body":{"index.html":{}}}],["credential",{"_index":655,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["credentials",{"_index":537,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["css",{"_index":1914,"title":{},"body":{"index.html":{}}}],["csv",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curr",{"_index":75,"title":{},"body":{"interfaces/AdditionalState.html":{},"classes/NoReuseStrategy.html":{},"miscellaneous/variables.html":{}}}],["curr.quantity",{"_index":80,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["curr.totalprice",{"_index":77,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["currency",{"_index":332,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["current",{"_index":975,"title":{},"body":{"injectables/OrderApi.html":{}}}],["currentuser",{"_index":1560,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["currentuser()?.firstname",{"_index":1577,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["currentuser()?.lastname",{"_index":1579,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["cursor",{"_index":1517,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["custom",{"_index":706,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"interfaces/Param.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["customhttpparametercodec",{"_index":704,"title":{"classes/CustomHttpParameterCodec.html":{}},"body":{"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{}}}],["customization",{"_index":698,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["d",{"_index":2140,"title":{},"body":{"index.html":{}}}],["d[test",{"_index":2139,"title":{},"body":{"index.html":{}}}],["damages",{"_index":2226,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darker",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":981,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts",{"_index":1074,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1095,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["data.service.ts:13",{"_index":1086,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["data.service.ts:18",{"_index":1444,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:19",{"_index":1089,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:22",{"_index":1441,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:23",{"_index":1081,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:26",{"_index":1442,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:27",{"_index":1083,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:30",{"_index":1445,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:31",{"_index":1091,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:34",{"_index":1446,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:35",{"_index":1093,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.ts",{"_index":1763,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database",{"_index":1920,"title":{},"body":{"index.html":{}}}],["dataformat",{"_index":1070,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dataservice",{"_index":1096,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["dataservicetype",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datatype",{"_index":1069,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datatypes",{"_index":2249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["datatype}s",{"_index":1241,"title":{},"body":{"interfaces/Param.html":{}}}],["date",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["date).toisostring",{"_index":702,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["date).toisostring().substring(0",{"_index":1031,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["datetime",{"_index":733,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["datetimecomponent",{"_index":220,"title":{"components/DateTimeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["days",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":2056,"title":{},"body":{"index.html":{}}}],["dd",{"_index":738,"title":{},"body":{"components/DateTimeComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["deal",{"_index":2186,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2232,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":149,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["decodekey",{"_index":710,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodekey(k",{"_index":714,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodeuricomponent(k",{"_index":726,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodeuricomponent(v",{"_index":727,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodevalue",{"_index":711,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodevalue(v",{"_index":717,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["deep",{"_index":1620,"title":{},"body":{"changelog.html":{}}}],["deepobject",{"_index":1232,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultencodeparam",{"_index":543,"title":{},"body":{"classes/Configuration.html":{}}}],["defaultencodeparam(param",{"_index":590,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["defaultheaders",{"_index":960,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["defaults",{"_index":986,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["defined",{"_index":135,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/HttpValidationProblemDetails.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defintion",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":1076,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["delete(entity",{"_index":1082,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["delete(id",{"_index":103,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["demo",{"_index":11,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"components/AppComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":1785,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":2096,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2065,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1652,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deprecated",{"_index":556,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["deps",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/OrderApi.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["descriptive",{"_index":1649,"title":{},"body":{"changelog.html":{}}}],["deselect",{"_index":2039,"title":{},"body":{"index.html":{}}}],["detachedroutehandle",{"_index":949,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["detail",{"_index":773,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"components/OrderDetailComponent.html":{},"interfaces/ProblemDetails.html":{},"components/ProductDetailComponent.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{}}}],["detail'},{'name",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["detail.component.html",{"_index":1108,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.scss",{"_index":1109,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts",{"_index":1106,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:19",{"_index":1458,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":1123,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":1126,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":1120,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":1119,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":1125,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":1122,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1114,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":1457,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1117,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail/order",{"_index":1105,"title":{},"body":{"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail/product",{"_index":1453,"title":{},"body":{"components/ProductDetailComponent.html":{},"coverage.html":{}}}],["details",{"_index":581,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/ProductApi.html":{},"index.html":{}}}],["details.ts",{"_index":772,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["details.ts:11",{"_index":778,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["determine",{"_index":619,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["determined",{"_index":2085,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1927,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1941,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":2128,"title":{},"body":{"index.html":{}}}],["directive",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["directives",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["disabled",{"_index":500,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["discriminator",{"_index":1524,"title":{},"body":{"interfaces/Request.html":{}}}],["display",{"_index":736,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["displaying",{"_index":1626,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":2194,"title":{},"body":{"license.html":{}}}],["dns",{"_index":2068,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1277,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.addimage('icons/demo",{"_index":1333,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.addpage",{"_index":1392,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.internal.pagesize.getheight",{"_index":1315,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.internal.pagesize.getwidth",{"_index":1394,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.line(options.border.left",{"_index":1411,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.save(`invoice",{"_index":1324,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setdrawcolor(options.line.color.light",{"_index":1410,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfont('helvetica",{"_index":1356,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfont(options.text.font.default",{"_index":1338,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfontsize(options.text.size.small",{"_index":1340,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfontsize(options.text.size.smaller",{"_index":1345,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfontsize(options.text.size.tiny",{"_index":1397,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.dark",{"_index":1385,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.darker",{"_index":1368,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.light",{"_index":1341,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.lighter",{"_index":1398,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text('total",{"_index":1390,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text('your",{"_index":1357,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`$${item.totalprice.tofixed(2",{"_index":1389,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`$${item.unitprice.tofixed(2",{"_index":1388,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`$${order.amount.tofixed(2",{"_index":1391,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`${user.address?.city",{"_index":1362,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`${user.address?.street",{"_index":1360,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`${user.firstname",{"_index":1358,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`invoice",{"_index":1352,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(bankingtext",{"_index":1409,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.amount.label",{"_index":1377,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.article.label",{"_index":1369,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.price.label",{"_index":1375,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.qty.label",{"_index":1373,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.address",{"_index":1346,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.city",{"_index":1347,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.email",{"_index":1350,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.name",{"_index":1342,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.phone",{"_index":1349,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(date",{"_index":1354,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(item.productname",{"_index":1386,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(item.quantity.tostring",{"_index":1387,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(paymentterms.terms",{"_index":1399,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(user.address?.country",{"_index":1364,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(user.email",{"_index":1365,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["docker",{"_index":1947,"title":{},"body":{"index.html":{}}}],["document",{"_index":563,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["documentation",{"_index":1696,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1591,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["domain",{"_index":2122,"title":{},"body":{"index.html":{}}}],["dotnet",{"_index":1874,"title":{},"body":{"index.html":{}}}],["double",{"_index":1247,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["drawoptions",{"_index":1274,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dsn",{"_index":820,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{}}}],["dto",{"_index":1673,"title":{},"body":{"changelog.html":{}}}],["dtos",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["due",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1982,"title":{},"body":{"index.html":{}}}],["e",{"_index":1858,"title":{},"body":{"index.html":{}}}],["e[ci",{"_index":2142,"title":{},"body":{"index.html":{}}}],["e[trigger",{"_index":2141,"title":{},"body":{"index.html":{}}}],["ease",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ec2",{"_index":2094,"title":{},"body":{"index.html":{}}}],["edit",{"_index":22,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["educational",{"_index":1862,"title":{},"body":{"index.html":{}}}],["effect",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elem",{"_index":1029,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["element",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["email",{"_index":438,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"components/FormErrorComponent.html":{},"interfaces/UserResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":622,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["enable",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["enabled",{"_index":819,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{}}}],["encode",{"_index":1225,"title":{},"body":{"interfaces/Param.html":{}}}],["encodekey",{"_index":712,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodekey(k",{"_index":720,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodeparam",{"_index":538,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encoder",{"_index":539,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["encodeuricomponent(k",{"_index":724,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodeuricomponent(string(value",{"_index":703,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encodeuricomponent(v",{"_index":725,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodevalue",{"_index":713,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodevalue(v",{"_index":722,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encoding",{"_index":574,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["end",{"_index":2138,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1609,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":2023,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2052,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1684,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entities().filter(entity",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":106,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["entity[key",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1845,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/navigation",{"_index":864,"title":{},"body":{"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{}}}],["enums/permission",{"_index":283,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["env",{"_index":1971,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":1973,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1970,"title":{},"body":{"index.html":{}}}],["environment.keycloak",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.sentry",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentproviders",{"_index":884,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["equivalent",{"_index":2021,"title":{},"body":{"index.html":{}}}],["err",{"_index":392,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["error",{"_index":163,"title":{},"body":{"modules/ApiModule.html":{},"components/FormErrorComponent.html":{},"index.html":{}}}],["error'},{'name",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["error('apimodule",{"_index":158,"title":{},"body":{"modules/ApiModule.html":{}}}],["error('key",{"_index":1033,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["error('missing",{"_index":97,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["error('not",{"_index":1102,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["error('required",{"_index":1065,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["error('user",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(err.message",{"_index":394,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["error.component.html",{"_index":744,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.scss",{"_index":745,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts",{"_index":742,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:20",{"_index":752,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts:24",{"_index":748,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error/form",{"_index":741,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["errorhandler",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":746,"title":{},"body":{"components/FormErrorComponent.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{}}}],["errors()?.['email",{"_index":761,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors()?.['required",{"_index":759,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors()?.[\\'email",{"_index":765,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors()?.[\\'required",{"_index":763,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["eslint/lint",{"_index":1935,"title":{},"body":{"index.html":{}}}],["etc",{"_index":2119,"title":{},"body":{"index.html":{}}}],["event",{"_index":2221,"title":{},"body":{"license.html":{}}}],["eventcoalescing",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":985,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["example",{"_index":1964,"title":{},"body":{"index.html":{}}}],["examples",{"_index":599,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["exists",{"_index":676,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["explode",{"_index":1068,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["exports",{"_index":150,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["express",{"_index":1802,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extended",{"_index":1234,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":908,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["extensions",{"_index":606,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["external",{"_index":2104,"title":{},"body":{"index.html":{}}}],["extracted",{"_index":978,"title":{},"body":{"injectables/OrderApi.html":{}}}],["f",{"_index":2144,"title":{},"body":{"index.html":{}}}],["f49f741",{"_index":1612,"title":{},"body":{"changelog.html":{}}}],["f[update",{"_index":2143,"title":{},"body":{"index.html":{}}}],["factories",{"_index":1674,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":677,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{}}}],["false",{"_index":66,"title":{},"body":{"interfaces/AdditionalState.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["fb",{"_index":445,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["features",{"_index":1597,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fetchall",{"_index":1153,"title":{},"body":{"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{}}}],["fetchbyid",{"_index":1154,"title":{},"body":{"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{}}}],["fetchbyid(id",{"_index":1159,"title":{},"body":{"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["fetchcurrentuser",{"_index":1541,"title":{},"body":{"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":1619,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":753,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["fieldname",{"_index":747,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2185,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2035,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1087,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["filter(item",{"_index":931,"title":{},"body":{"injectables/NavigationService.html":{}}}],["filter.ts",{"_index":1752,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filteredentities",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalue",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalues",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalues.every(([key",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalues.length",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1135,"title":{},"body":{"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{}}}],["find(id",{"_index":1161,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["first",{"_index":520,"title":{},"body":{"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firstbasepath",{"_index":1021,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["firstname",{"_index":436,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UserResponse.html":{}}}],["firstvaluefrom",{"_index":62,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["firstvaluefrom(orderapi.getorderbyid(id",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(productapi.getproductbyid(id",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.addcartitem(dto",{"_index":101,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.removecartitem(id",{"_index":104,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.resolvecurrentshoppingsession",{"_index":90,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.updatecartitemquantity(id",{"_index":107,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(this.#orderapi.getallordersofcurrentuser",{"_index":1098,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["firstvaluefrom(this.#orderapi.getorderbyid(id",{"_index":1100,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["firstvaluefrom(this.#productapi.getallproducts",{"_index":1449,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["firstvaluefrom(this.#productapi.getproductbyid(id",{"_index":1451,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["firstvaluefrom(this.#shoppingsessionapi.checkout",{"_index":389,"title":{},"body":{"injectables/CartFacade.html":{}}}],["firstvaluefrom(userapi.resolvecurrentuser",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(userapi.updatecurrentuseraddress(update",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(userapi.updatecurrentuserphone(update",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":2217,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1618,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1617,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":988,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["flex",{"_index":1515,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["float",{"_index":1246,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["flowchart",{"_index":2129,"title":{},"body":{"index.html":{}}}],["flows",{"_index":1888,"title":{},"body":{"index.html":{}}}],["fns",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["fns/format",{"_index":1301,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["fns/utc",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["follow",{"_index":1985,"title":{},"body":{"index.html":{}}}],["following",{"_index":2022,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["form.ts",{"_index":431,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["format",{"_index":689,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/PrintInvoiceService.html":{}}}],["format(order.created",{"_index":1353,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["formating",{"_index":1940,"title":{},"body":{"index.html":{}}}],["formats",{"_index":690,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["formbuilder",{"_index":483,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formcontrol",{"_index":432,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{}}}],["formerrorcomponent",{"_index":223,"title":{"components/FormErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["formgroup",{"_index":433,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{}}}],["formsmodule",{"_index":1503,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["forroot",{"_index":133,"title":{},"body":{"modules/ApiModule.html":{}}}],["forroot(configurationfactory",{"_index":134,"title":{},"body":{"modules/ApiModule.html":{}}}],["found",{"_index":620,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":1907,"title":{},"body":{"index.html":{}}}],["free",{"_index":2178,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":1598,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full",{"_index":1856,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["fullstack",{"_index":2066,"title":{},"body":{"index.html":{}}}],["function",{"_index":140,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{}}}],["functionality",{"_index":1891,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1853,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2201,"title":{},"body":{"license.html":{}}}],["future",{"_index":955,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["g[create",{"_index":2145,"title":{},"body":{"index.html":{}}}],["g[tag",{"_index":2146,"title":{},"body":{"index.html":{}}}],["gate",{"_index":2135,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1996,"title":{},"body":{"index.html":{}}}],["generated",{"_index":17,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["generatepdf",{"_index":1271,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["generatepdf(order",{"_index":1299,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["generates",{"_index":2086,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1902,"title":{},"body":{"index.html":{}}}],["generator",{"_index":19,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["generator.tech",{"_index":21,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["getall",{"_index":342,"title":{},"body":{"injectables/CartFacade.html":{},"injectables/OrderFacade.html":{}}}],["getallordersofcurrentuser",{"_index":963,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getallordersofcurrentuser(observe",{"_index":972,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getallproducts",{"_index":1416,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getallproducts(observe",{"_index":1421,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getauthenticated",{"_index":795,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["getbyid",{"_index":1468,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["getbyid(id",{"_index":1474,"title":{},"body":{"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["getcheckoutenabled",{"_index":453,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getcurrentuser",{"_index":1542,"title":{},"body":{"injectables/UserFacade.html":{}}}],["getfilter",{"_index":1469,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["getfiltered",{"_index":1470,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["getfiltereditems",{"_index":913,"title":{},"body":{"injectables/NavigationService.html":{}}}],["getfiltereditems(type",{"_index":914,"title":{},"body":{"injectables/NavigationService.html":{}}}],["gethasshoppingsession",{"_index":343,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getitembyid(id",{"_index":108,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["getitembyproductid(productid",{"_index":112,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["getitemcount",{"_index":344,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getorderbyid",{"_index":964,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getorderbyid(id",{"_index":994,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getorderbyidrequest",{"_index":766,"title":{"interfaces/GetOrderByIdRequest.html":{}},"body":{"interfaces/GetOrderByIdRequest.html":{},"coverage.html":{}}}],["getproductbyid",{"_index":1417,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getproductbyid(id",{"_index":1426,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getproductbyidrequest",{"_index":768,"title":{"interfaces/GetProductByIdRequest.html":{}},"body":{"interfaces/GetProductByIdRequest.html":{},"coverage.html":{}}}],["getshowcart",{"_index":345,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getsortedbystatusanddate",{"_index":1155,"title":{},"body":{"injectables/OrderFacade.html":{},"miscellaneous/variables.html":{}}}],["getstate(store",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1585,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":262,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{}}}],["gettotalprice",{"_index":346,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getupdateenabled",{"_index":454,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["git",{"_index":1965,"title":{},"body":{"index.html":{}}}],["github",{"_index":1950,"title":{},"body":{"index.html":{}}}],["github.com/christian",{"_index":1872,"title":{},"body":{"index.html":{}}}],["give",{"_index":2054,"title":{},"body":{"index.html":{}}}],["given",{"_index":596,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["go",{"_index":2011,"title":{},"body":{"index.html":{}}}],["gotoproductpage",{"_index":1506,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["granted",{"_index":2177,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2233,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1218,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["h",{"_index":2149,"title":{},"body":{"index.html":{}}}],["h[build",{"_index":2148,"title":{},"body":{"index.html":{}}}],["handled",{"_index":692,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["handling",{"_index":687,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["haspermission",{"_index":263,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["haspermission(permissionstrategy",{"_index":270,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["hasshoppingitems",{"_index":513,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["hasshoppingsession",{"_index":81,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["hasuseraddress",{"_index":514,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["hasuserdatachanges",{"_index":516,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["header",{"_index":1046,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":1064,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1332,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["helmet",{"_index":1660,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["helvetica",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hereby",{"_index":2176,"title":{},"body":{"license.html":{}}}],["history",{"_index":1893,"title":{},"body":{"index.html":{}}}],["holders",{"_index":2223,"title":{},"body":{"license.html":{}}}],["hooks",{"_index":1934,"title":{},"body":{"index.html":{}}}],["host",{"_index":743,"title":{},"body":{"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"index.html":{}}}],["hosting",{"_index":1955,"title":{},"body":{"index.html":{}}}],["html",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["html2canvas",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["html2canvas/jspdf",{"_index":1911,"title":{},"body":{"index.html":{}}}],["http",{"_index":157,"title":{},"body":{"modules/ApiModule.html":{}}}],["http://localhost",{"_index":999,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["http://localhost:3000",{"_index":2005,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":2007,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":2004,"title":{},"body":{"index.html":{}}}],["http://localhost:4200sentry",{"_index":2010,"title":{},"body":{"index.html":{}}}],["http://localhost:80",{"_index":2051,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":2008,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/admin/master/console/#/demo_shop/realm",{"_index":1990,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/admin/master/console/#/demo_shop/users/add",{"_index":2032,"title":{},"body":{"index.html":{}}}],["http://localhost:80usage",{"_index":2009,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":146,"title":{},"body":{"modules/ApiModule.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpclientmodule",{"_index":165,"title":{},"body":{"modules/ApiModule.html":{}}}],["httpcontext",{"_index":1006,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpevent",{"_index":1005,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpheaderaccept",{"_index":1037,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpheaderaccepts",{"_index":1047,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpheaders",{"_index":1002,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpinterceptorfn",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpparametercodec",{"_index":582,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpparams",{"_index":968,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpparams.append(key",{"_index":1030,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpresponse",{"_index":1004,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["https://github.com/angular/angular/issues/18261",{"_index":708,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["https://github.com/angular/angular/issues/20575",{"_index":168,"title":{},"body":{"modules/ApiModule.html":{}}}],["https://github.com/christian",{"_index":1966,"title":{},"body":{"index.html":{}}}],["https://openapi",{"_index":20,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["httpvalidationproblemdetails",{"_index":769,"title":{"interfaces/HttpValidationProblemDetails.html":{}},"body":{"interfaces/HttpValidationProblemDetails.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["husky",{"_index":1932,"title":{},"body":{"index.html":{}}}],["hydrated",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["i.e",{"_index":695,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["i1[network",{"_index":2151,"title":{},"body":{"index.html":{}}}],["i2[ec2",{"_index":2152,"title":{},"body":{"index.html":{}}}],["i[deploy",{"_index":2150,"title":{},"body":{"index.html":{}}}],["iam",{"_index":2116,"title":{},"body":{"index.html":{}}}],["icon",{"_index":398,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["icon.component.html",{"_index":399,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.scss",{"_index":400,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.ts",{"_index":397,"title":{},"body":{"components/CartIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:14",{"_index":403,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.ts:15",{"_index":405,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.ts:17",{"_index":402,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon/cart",{"_index":396,"title":{},"body":{"components/CartIconComponent.html":{},"coverage.html":{}}}],["id",{"_index":100,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CheckoutComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/MonitoredUser.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderResponse.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1697,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":977,"title":{},"body":{"injectables/OrderApi.html":{}}}],["ignore",{"_index":1008,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["image",{"_index":1499,"title":{},"body":{"interfaces/ProductResponse.html":{},"changelog.html":{}}}],["imageresponse",{"_index":779,"title":{"interfaces/ImageResponse.html":{}},"body":{"interfaces/ImageResponse.html":{},"interfaces/ProductResponse.html":{},"coverage.html":{}}}],["images",{"_index":1497,"title":{},"body":{"interfaces/ProductResponse.html":{},"index.html":{}}}],["implementation",{"_index":675,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["implemented",{"_index":1103,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["implements",{"_index":709,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["implied",{"_index":2213,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserResponse.html":{}}}],["import('@demo",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":148,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["included",{"_index":2207,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2062,"title":{},"body":{"index.html":{}}}],["including",{"_index":2189,"title":{},"body":{"license.html":{}}}],["incorrectly",{"_index":693,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":777,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["information",{"_index":519,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductDetailComponent.html":{}}}],["infrastructure",{"_index":1942,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":1526,"title":{},"body":{"classes/RouteItem.html":{}}}],["init",{"_index":654,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"miscellaneous/variables.html":{}}}],["initialized",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["initialstate",{"_index":65,"title":{},"body":{"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":53,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["inject(activatedroute",{"_index":1118,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["inject(appstore",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(auth_config",{"_index":790,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["inject(authfacade",{"_index":916,"title":{},"body":{"injectables/NavigationService.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(base_path",{"_index":1018,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["inject(cartfacade",{"_index":308,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"components/ProductDetailComponent.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(cartstore",{"_index":364,"title":{},"body":{"injectables/CartFacade.html":{}}}],["inject(formbuilder",{"_index":463,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inject(keycloakservice",{"_index":278,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["inject(monitoring_config",{"_index":829,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["inject(monitoringfacade",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(navigationservice",{"_index":850,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inject(orderapi",{"_index":1094,"title":{},"body":{"injectables/OrderDataService.html":{},"miscellaneous/variables.html":{}}}],["inject(orderfacade",{"_index":366,"title":{},"body":{"injectables/CartFacade.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["inject(orderstore",{"_index":1165,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["inject(permissionservice",{"_index":280,"title":{},"body":{"injectables/AuthFacade.html":{},"miscellaneous/variables.html":{}}}],["inject(printinvoiceservice",{"_index":1121,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inject(productapi",{"_index":1447,"title":{},"body":{"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["inject(productfacade",{"_index":852,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{}}}],["inject(productstore",{"_index":1480,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["inject(router",{"_index":465,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(shoppingsessionapi",{"_index":84,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["inject(userapi",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(userfacade",{"_index":467,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(userstore",{"_index":1551,"title":{},"body":{"injectables/UserFacade.html":{}}}],["injectable",{"_index":255,"title":{"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"coverage.html":{}}}],["injectables",{"_index":257,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"overview.html":{}}}],["injectiontoken",{"_index":249,"title":{},"body":{"interfaces/AuthConfig.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{}}}],["injectiontoken('auth_config",{"_index":254,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('basepath",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('monitoring_config",{"_index":823,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('navigation_config",{"_index":887,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":421,"title":{},"body":{"components/CartItemsComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{},"components/UserNavigationComponent.html":{}}}],["input('field",{"_index":751,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["input(false",{"_index":1569,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["input.required",{"_index":419,"title":{},"body":{"components/CartItemsComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{}}}],["inputs",{"_index":1202,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["inputsignal",{"_index":734,"title":{},"body":{"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{}}}],["install",{"_index":1968,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1962,"title":{},"body":{"index.html":{}}}],["instance",{"_index":774,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{}}}],["instanceof",{"_index":701,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["instead",{"_index":554,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{}}}],["int32",{"_index":1071,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["int64",{"_index":1245,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["integer",{"_index":1240,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["integration",{"_index":2020,"title":{},"body":{"index.html":{}}}],["integration/continuous",{"_index":1953,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1881,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"overview.html":{}}}],["internet",{"_index":604,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["invalid",{"_index":762,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["invoice",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoice.config",{"_index":1310,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.config.ts",{"_index":1761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invoice.service",{"_index":1129,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["invoice.service.ts",{"_index":1260,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["invoice.service.ts:100",{"_index":1296,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:118",{"_index":1298,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:146",{"_index":1294,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:15",{"_index":1300,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:157",{"_index":1290,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:163",{"_index":1282,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:181",{"_index":1286,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:31",{"_index":1288,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:41",{"_index":1276,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:64",{"_index":1284,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:76",{"_index":1279,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["ip_address",{"_index":836,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["isauthenticated",{"_index":264,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["ischeckoutenabled",{"_index":448,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["isdevmode",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isjsonmime",{"_index":544,"title":{},"body":{"classes/Configuration.html":{}}}],["isjsonmime(mime",{"_index":593,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["issmallscreen",{"_index":1561,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["issues",{"_index":1653,"title":{},"body":{"changelog.html":{}}}],["istype",{"_index":926,"title":{},"body":{"injectables/NavigationService.html":{}}}],["istype(item.type",{"_index":932,"title":{},"body":{"injectables/NavigationService.html":{}}}],["isupdateenabled",{"_index":449,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["item",{"_index":8,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OrderDetailComponent.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"coverage.html":{}}}],["item.id",{"_index":424,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["item.label",{"_index":877,"title":{},"body":{"components/NavigationComponent.html":{}}}],["item.productid",{"_index":114,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"miscellaneous/variables.html":{}}}],["item.productname",{"_index":425,"title":{},"body":{"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{}}}],["item.quantity",{"_index":377,"title":{},"body":{"injectables/CartFacade.html":{},"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{}}}],["item.tolowercase().includes(filtervalue.tolowercase",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.totalprice",{"_index":426,"title":{},"body":{"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{}}}],["item.ts",{"_index":894,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["item.ts:10",{"_index":903,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:13",{"_index":905,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:18",{"_index":1525,"title":{},"body":{"classes/RouteItem.html":{}}}],["item.ts:5",{"_index":900,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:8",{"_index":902,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:9",{"_index":904,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.unitprice",{"_index":1148,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["item401",{"_index":1011,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["itemcount",{"_index":79,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":302,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ShoppingSessionResponse.html":{}}}],["items'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["items.component",{"_index":322,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["items.component.html",{"_index":415,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items.component.scss",{"_index":416,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items.component.ts",{"_index":414,"title":{},"body":{"components/CartItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:15",{"_index":420,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items.component.ts:17",{"_index":418,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items/cart",{"_index":321,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"coverage.html":{}}}],["itemsincart",{"_index":401,"title":{},"body":{"components/CartIconComponent.html":{}}}],["itemtype",{"_index":927,"title":{},"body":{"injectables/NavigationService.html":{}}}],["j",{"_index":2154,"title":{},"body":{"index.html":{}}}],["j1[rds",{"_index":2155,"title":{},"body":{"index.html":{}}}],["j2[ec2",{"_index":2156,"title":{},"body":{"index.html":{}}}],["j3[ec2",{"_index":2157,"title":{},"body":{"index.html":{}}}],["j4[ec2",{"_index":2158,"title":{},"body":{"index.html":{}}}],["j5[s3",{"_index":2159,"title":{},"body":{"index.html":{}}}],["j[deploy",{"_index":2153,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":1909,"title":{},"body":{"index.html":{}}}],["jest",{"_index":1925,"title":{},"body":{"index.html":{}}}],["js",{"_index":797,"title":{},"body":{"injectables/KeycloakService.html":{},"dependencies.html":{}}}],["json",{"_index":598,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["jsonmime",{"_index":666,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["jsonmime.test(mime",{"_index":671,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["jspdf",{"_index":1273,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"dependencies.html":{}}}],["jspdf('p",{"_index":1311,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["k",{"_index":716,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{}}}],["k1[cloudflare",{"_index":2161,"title":{},"body":{"index.html":{}}}],["k2[cloudflare",{"_index":2162,"title":{},"body":{"index.html":{}}}],["k3[cloudflare",{"_index":2163,"title":{},"body":{"index.html":{}}}],["k4[cloudflare",{"_index":2164,"title":{},"body":{"index.html":{}}}],["k[configure",{"_index":2160,"title":{},"body":{"index.html":{}}}],["key",{"_index":610,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"injectables/OrderApi.html":{},"injectables/PermissionService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{}}}],["keycloak",{"_index":247,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/KeycloakService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["keycloak(this.authconfig.keycloak",{"_index":792,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["keycloak.service",{"_index":1255,"title":{},"body":{"injectables/PermissionService.html":{}}}],["keycloak_admin",{"_index":2033,"title":{},"body":{"index.html":{}}}],["keycloak_admin_password",{"_index":2034,"title":{},"body":{"index.html":{}}}],["keycloak_realm_public_key",{"_index":1978,"title":{},"body":{"index.html":{}}}],["keycloakservice",{"_index":259,"title":{"injectables/KeycloakService.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"injectables/PermissionService.html":{},"coverage.html":{}}}],["keys",{"_index":559,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["key}.${k",{"_index":1036,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["kind",{"_index":2212,"title":{},"body":{"license.html":{}}}],["label",{"_index":895,"title":{},"body":{"classes/NavigationItem.html":{},"interfaces/Param.html":{},"classes/RouteItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":1651,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":521,"title":{},"body":{"components/CheckoutComponent.html":{},"index.html":{}}}],["lastname",{"_index":437,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UserResponse.html":{}}}],["later",{"_index":1959,"title":{},"body":{"index.html":{}}}],["left",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"overview.html":{}}}],["lg",{"_index":1205,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["lg:ml",{"_index":1516,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["liability",{"_index":2227,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2224,"title":{},"body":{"license.html":{}}}],["lib",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["libraries",{"_index":1886,"title":{},"body":{"index.html":{}}}],["library",{"_index":1883,"title":{},"body":{"index.html":{}}}],["libs/.../add",{"_index":2239,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../api.ts",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../auth",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../auth.interceptor.ts",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../cart",{"_index":2242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../cart.animations.ts",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../cart.store.ts",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../company",{"_index":2243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../draw",{"_index":2245,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../monitoring",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../navigation",{"_index":1846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../navigation.animations.ts",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../order",{"_index":1848,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../order.routes.ts",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../order.store.ts",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../param.ts",{"_index":2244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../payment",{"_index":2246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../pdf",{"_index":2247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../permission",{"_index":1850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../permission.guard.ts",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../print",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../product",{"_index":2240,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../product.store.ts",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../provide",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.store.ts",{"_index":2248,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../variables.ts",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/api/api.module.ts",{"_index":130,"title":{},"body":{"modules/ApiModule.html":{}}}],["libs/api/api.module.ts:12",{"_index":136,"title":{},"body":{"modules/ApiModule.html":{}}}],["libs/api/api/api.ts",{"_index":1713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/api/api/order",{"_index":958,"title":{},"body":{"injectables/OrderApi.html":{},"coverage.html":{}}}],["libs/api/api/product",{"_index":1415,"title":{},"body":{"injectables/ProductApi.html":{},"coverage.html":{}}}],["libs/api/api/shopping",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["libs/api/api/user",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["libs/api/configuration.ts",{"_index":533,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{}}}],["libs/api/configuration.ts:103",{"_index":631,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:122",{"_index":612,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:144",{"_index":594,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:149",{"_index":609,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:154",{"_index":592,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:41",{"_index":557,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:42",{"_index":588,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:43",{"_index":587,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:47",{"_index":555,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:48",{"_index":558,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:49",{"_index":589,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:53",{"_index":583,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:61",{"_index":573,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:67",{"_index":551,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/encoder.ts",{"_index":705,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"coverage.html":{}}}],["libs/api/encoder.ts:11",{"_index":723,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/encoder.ts:14",{"_index":715,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/encoder.ts:17",{"_index":718,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/encoder.ts:8",{"_index":721,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/model/add",{"_index":6,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/api/model/address",{"_index":118,"title":{},"body":{"interfaces/AddressResponse.html":{},"coverage.html":{}}}],["libs/api/model/cart",{"_index":409,"title":{},"body":{"interfaces/CartItemResponse.html":{},"coverage.html":{}}}],["libs/api/model/get",{"_index":767,"title":{},"body":{"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"coverage.html":{}}}],["libs/api/model/http",{"_index":770,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"coverage.html":{}}}],["libs/api/model/image",{"_index":780,"title":{},"body":{"interfaces/ImageResponse.html":{},"coverage.html":{}}}],["libs/api/model/order",{"_index":1175,"title":{},"body":{"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["libs/api/model/problem",{"_index":1413,"title":{},"body":{"interfaces/ProblemDetails.html":{},"coverage.html":{}}}],["libs/api/model/product",{"_index":1496,"title":{},"body":{"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"coverage.html":{}}}],["libs/api/model/remove",{"_index":1522,"title":{},"body":{"interfaces/RemoveCartItemRequest.html":{},"coverage.html":{}}}],["libs/api/model/request.ts",{"_index":1523,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["libs/api/model/shopping",{"_index":1533,"title":{},"body":{"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{}}}],["libs/api/model/update",{"_index":1534,"title":{},"body":{"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"coverage.html":{}}}],["libs/api/model/user",{"_index":1583,"title":{},"body":{"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["libs/api/model/validation",{"_index":1584,"title":{},"body":{"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["libs/api/param.ts",{"_index":1224,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/api/variables.ts",{"_index":1739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/auth.facade.ts",{"_index":258,"title":{},"body":{"injectables/AuthFacade.html":{},"coverage.html":{}}}],["libs/auth/src/lib/auth.facade.ts:10",{"_index":279,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:11",{"_index":281,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:13",{"_index":268,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:17",{"_index":275,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:21",{"_index":276,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:25",{"_index":277,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:29",{"_index":274,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:33",{"_index":273,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:37",{"_index":269,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/enums/permission",{"_index":1852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/auth/src/lib/guards/permission.guard.ts",{"_index":1741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/interceptors/auth.interceptor.ts",{"_index":1743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/models/auth",{"_index":245,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/providers/provide",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts",{"_index":782,"title":{},"body":{"injectables/KeycloakService.html":{},"coverage.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:11",{"_index":794,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:15",{"_index":796,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:19",{"_index":793,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:21",{"_index":786,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:28",{"_index":787,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:32",{"_index":788,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:36",{"_index":789,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:9",{"_index":791,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/permission.service.ts",{"_index":1250,"title":{},"body":{"injectables/PermissionService.html":{},"coverage.html":{}}}],["libs/auth/src/lib/services/permission.service.ts:10",{"_index":1254,"title":{},"body":{"injectables/PermissionService.html":{}}}],["libs/auth/src/lib/services/permission.service.ts:14",{"_index":1252,"title":{},"body":{"injectables/PermissionService.html":{}}}],["libs/auth/src/lib/services/permission.service.ts:9",{"_index":1253,"title":{},"body":{"injectables/PermissionService.html":{}}}],["libs/cart/src/lib/+state/cart.store.ts",{"_index":35,"title":{},"body":{"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/cart/src/lib/cart.facade.ts",{"_index":339,"title":{},"body":{"injectables/CartFacade.html":{},"coverage.html":{}}}],["libs/cart/src/lib/cart.facade.ts:11",{"_index":365,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:12",{"_index":368,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:13",{"_index":367,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:15",{"_index":352,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:19",{"_index":357,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:23",{"_index":355,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:27",{"_index":350,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:39",{"_index":363,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:43",{"_index":359,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:53",{"_index":356,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:57",{"_index":354,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:61",{"_index":360,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:65",{"_index":358,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:69",{"_index":351,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/components/cart",{"_index":395,"title":{},"body":{"components/CartIconComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/components/cart/cart.animations.ts",{"_index":1749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts",{"_index":294,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:18",{"_index":309,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:19",{"_index":313,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:20",{"_index":311,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:21",{"_index":317,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:22",{"_index":315,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:24",{"_index":307,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:28",{"_index":305,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts",{"_index":441,"title":{},"body":{"components/CheckoutComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:112",{"_index":458,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:122",{"_index":459,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:21",{"_index":470,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:22",{"_index":474,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:23",{"_index":472,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:24",{"_index":462,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:25",{"_index":475,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:26",{"_index":476,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:27",{"_index":468,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:28",{"_index":481,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:29",{"_index":464,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:30",{"_index":466,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:31",{"_index":479,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:33",{"_index":460,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:37",{"_index":456,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:46",{"_index":461,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:57",{"_index":457,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/shared/cart",{"_index":413,"title":{},"body":{"components/CartItemsComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/models/cart",{"_index":1751,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/cart/src/lib/models/checkout",{"_index":430,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["libs/monitoring/src/lib/models/monitored",{"_index":814,"title":{},"body":{"interfaces/MonitoredUser.html":{},"coverage.html":{}}}],["libs/monitoring/src/lib/models/monitoring",{"_index":817,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/monitoring/src/lib/monitoring.facade.ts",{"_index":825,"title":{},"body":{"injectables/MonitoringFacade.html":{},"coverage.html":{}}}],["libs/monitoring/src/lib/monitoring.facade.ts:10",{"_index":830,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["libs/monitoring/src/lib/monitoring.facade.ts:12",{"_index":828,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["libs/monitoring/src/lib/providers/provide",{"_index":1754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.animations.ts",{"_index":1757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts",{"_index":838,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:33",{"_index":859,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:34",{"_index":861,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:36",{"_index":853,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:37",{"_index":854,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:38",{"_index":851,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:40",{"_index":857,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:42",{"_index":848,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/user",{"_index":1558,"title":{},"body":{"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/enums/navigation",{"_index":1851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/navigation/src/lib/models/navigation",{"_index":893,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts",{"_index":912,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts:10",{"_index":917,"title":{},"body":{"injectables/NavigationService.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts:12",{"_index":925,"title":{},"body":{"injectables/NavigationService.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts:22",{"_index":915,"title":{},"body":{"injectables/NavigationService.html":{}}}],["libs/navigation/src/lib/util/provide",{"_index":881,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/+state/order.store.ts",{"_index":1759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/components/order",{"_index":1104,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["libs/order/src/lib/components/shared/order",{"_index":1198,"title":{},"body":{"components/OrderStatusComponent.html":{},"coverage.html":{}}}],["libs/order/src/lib/config/print",{"_index":1760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/models/company",{"_index":1762,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/draw",{"_index":1764,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/order",{"_index":1766,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/payment",{"_index":1767,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/pdf",{"_index":1769,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/order.facade.ts",{"_index":1150,"title":{},"body":{"injectables/OrderFacade.html":{},"coverage.html":{}}}],["libs/order/src/lib/order.facade.ts:11",{"_index":1158,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:15",{"_index":1160,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:19",{"_index":1157,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:23",{"_index":1162,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:27",{"_index":1163,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:31",{"_index":1164,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:9",{"_index":1166,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.routes.ts",{"_index":1772,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/services/order",{"_index":1073,"title":{},"body":{"injectables/OrderDataService.html":{},"coverage.html":{}}}],["libs/order/src/lib/services/print",{"_index":1259,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["libs/product/src/lib/+state/product.store.ts",{"_index":1775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/product/src/lib/components/product",{"_index":1452,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["libs/product/src/lib/models/product",{"_index":1776,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/product/src/lib/product.facade.ts",{"_index":1467,"title":{},"body":{"injectables/ProductFacade.html":{},"coverage.html":{}}}],["libs/product/src/lib/product.facade.ts:10",{"_index":1481,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:12",{"_index":1472,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:16",{"_index":1473,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:20",{"_index":1477,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:24",{"_index":1476,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:28",{"_index":1475,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:32",{"_index":1479,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/services/product",{"_index":1440,"title":{},"body":{"injectables/ProductDataService.html":{},"coverage.html":{}}}],["libs/shared/src/lib/components/date",{"_index":728,"title":{},"body":{"components/DateTimeComponent.html":{},"coverage.html":{}}}],["libs/shared/src/lib/components/form",{"_index":740,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["libs/user/src/lib/+state/user.store.ts",{"_index":1780,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/user/src/lib/user.facade.ts",{"_index":1539,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["libs/user/src/lib/user.facade.ts:11",{"_index":1545,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:15",{"_index":1546,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:19",{"_index":1548,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:23",{"_index":1550,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:9",{"_index":1552,"title":{},"body":{"injectables/UserFacade.html":{}}}],["license",{"_index":2167,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":2168,"title":{},"body":{"index.html":{}}}],["light",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lighter",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":2190,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2214,"title":{},"body":{"license.html":{}}}],["limitfornewcontent",{"_index":1379,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["limiting",{"_index":1663,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["line",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linear",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":634,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{}}}],["links",{"_index":1621,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1938,"title":{},"body":{"index.html":{}}}],["list",{"_index":1014,"title":{},"body":{"injectables/OrderApi.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"injectables/ProductApi.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["list.component.html",{"_index":1178,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.scss",{"_index":1179,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts",{"_index":1177,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":1185,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts:20",{"_index":1183,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts:21",{"_index":1188,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:22",{"_index":1182,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts:23",{"_index":1187,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:25",{"_index":1181,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/order",{"_index":1176,"title":{},"body":{"components/OrderListComponent.html":{},"coverage.html":{}}}],["list/product",{"_index":1490,"title":{},"body":{"components/ProductListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":248,"title":{},"body":{"interfaces/AuthConfig.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/MonitoringConfig.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1077,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["load(filter",{"_index":1084,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["loadbyid",{"_index":1078,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["loadbyid(id",{"_index":1088,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["loadchildren",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":160,"title":{},"body":{"modules/ApiModule.html":{}}}],["loadshoppingsession",{"_index":86,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["localvarheaders",{"_index":1042,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarheaders.set('accept",{"_index":1049,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarhttpcontext",{"_index":1050,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarhttpheaderacceptselected",{"_index":1044,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarhttpheaderacceptselected.startswith('text",{"_index":1056,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarpath",{"_index":1058,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvartransfercache",{"_index":1052,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["locations",{"_index":1235,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["logging",{"_index":1896,"title":{},"body":{"index.html":{}}}],["login",{"_index":265,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["logonly",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":266,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"components/UserNavigationComponent.html":{}}}],["lookupcredential",{"_index":545,"title":{},"body":{"classes/Configuration.html":{}}}],["lookupcredential(key",{"_index":608,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["m.orderroutes",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.productroutes",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m[upload",{"_index":2166,"title":{},"body":{"index.html":{}}}],["made",{"_index":629,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mail",{"_index":605,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["main",{"_index":2072,"title":{},"body":{"index.html":{}}}],["makeenvironmentproviders",{"_index":885,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1889,"title":{},"body":{"index.html":{}}}],["manages",{"_index":2105,"title":{},"body":{"index.html":{}}}],["manually",{"_index":23,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":564,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["margin",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":1229,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":1210,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["max_thumbnails",{"_index":1180,"title":{},"body":{"components/OrderListComponent.html":{}}}],["maxage",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":876,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menuitems",{"_index":843,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["merchantability",{"_index":2216,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2076,"title":{},"body":{"index.html":{},"license.html":{}}}],["messages",{"_index":1931,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{}}}],["method",{"_index":633,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["methods",{"_index":131,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["middle",{"_index":1372,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"components/ProductSearchComponent.html":{}}}],["mime",{"_index":597,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mime.tolowercase",{"_index":672,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["minus",{"_index":567,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["miscellaneous",{"_index":1844,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":678,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mit",{"_index":2170,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mm",{"_index":1312,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["mmm",{"_index":737,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["mobilemenuopen",{"_index":844,"title":{},"body":{"components/NavigationComponent.html":{}}}],["mock",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["model/add",{"_index":1010,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["model/order",{"_index":1013,"title":{},"body":{"injectables/OrderApi.html":{}}}],["model/product",{"_index":1433,"title":{},"body":{"injectables/ProductApi.html":{}}}],["model/validation",{"_index":1436,"title":{},"body":{"injectables/ProductApi.html":{}}}],["models/auth",{"_index":798,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["models/checkout",{"_index":485,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["models/company",{"_index":1302,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/draw",{"_index":1305,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/monitored",{"_index":831,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["models/monitoring",{"_index":833,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["models/navigation",{"_index":865,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["models/order",{"_index":1097,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["models/payment",{"_index":1303,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/pdf",{"_index":1306,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/product",{"_index":1448,"title":{},"body":{"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{}}}],["modern",{"_index":1865,"title":{},"body":{"index.html":{}}}],["modify",{"_index":2192,"title":{},"body":{"license.html":{}}}],["module",{"_index":127,"title":{"modules/ApiModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":129,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":142,"title":{},"body":{"modules/ApiModule.html":{}}}],["monitoreduser",{"_index":813,"title":{"interfaces/MonitoredUser.html":{}},"body":{"interfaces/MonitoredUser.html":{},"injectables/MonitoringFacade.html":{},"coverage.html":{}}}],["monitoring",{"_index":1894,"title":{},"body":{"index.html":{}}}],["monitoring.ts",{"_index":1755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoring_config",{"_index":822,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoringconfig",{"_index":816,"title":{"interfaces/MonitoringConfig.html":{}},"body":{"interfaces/MonitoringConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoringfacade",{"_index":824,"title":{"injectables/MonitoringFacade.html":{}},"body":{"injectables/MonitoringFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoringfacade.setuser",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mono",{"_index":1943,"title":{},"body":{"index.html":{}}}],["more",{"_index":580,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{},"index.html":{}}}],["multi",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multipurpose",{"_index":603,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mvp",{"_index":1671,"title":{},"body":{"changelog.html":{}}}],["n",{"_index":166,"title":{},"body":{"modules/ApiModule.html":{}}}],["name",{"_index":138,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/ImageResponse.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":560,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["national",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigate",{"_index":2036,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"index.html":{}}}],["navigation'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["navigation.animations",{"_index":867,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component",{"_index":869,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":839,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":840,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserNavigationComponent.html":{}}}],["navigation.component.ts",{"_index":1559,"title":{},"body":{"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["navigation.component.ts:16",{"_index":1572,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:18",{"_index":1565,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:19",{"_index":1567,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:20",{"_index":1568,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:21",{"_index":1566,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:23",{"_index":1562,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:28",{"_index":1564,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:33",{"_index":1563,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.ts",{"_index":882,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigation/user",{"_index":868,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["navigation_config",{"_index":886,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigationcomponent",{"_index":184,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["navigationconfig",{"_index":880,"title":{"interfaces/NavigationConfig.html":{}},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{}}}],["navigationitem",{"_index":892,"title":{"classes/NavigationItem.html":{}},"body":{"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["navigationitem:13",{"_index":1531,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:18",{"_index":1528,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:23",{"_index":1527,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:8",{"_index":1529,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:9",{"_index":1530,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationservice",{"_index":841,"title":{"injectables/NavigationService.html":{}},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"coverage.html":{}}}],["navigationtype",{"_index":863,"title":{},"body":{"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"miscellaneous/enumerations.html":{}}}],["navigationtype.route",{"_index":909,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["nbsp",{"_index":1578,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["need",{"_index":164,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["needed",{"_index":1979,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["nestjs",{"_index":1915,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":1994,"title":{},"body":{"index.html":{}}}],["new",{"_index":96,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"interfaces/AuthConfig.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1989,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":143,"title":{},"body":{"modules/ApiModule.html":{}}}],["ngoninit",{"_index":1112,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["ngoptimizedimage",{"_index":296,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{}}}],["ngrx",{"_index":1910,"title":{},"body":{"index.html":{}}}],["ngrx/signals",{"_index":46,"title":{},"body":{"interfaces/AdditionalState.html":{},"dependencies.html":{}}}],["ngrx/signals/entities",{"_index":57,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["node",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1916,"title":{},"body":{"index.html":{}}}],["none",{"_index":837,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["noninfringement",{"_index":2220,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":502,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["noreusestrategy",{"_index":938,"title":{"classes/NoReuseStrategy.html":{}},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":1382,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["notable",{"_index":1588,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":14,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["notice",{"_index":2205,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1960,"title":{},"body":{"index.html":{}}}],["npx",{"_index":2016,"title":{},"body":{"index.html":{}}}],["null",{"_index":38,"title":{},"body":{"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":28,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CheckoutComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/MonitoredUser.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":1689,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nx.json",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1025,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(filter",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(value).foreach",{"_index":1034,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["observable",{"_index":982,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["observe",{"_index":979,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["obtaining",{"_index":2181,"title":{},"body":{"license.html":{}}}],["older",{"_index":681,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["omit",{"_index":1975,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":1107,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"miscellaneous/variables.html":{}}}],["oninit(store",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onload",{"_index":803,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["onsameurlnavigation",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacity",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":879,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["openapi",{"_index":18,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["openapi/swagger",{"_index":1918,"title":{},"body":{"index.html":{}}}],["openapigenerator",{"_index":1900,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"classes/RouteItem.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":896,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{}}}],["options.border.bottom",{"_index":1380,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.border.left",{"_index":1327,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.border.right",{"_index":1336,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.border.top",{"_index":1329,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.context",{"_index":1051,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["options.httpheaderaccept",{"_index":1045,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["options.pointer.x",{"_index":1326,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.pointer.y",{"_index":1328,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.transfercache",{"_index":1053,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["options.ts",{"_index":1765,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orange",{"_index":1222,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["order",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["order().amount",{"_index":1149,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["order().id",{"_index":1137,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["order().items",{"_index":1147,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["order.amount",{"_index":1193,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.facade",{"_index":1127,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["order.id",{"_index":1190,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["order.id}.pdf",{"_index":1325,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["order.items",{"_index":1191,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.items.foreach(item",{"_index":1383,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["orderapi",{"_index":957,"title":{"injectables/OrderApi.html":{}},"body":{"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderdataservice",{"_index":1072,"title":{"injectables/OrderDataService.html":{}},"body":{"injectables/OrderDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderdetailcomponent",{"_index":227,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderfacade",{"_index":340,"title":{"injectables/OrderFacade.html":{}},"body":{"injectables/CartFacade.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["orderfilter",{"_index":1085,"title":{},"body":{"injectables/OrderDataService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orderitemresponse",{"_index":1174,"title":{"interfaces/OrderItemResponse.html":{}},"body":{"interfaces/OrderItemResponse.html":{},"interfaces/OrderResponse.html":{},"coverage.html":{}}}],["orderlistcomponent",{"_index":230,"title":{"components/OrderListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderlistresponse",{"_index":1012,"title":{"interfaces/OrderListResponse.html":{}},"body":{"injectables/OrderApi.html":{},"interfaces/OrderListResponse.html":{},"coverage.html":{}}}],["orderresponse",{"_index":370,"title":{"interfaces/OrderResponse.html":{}},"body":{"injectables/CartFacade.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["orderroutes",{"_index":1773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orders",{"_index":923,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"components/OrderListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["orderstatus",{"_index":1197,"title":{},"body":{"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.created",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderstatuscomponent",{"_index":232,"title":{"components/OrderStatusComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["orderstore",{"_index":1151,"title":{},"body":{"injectables/OrderFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orm",{"_index":1919,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":607,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"license.html":{}}}],["out",{"_index":1581,"title":{},"body":{"components/UserNavigationComponent.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":422,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["outputs",{"_index":417,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["override",{"_index":632,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["overview",{"_index":1875,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1784,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagetitle",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panel",{"_index":330,"title":{},"body":{"components/CartComponent.html":{}}}],["param",{"_index":591,"title":{"interfaces/Param.html":{}},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"coverage.html":{}}}],["param.dataformat",{"_index":699,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["param.value",{"_index":700,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["parameter",{"_index":577,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"miscellaneous/functions.html":{}}}],["paramlocation",{"_index":1226,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["paramstyle",{"_index":1227,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parentmodule",{"_index":156,"title":{},"body":{"modules/ApiModule.html":{}}}],["particular",{"_index":2218,"title":{},"body":{"license.html":{}}}],["password",{"_index":540,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["patch+json",{"_index":673,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["patchstate",{"_index":41,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["patchstate(store",{"_index":91,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":576,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payment",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentterms",{"_index":1281,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["paymentterms.accountname",{"_index":1405,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["paymentterms.accountnumber",{"_index":1406,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["paymentterms.bankname",{"_index":1403,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["paymentterms.routingnumber",{"_index":1408,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["pdf",{"_index":1912,"title":{},"body":{"index.html":{}}}],["pdfcolumn",{"_index":1771,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["pdftablecolumns",{"_index":1293,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":1895,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2175,"title":{},"body":{"license.html":{}}}],["permissionguard",{"_index":1742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissions",{"_index":2108,"title":{},"body":{"index.html":{}}}],["permissionservice",{"_index":260,"title":{"injectables/PermissionService.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionservice.haspermission(permissionstrategy.authenticated",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissionstrategies",{"_index":1251,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permissionstrategy",{"_index":271,"title":{},"body":{"injectables/AuthFacade.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/PermissionService.html":{},"classes/RouteItem.html":{},"miscellaneous/enumerations.html":{}}}],["permissionstrategy.authenticated",{"_index":924,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/PermissionService.html":{}}}],["permissionstrategyfn",{"_index":1256,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permissionstrategyfn.bind(this",{"_index":1258,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permit",{"_index":2199,"title":{},"body":{"license.html":{}}}],["person",{"_index":2180,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2200,"title":{},"body":{"license.html":{}}}],["pgadmin",{"_index":2002,"title":{},"body":{"index.html":{}}}],["pgadmin_default_password",{"_index":2053,"title":{},"body":{"index.html":{}}}],["phase",{"_index":2092,"title":{},"body":{"index.html":{}}}],["phone",{"_index":439,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone.value",{"_index":496,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["phone?.dirty",{"_index":494,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["pipedelimited",{"_index":1231,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["pipeline",{"_index":2064,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":1956,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1242,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["png",{"_index":1335,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["pointer",{"_index":1518,"title":{},"body":{"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":2209,"title":{},"body":{"license.html":{}}}],["postal",{"_index":528,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["postgres",{"_index":2001,"title":{},"body":{"index.html":{}}}],["postgres_password",{"_index":2058,"title":{},"body":{"index.html":{}}}],["postgres_user",{"_index":2057,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":1922,"title":{},"body":{"index.html":{}}}],["pr",{"_index":2071,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1933,"title":{},"body":{"index.html":{}}}],["prefixes",{"_index":569,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["prerequisites",{"_index":1958,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1939,"title":{},"body":{"index.html":{}}}],["price",{"_index":450,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["print",{"_index":1146,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["printinvoiceservice",{"_index":1111,"title":{"injectables/PrintInvoiceService.html":{}},"body":{"components/OrderDetailComponent.html":{},"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["printpdf",{"_index":1113,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["printpdf(order",{"_index":1115,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["prisma",{"_index":1836,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["prisma/client",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["prisma:generate",{"_index":1997,"title":{},"body":{"index.html":{}}}],["prisma:migrate:dev",{"_index":2000,"title":{},"body":{"index.html":{}}}],["prisma:seedthe",{"_index":2042,"title":{},"body":{"index.html":{}}}],["private",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["probably",{"_index":691,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["problem",{"_index":771,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["problemdetails",{"_index":1412,"title":{"interfaces/ProblemDetails.html":{}},"body":{"interfaces/ProblemDetails.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["processing",{"_index":1892,"title":{},"body":{"index.html":{}}}],["product",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetProductByIdRequest.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["product().description",{"_index":1466,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product().name",{"_index":1464,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product().price",{"_index":1465,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product.facade",{"_index":1461,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{}}}],["product.id",{"_index":1493,"title":{},"body":{"components/ProductListComponent.html":{}}}],["product.name",{"_index":1494,"title":{},"body":{"components/ProductListComponent.html":{}}}],["product.price",{"_index":1495,"title":{},"body":{"components/ProductListComponent.html":{}}}],["productapi",{"_index":1414,"title":{"injectables/ProductApi.html":{}},"body":{"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productdataservice",{"_index":1439,"title":{"injectables/ProductDataService.html":{}},"body":{"injectables/ProductDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productdetailcomponent",{"_index":234,"title":{"components/ProductDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["productfacade",{"_index":842,"title":{"injectables/ProductFacade.html":{}},"body":{"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["productfilter",{"_index":1443,"title":{},"body":{"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"components/ProductSearchComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["productfilter().name",{"_index":1520,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["productid",{"_index":27,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["productlistcomponent",{"_index":236,"title":{"components/ProductListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["productlistresponse",{"_index":1432,"title":{"interfaces/ProductListResponse.html":{}},"body":{"injectables/ProductApi.html":{},"interfaces/ProductListResponse.html":{},"coverage.html":{}}}],["productname",{"_index":410,"title":{},"body":{"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{}}}],["productresponse",{"_index":1434,"title":{"interfaces/ProductResponse.html":{}},"body":{"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"coverage.html":{}}}],["products",{"_index":920,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/ProductApi.html":{},"components/ProductListComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["productsearchcomponent",{"_index":237,"title":{"components/ProductSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["productstore",{"_index":1482,"title":{},"body":{"injectables/ProductFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productthumbnail",{"_index":411,"title":{},"body":{"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{}}}],["programmatic",{"_index":2115,"title":{},"body":{"index.html":{}}}],["progress",{"_index":990,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["progressive",{"_index":1906,"title":{},"body":{"index.html":{}}}],["project",{"_index":1590,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["project.properties",{"_index":2127,"title":{},"body":{"index.html":{}}}],["projects",{"_index":2013,"title":{},"body":{"index.html":{}}}],["promise",{"_index":87,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["promise.reject(new",{"_index":1101,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["proper",{"_index":2107,"title":{},"body":{"index.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"properties.html":{}}}],["protected",{"_index":898,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{}}}],["protection",{"_index":2112,"title":{},"body":{"index.html":{}}}],["provide",{"_index":153,"title":{},"body":{"modules/ApiModule.html":{},"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideapi",{"_index":1711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideapi(withconfiguration",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideauth",{"_index":1747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":2210,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":68,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["providehttpclient(withfetch",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providemonitoring",{"_index":1756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["providenavigation",{"_index":888,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providerouter(approutes",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouterstore",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":151,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providestore",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province",{"_index":527,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["provisioned",{"_index":2093,"title":{},"body":{"index.html":{}}}],["public",{"_index":152,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{},"index.html":{}}}],["public.git",{"_index":1967,"title":{},"body":{"index.html":{}}}],["publish",{"_index":2193,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2219,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1863,"title":{},"body":{"index.html":{}}}],["push",{"_index":1998,"title":{},"body":{"index.html":{}}}],["px",{"_index":1206,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["py",{"_index":1208,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["qty",{"_index":427,"title":{},"body":{"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["quality",{"_index":2134,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":362,"title":{},"body":{"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"coverage.html":{}}}],["query",{"_index":586,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NavigationItem.html":{},"interfaces/Param.html":{},"classes/RouteItem.html":{},"miscellaneous/typealiases.html":{}}}],["raised",{"_index":1654,"title":{},"body":{"changelog.html":{}}}],["rarr",{"_index":338,"title":{},"body":{"components/CartComponent.html":{}}}],["rate",{"_index":1662,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rds",{"_index":2098,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":442,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["readme.md",{"_index":579,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["readonly",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["realm",{"_index":251,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["record",{"_index":2251,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["red",{"_index":757,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["redirectto",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirecturi",{"_index":811,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["refactor",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1877,"title":{},"body":{"index.html":{}}}],["refined",{"_index":1868,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["regexp",{"_index":667,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["regexp('^(application/json",{"_index":668,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["region",{"_index":123,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["register",{"_index":267,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["registration",{"_index":2029,"title":{},"body":{"index.html":{}}}],["relational",{"_index":1923,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":1519,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["reload",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":428,"title":{},"body":{"components/CartItemsComponent.html":{},"index.html":{}}}],["removecartitemrequest",{"_index":1521,"title":{"interfaces/RemoveCartItemRequest.html":{}},"body":{"interfaces/RemoveCartItemRequest.html":{},"coverage.html":{}}}],["removeitem",{"_index":304,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{}}}],["removeitem(id",{"_index":306,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["repo",{"_index":1944,"title":{},"body":{"index.html":{}}}],["report",{"_index":989,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["reportprogress",{"_index":973,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["repository",{"_index":1871,"title":{},"body":{"index.html":{}}}],["req",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set('authorization",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":617,"title":{"interfaces/Request.html":{}},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{}}}],["request.ts",{"_index":9,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"coverage.html":{}}}],["required",{"_index":760,"title":{},"body":{"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{}}}],["required}@if",{"_index":764,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["requirements",{"_index":2114,"title":{},"body":{"index.html":{}}}],["res",{"_index":388,"title":{},"body":{"injectables/CartFacade.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["res.items",{"_index":1450,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["res.phone",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res?.items",{"_index":1099,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["reset",{"_index":2236,"title":{},"body":{"overview.html":{}}}],["response",{"_index":984,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"injectables/ProductApi.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UserResponse.html":{}}}],["response.ts",{"_index":119,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["responsetype",{"_index":1062,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["responsetype_",{"_index":1054,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["restriction",{"_index":2188,"title":{},"body":{"license.html":{}}}],["results",{"_index":32,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":943,"title":{},"body":{"classes/NoReuseStrategy.html":{},"index.html":{}}}],["return",{"_index":110,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":987,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["returns",{"_index":141,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":940,"title":{},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{}}}],["right",{"_index":1344,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2191,"title":{},"body":{"license.html":{}}}],["root",{"_index":69,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["rounded",{"_index":1204,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["route",{"_index":910,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["route.data?.['showinmenu",{"_index":890,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["routeitem",{"_index":856,"title":{"classes/RouteItem.html":{}},"body":{"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["routeitem('orders",{"_index":921,"title":{},"body":{"injectables/NavigationService.html":{}}}],["routeitem('products",{"_index":918,"title":{},"body":{"injectables/NavigationService.html":{}}}],["router",{"_index":446,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routereusestrategy",{"_index":942,"title":{},"body":{"classes/NoReuseStrategy.html":{},"miscellaneous/variables.html":{}}}],["routerlink",{"_index":297,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["routermodule",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["routerreducer",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":883,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":1407,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"index.html":{}}}],["routingnumber",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rs256",{"_index":1993,"title":{},"body":{"index.html":{}}}],["rules",{"_index":2113,"title":{},"body":{"index.html":{}}}],["run",{"_index":1987,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2095,"title":{},"body":{"index.html":{}}}],["running",{"_index":2026,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":63,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"dependencies.html":{}}}],["s3",{"_index":2099,"title":{},"body":{"index.html":{}}}],["saasdotnet",{"_index":2019,"title":{},"body":{"index.html":{}}}],["safe",{"_index":1908,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1999,"title":{},"body":{"index.html":{}}}],["script",{"_index":2044,"title":{},"body":{"index.html":{}}}],["search",{"_index":1502,"title":{},"body":{"components/ProductSearchComponent.html":{},"index.html":{}}}],["search'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["search.component.html",{"_index":1504,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.scss",{"_index":1505,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts",{"_index":1501,"title":{},"body":{"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:19",{"_index":1511,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:20",{"_index":1514,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:21",{"_index":1512,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:23",{"_index":1510,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:29",{"_index":1508,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search/product",{"_index":1500,"title":{},"body":{"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["secrets",{"_index":2110,"title":{},"body":{"index.html":{}}}],["section",{"_index":562,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["secure",{"_index":1924,"title":{},"body":{"index.html":{}}}],["securely",{"_index":2121,"title":{},"body":{"index.html":{}}}],["security",{"_index":2165,"title":{},"body":{"index.html":{}}}],["securityschemes",{"_index":561,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["see",{"_index":167,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["seed",{"_index":2043,"title":{},"body":{"index.html":{}}}],["seeding",{"_index":2041,"title":{},"body":{"index.html":{}}}],["select",{"_index":613,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selected",{"_index":628,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selectedmenuitem",{"_index":845,"title":{},"body":{"components/NavigationComponent.html":{}}}],["selectheaderaccept",{"_index":546,"title":{},"body":{"classes/Configuration.html":{}}}],["selectheaderaccept(accepts",{"_index":611,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selectheadercontenttype",{"_index":547,"title":{},"body":{"classes/Configuration.html":{}}}],["selectheadercontenttype(contenttypes",{"_index":630,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selection",{"_index":627,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selector",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["sell",{"_index":2197,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2084,"title":{},"body":{"index.html":{}}}],["sentry",{"_index":818,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sentry.createerrorhandler",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.io",{"_index":2012,"title":{},"body":{"index.html":{}}}],["sentry.setuser",{"_index":835,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["sentry.traceservice",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/angular",{"_index":832,"title":{},"body":{"injectables/MonitoringFacade.html":{},"dependencies.html":{}}}],["sentry/cli",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["sentry/nestjs",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["sentry/profiling",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["sentry/wizard@latest",{"_index":2017,"title":{},"body":{"index.html":{}}}],["server",{"_index":1983,"title":{},"body":{"index.html":{}}}],["service",{"_index":2097,"title":{},"body":{"index.html":{}}}],["services",{"_index":2070,"title":{},"body":{"index.html":{}}}],["services/keycloak.service",{"_index":282,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["services/navigation.service",{"_index":862,"title":{},"body":{"components/NavigationComponent.html":{}}}],["services/permission.service",{"_index":285,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["services/print",{"_index":1128,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["session",{"_index":99,"title":{},"body":{"interfaces/AdditionalState.html":{},"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":749,"title":{},"body":{"components/FormErrorComponent.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{}}}],["setallentities",{"_index":55,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["setallentities(shoppingsession.items",{"_index":92,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["setfilter",{"_index":1471,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["setfilter(filter",{"_index":1478,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["setproductcategory",{"_index":846,"title":{},"body":{"components/NavigationComponent.html":{}}}],["setproductcategory(category",{"_index":847,"title":{},"body":{"components/NavigationComponent.html":{}}}],["setproductnamefilter",{"_index":1507,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["setproductnamefilter(name",{"_index":1509,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["setshowcart",{"_index":347,"title":{},"body":{"injectables/CartFacade.html":{}}}],["setshowcart(showcart",{"_index":115,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":1977,"title":{},"body":{"index.html":{}}}],["settings/keys",{"_index":1991,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1957,"title":{},"body":{"index.html":{}}}],["setuser",{"_index":826,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["setuser(user",{"_index":827,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["shall",{"_index":2206,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1898,"title":{},"body":{"index.html":{}}}],["shared/cart",{"_index":320,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["shared/order",{"_index":1130,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["shipping",{"_index":333,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["shop",{"_index":12,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"components/NavigationComponent.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shop.png",{"_index":1334,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["shop/api",{"_index":61,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{}}}],["shop/auth",{"_index":906,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"components/UserNavigationComponent.html":{}}}],["shop/cart",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"components/UserNavigationComponent.html":{}}}],["shop/navigation",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["shop/order",{"_index":371,"title":{},"body":{"injectables/CartFacade.html":{}}}],["shop/order').then(m",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shop/product",{"_index":866,"title":{},"body":{"components/NavigationComponent.html":{}}}],["shop/product').then(m",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shop/shared",{"_index":482,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["shop/user",{"_index":486,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/UserNavigationComponent.html":{}}}],["shopping",{"_index":98,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shoppingsession",{"_index":88,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["shoppingsession.id",{"_index":93,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["shoppingsessionapi",{"_index":59,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shoppingsessionid",{"_index":36,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["shoppingsessionresponse",{"_index":1532,"title":{"interfaces/ShoppingSessionResponse.html":{}},"body":{"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{}}}],["shouldattach",{"_index":944,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["shoulddetach",{"_index":945,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["shouldreuseroute",{"_index":946,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["shouldreuseroute(future",{"_index":952,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["showcart",{"_index":37,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"miscellaneous/variables.html":{}}}],["showinmenu",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showshippinginformation",{"_index":451,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["sign",{"_index":1580,"title":{},"body":{"components/UserNavigationComponent.html":{},"index.html":{}}}],["signal",{"_index":353,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{}}}],["signal('products",{"_index":860,"title":{},"body":{"components/NavigationComponent.html":{}}}],["signal(false",{"_index":858,"title":{},"body":{"components/NavigationComponent.html":{}}}],["signal(window.innerwidth",{"_index":477,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["signalstore",{"_index":42,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["silent",{"_index":807,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["silentcheckssoredirecturi",{"_index":805,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["simple",{"_index":685,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["simplify",{"_index":1668,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":1897,"title":{},"body":{"index.html":{}}}],["size",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skipself",{"_index":144,"title":{},"body":{"modules/ApiModule.html":{}}}],["sku",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["skus",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1215,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["small",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":2183,"title":{},"body":{"license.html":{}}}],["sonar",{"_index":1655,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sonarcloud",{"_index":2125,"title":{},"body":{"index.html":{}}}],["sonarqube",{"_index":2073,"title":{},"body":{"index.html":{}}}],["sonarqube/sonarcloud",{"_index":2126,"title":{},"body":{"index.html":{}}}],["sort((a",{"_index":934,"title":{},"body":{"injectables/NavigationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["sourcemap",{"_index":2123,"title":{},"body":{"index.html":{}}}],["sourcemaps",{"_index":2018,"title":{},"body":{"index.html":{}}}],["spacedelimited",{"_index":1230,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["spec",{"_index":1236,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":1238,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["ssl",{"_index":1664,"title":{},"body":{"changelog.html":{}}}],["ssl/tls",{"_index":2106,"title":{},"body":{"index.html":{}}}],["sso",{"_index":804,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["sso.html",{"_index":808,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["ssv",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1857,"title":{},"body":{"index.html":{}}}],["staged",{"_index":1936,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["standard",{"_index":568,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["standarddataformat",{"_index":1244,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standarddatatype",{"_index":1239,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standardize",{"_index":1929,"title":{},"body":{"index.html":{}}}],["standardparamstyle",{"_index":1228,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standardparamstyles",{"_index":2250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["standardparamstyle}s",{"_index":1233,"title":{},"body":{"interfaces/Param.html":{}}}],["start",{"_index":2003,"title":{},"body":{"index.html":{}}}],["started",{"_index":1586,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":526,"title":{},"body":{"components/CheckoutComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["state.user",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/app.store",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["state/cart.store",{"_index":369,"title":{},"body":{"injectables/CartFacade.html":{}}}],["state/order.store",{"_index":1167,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["state/product.store",{"_index":1483,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["state/user.store",{"_index":1553,"title":{},"body":{"injectables/UserFacade.html":{}}}],["statements",{"_index":1698,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":523,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["static",{"_index":132,"title":{},"body":{"modules/ApiModule.html":{},"dependencies.html":{}}}],["status",{"_index":775,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["status'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["status.component",{"_index":1132,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["status.component.html",{"_index":1200,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["status.component.scss",{"_index":1201,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["status.component.ts",{"_index":1199,"title":{},"body":{"components/OrderStatusComponent.html":{},"coverage.html":{}}}],["status.component.ts:19",{"_index":1203,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["status.ts",{"_index":1849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status/order",{"_index":1131,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"coverage.html":{}}}],["steps",{"_index":1986,"title":{},"body":{"index.html":{}}}],["store",{"_index":947,"title":{},"body":{"classes/NoReuseStrategy.html":{},"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["store.entities().find(item",{"_index":113,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["store.entities().reduce((acc",{"_index":74,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["store.entities().sort((a",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.entitymap()[id",{"_index":111,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["store.shoppingsessionid",{"_index":82,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2120,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":1880,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":284,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/NavigationService.html":{},"injectables/PermissionService.html":{}}}],["strategy.ts",{"_index":941,"title":{},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["strategy.ts:12",{"_index":950,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:16",{"_index":948,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:20",{"_index":954,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:4",{"_index":951,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:8",{"_index":956,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["street",{"_index":124,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":126,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/typealiases.html":{}}}],["structure",{"_index":1879,"title":{},"body":{"index.html":{}}}],["studio",{"_index":2049,"title":{},"body":{"index.html":{}}}],["studioaccess",{"_index":2050,"title":{},"body":{"index.html":{}}}],["style",{"_index":686,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":578,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["styleurl",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["styling",{"_index":1603,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["subgraph",{"_index":2131,"title":{},"body":{"index.html":{}}}],["subitems",{"_index":897,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["subject",{"_index":2202,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2195,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2208,"title":{},"body":{"license.html":{}}}],["success",{"_index":2136,"title":{},"body":{"index.html":{}}}],["successful",{"_index":2080,"title":{},"body":{"index.html":{}}}],["such",{"_index":570,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["summary",{"_index":531,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["super(label",{"_index":911,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["swagger",{"_index":2006,"title":{},"body":{"index.html":{}}}],["system",{"_index":1946,"title":{},"body":{"index.html":{}}}],["t",{"_index":669,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["t]+[+]json",{"_index":670,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["tab",{"_index":2037,"title":{},"body":{"index.html":{}}}],["table",{"_index":1783,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["table.columns",{"_index":1307,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["table.columns.ts",{"_index":1770,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2088,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":1913,"title":{},"body":{"index.html":{}}}],["takes",{"_index":584,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["taxes",{"_index":334,"title":{},"body":{"components/CartComponent.html":{}}}],["tb",{"_index":2130,"title":{},"body":{"index.html":{}}}],["tech",{"_index":1905,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":1867,"title":{},"body":{"index.html":{}}}],["template",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["temporary",{"_index":2040,"title":{},"body":{"index.html":{}}}],["terms",{"_index":1304,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["terms.ts",{"_index":1768,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["terraform",{"_index":1949,"title":{},"body":{"index.html":{}}}],["test",{"_index":2061,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1885,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2059,"title":{},"body":{"index.html":{}}}],["testto",{"_index":2060,"title":{},"body":{"index.html":{}}}],["text",{"_index":755,"title":{},"body":{"components/FormErrorComponent.html":{},"injectables/OrderApi.html":{},"components/OrderStatusComponent.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["text/json",{"_index":1039,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["text/plain",{"_index":1038,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["that's",{"_index":694,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.#appstore.initialized",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["this.#authfacade.haspermission(strategy",{"_index":929,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.#authfacade.login",{"_index":1573,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#authfacade.logout",{"_index":1576,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#authfacade.register",{"_index":1575,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#cartfacade.additem(id",{"_index":1463,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#cartfacade.checkout",{"_index":488,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#cartfacade.getall",{"_index":312,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.#cartfacade.gethasshoppingsession",{"_index":1459,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#cartfacade.getitemcount",{"_index":404,"title":{},"body":{"components/CartIconComponent.html":{}}}],["this.#cartfacade.getshowcart",{"_index":314,"title":{},"body":{"components/CartComponent.html":{}}}],["this.#cartfacade.gettotalprice",{"_index":316,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.#cartfacade.loadshoppingsession",{"_index":1574,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#cartfacade.removeitem(id",{"_index":327,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.#cartfacade.setshowcart(false",{"_index":328,"title":{},"body":{"components/CartComponent.html":{}}}],["this.#cartfacade.setshowcart(true",{"_index":406,"title":{},"body":{"components/CartIconComponent.html":{}}}],["this.#cartstore.create",{"_index":379,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.delete(id",{"_index":382,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.entities",{"_index":372,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.getitembyid(id",{"_index":381,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.getitembyproductid(productid",{"_index":375,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.hasshoppingsession",{"_index":384,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.itemcount",{"_index":374,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.loadshoppingsession",{"_index":386,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.setshowcart(showcart",{"_index":385,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.showcart",{"_index":383,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.totalprice",{"_index":373,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.update(id",{"_index":380,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#fb.control",{"_index":498,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.apartment",{"_index":509,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.city",{"_index":510,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.country",{"_index":507,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.region",{"_index":511,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.street",{"_index":508,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.zip",{"_index":512,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.phone",{"_index":506,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.group",{"_index":497,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#keycloakservice.authenticated",{"_index":290,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["this.#keycloakservice.init",{"_index":286,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.login",{"_index":287,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.logout",{"_index":288,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.register",{"_index":289,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.token",{"_index":293,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#navigationservice.getfiltereditems(navigationtype.route",{"_index":855,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.#orderfacade.add(res",{"_index":390,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#orderfacade.fetchall",{"_index":1189,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.#orderfacade.fetchbyid(this.#activatedroute.snapshot.params['id",{"_index":1133,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["this.#orderfacade.find(this.#activatedroute.snapshot.params['id",{"_index":1124,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["this.#orderfacade.getsortedbystatusanddate",{"_index":1186,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.#orderstore.create(order",{"_index":1170,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.entities",{"_index":1172,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.fetchbyid(id",{"_index":1169,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.getbyid(id",{"_index":1171,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.getsortedbystatusanddate",{"_index":1173,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.load",{"_index":1168,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#permissionservice.haspermission(permissionstrategy",{"_index":292,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#printinvoiceservice.generatepdf(order",{"_index":1136,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["this.#productfacade.fetchall",{"_index":1492,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.#productfacade.fetchbyid(this.#activatedroute.snapshot.params['id",{"_index":1462,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#productfacade.getbyid(this.#activatedroute.snapshot.params['id",{"_index":1460,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#productfacade.getfilter",{"_index":1513,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["this.#productfacade.getfiltered",{"_index":1491,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.#productfacade.setfilter",{"_index":874,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{}}}],["this.#router.navigatebyurl('/products",{"_index":489,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{}}}],["this.#store.fetchbyid(id",{"_index":1485,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.filter",{"_index":1487,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.filteredentities",{"_index":1486,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.getbyid(id",{"_index":1488,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.load",{"_index":1484,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.updatefilter(filter",{"_index":1489,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#userfacade.getcurrentuser",{"_index":480,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/UserNavigationComponent.html":{}}}],["this.#userfacade.updateuseraddress(address.value",{"_index":493,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#userfacade.updateuserphone",{"_index":495,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#userstore.fetchcurrentuser",{"_index":1554,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.#userstore.updateuseraddress(address",{"_index":1556,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.#userstore.updateuserphone(phone",{"_index":1557,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.#userstore.user",{"_index":1555,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.accesstoken",{"_index":641,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.addcompanyinformation(doc",{"_index":1318,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addcustomerinformation(doc",{"_index":1320,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addfooter(doc",{"_index":1316,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addinvoicedetails(doc",{"_index":1319,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addline(doc",{"_index":1367,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addlogo(doc",{"_index":1317,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addpage(doc",{"_index":1384,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtablefooter(doc",{"_index":1323,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtableheader(doc",{"_index":1321,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtableitems(doc",{"_index":1322,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtohttpparamsrecursive(httpparams",{"_index":1026,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.apikeys",{"_index":635,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.basepath",{"_index":643,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.checkoutform().controls",{"_index":490,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.checkoutform().dirty",{"_index":517,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.checkoutform().valid",{"_index":518,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.config.sentry",{"_index":834,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["this.configuration",{"_index":1019,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.basepath",{"_index":1020,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.basepath}${localvarpath",{"_index":1061,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.encoder",{"_index":1024,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.isjsonmime(localvarhttpheaderacceptselected",{"_index":1057,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.selectheaderaccept(httpheaderaccepts",{"_index":1048,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.withcredentials",{"_index":1063,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.createcheckoutform",{"_index":469,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.credentials",{"_index":653,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.credentials['bearer",{"_index":656,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.credentials[key",{"_index":674,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.defaultencodeparam(param",{"_index":651,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.defaultheaders",{"_index":1043,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.encodeparam",{"_index":650,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.encoder",{"_index":647,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.getcheckoutenabled",{"_index":471,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.getupdateenabled",{"_index":473,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.httpclient.request('get",{"_index":1060,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.isjsonmime(x",{"_index":661,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.items().length",{"_index":310,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.keycloak.authenticated",{"_index":801,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.init",{"_index":802,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.login",{"_index":809,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.logout",{"_index":810,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.register",{"_index":812,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.token",{"_index":800,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.loadshoppingsession",{"_index":102,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["this.menuitems",{"_index":930,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.mobilemenuopen.set(false",{"_index":873,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.password",{"_index":639,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.permissionstrategies[permissionstrategy",{"_index":1257,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.status",{"_index":1220,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["this.updateitem(item.id",{"_index":376,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.user()?.address",{"_index":515,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.user()?.email",{"_index":504,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.user()?.firstname",{"_index":499,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.user()?.lastname",{"_index":503,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.username",{"_index":637,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.withcredentials",{"_index":645,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["throttler",{"_index":1917,"title":{},"body":{"index.html":{}}}],["throw",{"_index":95,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":1498,"title":{},"body":{"interfaces/ProductResponse.html":{}}}],["time",{"_index":688,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["time'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["time.component.html",{"_index":731,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time.component.scss",{"_index":732,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time.component.ts",{"_index":730,"title":{},"body":{"components/DateTimeComponent.html":{},"coverage.html":{}}}],["time.component.ts:16",{"_index":735,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time/date",{"_index":729,"title":{},"body":{"components/DateTimeComponent.html":{},"coverage.html":{}}}],["tiny",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":776,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["titlecase",{"_index":878,"title":{},"body":{"components/NavigationComponent.html":{},"components/OrderStatusComponent.html":{}}}],["token",{"_index":784,"title":{},"body":{"injectables/KeycloakService.html":{},"injectables/OrderApi.html":{},"changelog.html":{},"index.html":{}}}],["tokens",{"_index":1981,"title":{},"body":{"index.html":{}}}],["toolkit",{"_index":51,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["tools",{"_index":1903,"title":{},"body":{"index.html":{}}}],["top",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2230,"title":{},"body":{"license.html":{}}}],["total",{"_index":331,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{}}}],["totalprice",{"_index":73,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":423,"title":{},"body":{"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["tracking",{"_index":2103,"title":{},"body":{"index.html":{}}}],["transfercache",{"_index":1041,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["transform",{"_index":1570,"title":{},"body":{"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["transition(':enter",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["trigger",{"_index":2081,"title":{},"body":{"index.html":{}}}],["trigger('animatebackdrop",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('animateslideover",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggers",{"_index":2090,"title":{},"body":{"index.html":{}}}],["true",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["trusteddomain",{"_index":821,"title":{},"body":{"interfaces/MonitoringConfig.html":{}}}],["try",{"_index":387,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["ts",{"_index":1007,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["tslib",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["tsv",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":29,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":1847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2237,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":657,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["types",{"_index":625,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["types/classes",{"_index":1243,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":682,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["ui",{"_index":1882,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":109,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2169,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1926,"title":{},"body":{"index.html":{}}}],["united",{"_index":522,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["unitprice",{"_index":412,"title":{},"body":{"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{}}}],["unknown",{"_index":291,"title":{},"body":{"injectables/AuthFacade.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{}}}],["up",{"_index":1969,"title":{},"body":{"index.html":{}}}],["update",{"_index":530,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"changelog.html":{}}}],["update(entity",{"_index":1090,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["update(id",{"_index":105,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["updateall",{"_index":1079,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["updateall(entity",{"_index":1092,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["updatecartitemquantityrequest",{"_index":60,"title":{"interfaces/UpdateCartItemQuantityRequest.html":{}},"body":{"interfaces/AdditionalState.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatecartitemquantityrequestwrapper",{"_index":1535,"title":{"interfaces/UpdateCartItemQuantityRequestWrapper.html":{}},"body":{"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{}}}],["updatecartitemquantityresponse",{"_index":1537,"title":{"interfaces/UpdateCartItemQuantityResponse.html":{}},"body":{"interfaces/UpdateCartItemQuantityResponse.html":{},"coverage.html":{}}}],["updateitem",{"_index":348,"title":{},"body":{"injectables/CartFacade.html":{}}}],["updateitem(id",{"_index":361,"title":{},"body":{"injectables/CartFacade.html":{}}}],["updates",{"_index":2083,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":455,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["updateuseraddress",{"_index":1543,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuseraddress(address",{"_index":1547,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuseraddress(update",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuseraddressrequest",{"_index":487,"title":{"interfaces/UpdateUserAddressRequest.html":{}},"body":{"components/CheckoutComponent.html":{},"interfaces/UpdateUserAddressRequest.html":{},"injectables/UserFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuserphone",{"_index":1544,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuserphone(phone",{"_index":1549,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuserphone(update",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuserphonerequest",{"_index":1538,"title":{"interfaces/UpdateUserPhoneRequest.html":{}},"body":{"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1610,"title":{},"body":{"changelog.html":{}}}],["uploaded",{"_index":2102,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":2124,"title":{},"body":{"index.html":{}}}],["uri",{"_index":781,"title":{},"body":{"interfaces/ImageResponse.html":{}}}],["url",{"_index":250,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["use",{"_index":553,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":565,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["usefactory",{"_index":154,"title":{},"body":{"modules/ApiModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user()?.address?.apartment",{"_index":1141,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.city",{"_index":1143,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.country",{"_index":1145,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.region",{"_index":1144,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.street",{"_index":1140,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.zip",{"_index":1142,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.firstname",{"_index":1138,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.lastname",{"_index":1139,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user.address?.apartment",{"_index":1361,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["user.address?.zip",{"_index":1363,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["user.lastname",{"_index":1359,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["user.ts",{"_index":815,"title":{},"body":{"interfaces/MonitoredUser.html":{},"coverage.html":{}}}],["user?.id",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userapi",{"_index":1720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":447,"title":{"injectables/UserFacade.html":{}},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade.fetchcurrentuser",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":1196,"title":{},"body":{"interfaces/OrderResponse.html":{},"interfaces/ShoppingSessionResponse.html":{}}}],["username",{"_index":541,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["usernavigationcomponent",{"_index":239,"title":{"components/UserNavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["userphoneresponse",{"_index":1582,"title":{"interfaces/UserPhoneResponse.html":{}},"body":{"interfaces/UserPhoneResponse.html":{},"coverage.html":{}}}],["userresponse",{"_index":1116,"title":{"interfaces/UserResponse.html":{}},"body":{"components/OrderDetailComponent.html":{},"injectables/PrintInvoiceService.html":{},"injectables/UserFacade.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["users",{"_index":2046,"title":{},"body":{"index.html":{}}}],["userstate",{"_index":1781,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["userstore",{"_index":1540,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":618,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["usevalue",{"_index":891,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":1864,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":1899,"title":{},"body":{"index.html":{}}}],["v",{"_index":719,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["validate",{"_index":1980,"title":{},"body":{"index.html":{}}}],["validation",{"_index":750,"title":{},"body":{"components/FormErrorComponent.html":{},"interfaces/HttpValidationProblemDetails.html":{},"coverage.html":{}}}],["validationerrors",{"_index":754,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["validationproblemdetails",{"_index":1435,"title":{"interfaces/ValidationProblemDetails.html":{}},"body":{"injectables/ProductApi.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["validator",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["validators",{"_index":484,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.email",{"_index":505,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.required",{"_index":501,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["value",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.some(item",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.tolowercase().includes(filtervalue.tolowercase",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value[k",{"_index":1035,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["values",{"_index":2014,"title":{},"body":{"index.html":{}}}],["var",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["variable",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1017,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":575,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["version",{"_index":2082,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versioning",{"_index":2079,"title":{},"body":{"index.html":{}}}],["versions",{"_index":683,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["via",{"_index":2028,"title":{},"body":{"index.html":{}}}],["vietnam",{"_index":525,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["view",{"_index":407,"title":{},"body":{"components/CartIconComponent.html":{},"changelog.html":{}}}],["visual",{"_index":1884,"title":{},"body":{"index.html":{}}}],["void",{"_index":116,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NoReuseStrategy.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PrintInvoiceService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["vpc",{"_index":2118,"title":{},"body":{"index.html":{}}}],["vx.x.x",{"_index":2147,"title":{},"body":{"index.html":{}}}],["w",{"_index":1211,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["wandling",{"_index":2174,"title":{},"body":{"license.html":{}}}],["wandling/demo",{"_index":1873,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2215,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2211,"title":{},"body":{"license.html":{}}}],["web",{"_index":1866,"title":{},"body":{"index.html":{}}}],["whether",{"_index":980,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"license.html":{}}}],["white",{"_index":871,"title":{},"body":{"components/NavigationComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["width",{"_index":1330,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":806,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["window:resize",{"_index":872,"title":{},"body":{"components/NavigationComponent.html":{}}}],["withcallstate",{"_index":47,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withcomputed",{"_index":43,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withcomputed(store",{"_index":72,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withconfiguration",{"_index":1710,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["withconfiguration(configurationparameters",{"_index":1855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withcredentials",{"_index":542,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["withdataservice",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withdevtools",{"_index":48,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["withdevtools('cart",{"_index":71,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withdevtools('currentuser",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withdevtools('orders",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withdevtools('products",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withentities",{"_index":56,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withhooks",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([authinterceptor",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withmethods",{"_index":44,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withmethods((store",{"_index":83,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":2187,"title":{},"body":{"license.html":{}}}],["withrouterconfig",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withstate",{"_index":45,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["withstate(initialstate",{"_index":70,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["wizard",{"_index":2015,"title":{},"body":{"index.html":{}}}],["workaround",{"_index":707,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["workflow",{"_index":1694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":684,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["wrapper.ts",{"_index":1536,"title":{},"body":{"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{}}}],["x",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xcenter",{"_index":1393,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["xs",{"_index":756,"title":{},"body":{"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{}}}],["y",{"_index":1396,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1961,"title":{},"body":{"index.html":{}}}],["yes",{"_index":901,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{}}}],["yyyy",{"_index":739,"title":{},"body":{"components/DateTimeComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["zip",{"_index":125,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["zipcode",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2235,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddCartItemRequest.html":{"url":"interfaces/AddCartItemRequest.html","title":"interface - AddCartItemRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddCartItemRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/add-cart-item-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            productId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddCartItemRequest {\n  productId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdditionalState.html":{"url":"interfaces/AdditionalState.html","title":"interface - AdditionalState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdditionalState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/+state/cart.store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            shoppingSessionId\n                                        \n                                \n                                \n                                        \n                                            showCart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        shoppingSessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shoppingSessionId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { patchState, signalStore, withComputed, withMethods, withState } from '@ngrx/signals';\nimport { withCallState, withDevtools } from '@angular-architects/ngrx-toolkit';\nimport { computed, inject } from '@angular/core';\nimport { setAllEntities, withEntities } from '@ngrx/signals/entities';\nimport {\n  AddCartItemRequest,\n  CartItemResponse,\n  ShoppingSessionApi,\n  UpdateCartItemQuantityRequest,\n} from '@demo-shop/api';\nimport { firstValueFrom } from 'rxjs';\n\ninterface AdditionalState {\n  showCart: boolean;\n  shoppingSessionId: number | null;\n}\n\nconst initialState: AdditionalState = { showCart: false, shoppingSessionId: null };\n\nexport const CartStore = signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withCallState(),\n  withDevtools('cart'),\n  withEntities(),\n  withComputed(store => ({\n    totalPrice: computed(() => store.entities().reduce((acc, curr) => acc + curr.totalPrice, 0)),\n    itemCount: computed(() => store.entities().reduce((acc, curr) => acc + curr.quantity, 0)),\n    hasShoppingSession: computed(() => !!store.shoppingSessionId()),\n  })),\n  withMethods((store, shoppingSessionApi = inject(ShoppingSessionApi)) => ({\n    async loadShoppingSession(): Promise {\n      const shoppingSession = await firstValueFrom(shoppingSessionApi.resolveCurrentShoppingSession());\n\n      patchState(store, setAllEntities(shoppingSession.items), { shoppingSessionId: shoppingSession.id });\n    },\n    async create(dto: AddCartItemRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.addCartItem(dto));\n      await this.loadShoppingSession();\n    },\n    async delete(id: number): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.removeCartItem(id));\n      await this.loadShoppingSession();\n    },\n    async update(id: number, entity: UpdateCartItemQuantityRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.updateCartItemQuantity(id, entity));\n      await this.loadShoppingSession();\n    },\n    getItemById(id: number): CartItemResponse | undefined {\n      return store.entityMap()[id];\n    },\n    getItemByProductId(productId: number): CartItemResponse | undefined {\n      return store.entities().find(item => item.productId === productId);\n    },\n    setShowCart(showCart: boolean): void {\n      patchState(store, { showCart });\n    },\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddressResponse.html":{"url":"interfaces/AddressResponse.html","title":"interface - AddressResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddressResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/address-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartment\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            zip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddressResponse {\n  street: string;\n  apartment: string;\n  city: string;\n  zip: string;\n  region?: string | null;\n  country: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(configurationFactory: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configurationFactory\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [],\n})\nexport class ApiModule {\n  public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n    return {\n      ngModule: ApiModule,\n      providers: [{ provide: Configuration, useFactory: configurationFactory }],\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: ApiModule, @Optional() http: HttpClient) {\n    if (parentModule) {\n      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n    }\n    if (!http) {\n      throw new Error(\n        'You need to import the HttpClientModule in your AppModule! \\n' +\n          'See also https://github.com/angular/angular/issues/20575'\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/frontend/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                NavigationComponent\n                                CartComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #appStore\n                            \n                            \n                                    Readonly\n                                initialized\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #appStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppStore)\n                    \n                \n                    \n                        \n                                Defined in apps/frontend/src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#appStore.initialized\n                    \n                \n                    \n                        \n                                Defined in apps/frontend/src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NavigationComponent } from '@demo-shop/navigation';\nimport { CartComponent } from '@demo-shop/cart';\nimport { AppStore } from './+state/app.store';\n\n@Component({\n  standalone: true,\n  imports: [RouterModule, NavigationComponent, CartComponent],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  readonly #appStore = inject(AppStore);\n  readonly initialized = this.#appStore.initialized;\n}\n\n    \n\n    \n        @if (initialized()) {\n\n\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (initialized()) {}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfig.html":{"url":"interfaces/AuthConfig.html","title":"interface - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/models/auth-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            keycloak\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keycloak\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keycloak:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface AuthConfig {\n  keycloak: {\n    url: string;\n    realm: string;\n    clientId: string;\n  };\n}\n\nexport const AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthFacade.html":{"url":"injectables/AuthFacade.html","title":"injectable - AuthFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/auth.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #keycloakService\n                            \n                            \n                                    Readonly\n                                    Private\n                                #permissionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authorize\n                            \n                            \n                                getToken\n                            \n                            \n                                hasPermission\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        authorize\n                        \n                    \n                \n            \n            \n                \n                        \n                    authorize()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(permissionStrategy: PermissionStrategy, ...args: [])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissionStrategy\n                                            \n                                                            PermissionStrategy\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #keycloakService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(KeycloakService)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/auth.facade.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #permissionService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PermissionService)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/auth.facade.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { KeycloakService } from './services/keycloak.service';\nimport { PermissionStrategy } from './enums/permission-strategy';\nimport { PermissionService } from './services/permission.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthFacade {\n  readonly #keycloakService = inject(KeycloakService);\n  readonly #permissionService = inject(PermissionService);\n\n  async authorize(): Promise {\n    return await this.#keycloakService.init();\n  }\n\n  async login(): Promise {\n    await this.#keycloakService.login();\n  }\n\n  async logout(): Promise {\n    await this.#keycloakService.logout();\n  }\n\n  async register(): Promise {\n    await this.#keycloakService.register();\n  }\n\n  isAuthenticated(): boolean {\n    return this.#keycloakService.authenticated;\n  }\n\n  hasPermission(permissionStrategy: PermissionStrategy, ...args: unknown[]): boolean {\n    return this.#permissionService.hasPermission(permissionStrategy, ...args);\n  }\n\n  getToken(): string | undefined {\n    return this.#keycloakService.token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/cart/cart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            RouterLink\n                                CartItemsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                checkoutButtonEnabled\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Readonly\n                                showCart\n                            \n                            \n                                    Readonly\n                                totalPrice\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCart\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCart\n                        \n                    \n                \n            \n            \n                \ncloseCart()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/cart/cart.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/cart/cart.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        checkoutButtonEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.items().length > 0)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getAll()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getShowCart()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getTotalPrice()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { CartFacade } from '../../cart.facade';\nimport { RouterLink } from '@angular/router';\nimport { CartItemsComponent } from '../shared/cart-items/cart-items.component';\nimport { animateBackdrop, animateSlideOver } from './cart.animations';\n\n@Component({\n  selector: 'lib-cart',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, RouterLink, CartItemsComponent],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [animateBackdrop, animateSlideOver],\n})\nexport class CartComponent {\n  readonly #cartFacade = inject(CartFacade);\n  readonly items = this.#cartFacade.getAll();\n  readonly checkoutButtonEnabled = computed(() => this.items().length > 0);\n  readonly totalPrice = this.#cartFacade.getTotalPrice();\n  readonly showCart = this.#cartFacade.getShowCart();\n\n  removeItem(id: number): void {\n    this.#cartFacade.removeItem(id);\n  }\n\n  closeCart(): void {\n    this.#cartFacade.setShowCart(false);\n  }\n}\n\n    \n\n    \n        @if (showCart()) {\n\n  \n  \n    \n  \n\n\n  \n    \n      \n        \n          Shopping cart\n          \n            \n              \n              Close panel\n              \n                \n              \n            \n          \n        \n\n        \n      \n\n      \n        \n          Total\n          {{ totalPrice() | currency }}\n        \n        Shipping and taxes calculated at checkout.\n        \n          \n            Checkout\n          \n        \n        \n          \n            or\n            \n              Continue Shopping\n               &rarr;\n            \n          \n        \n      \n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (showCart()) {                                        Shopping cart                                                  Close panel                                                                                                                Total          {{ totalPrice() | currency }}                Shipping and taxes calculated at checkout.                              Checkout                                                or                          Continue Shopping               →                                          }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartFacade.html":{"url":"injectables/CartFacade.html","title":"injectable - CartFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/cart.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartStore\n                            \n                            \n                                    Readonly\n                                    Private\n                                #orderFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #shoppingSessionApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                getAll\n                            \n                            \n                                getHasShoppingSession\n                            \n                            \n                                getItemCount\n                            \n                            \n                                getShowCart\n                            \n                            \n                                getTotalPrice\n                            \n                            \n                                    Async\n                                loadShoppingSession\n                            \n                            \n                                removeItem\n                            \n                            \n                                setShowCart\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHasShoppingSession\n                        \n                    \n                \n            \n            \n                \ngetHasShoppingSession()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemCount\n                        \n                    \n                \n            \n            \n                \ngetItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShowCart\n                        \n                    \n                \n            \n            \n                \ngetShowCart()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPrice\n                        \n                    \n                \n            \n            \n                \ngetTotalPrice()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadShoppingSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadShoppingSession()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setShowCart\n                        \n                    \n                \n            \n            \n                \nsetShowCart(showCart: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                showCart\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItem\n                        \n                    \n                \n            \n            \n                \nupdateItem(id: number, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartStore)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/cart.facade.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/cart.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #shoppingSessionApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ShoppingSessionApi)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/cart.facade.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { CartStore } from './+state/cart.store';\nimport { CartItemResponse, OrderResponse, ShoppingSessionApi } from '@demo-shop/api';\nimport { firstValueFrom } from 'rxjs';\nimport { OrderFacade } from '@demo-shop/order';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartFacade {\n  readonly #cartStore = inject(CartStore);\n  readonly #shoppingSessionApi = inject(ShoppingSessionApi);\n  readonly #orderFacade = inject(OrderFacade);\n\n  getAll(): Signal {\n    return this.#cartStore.entities;\n  }\n\n  getTotalPrice(): Signal {\n    return this.#cartStore.totalPrice;\n  }\n\n  getItemCount(): Signal {\n    return this.#cartStore.itemCount;\n  }\n\n  addItem(productId: number): void {\n    const item = this.#cartStore.getItemByProductId(productId);\n\n    if (item) {\n      this.updateItem(item.id, item.quantity + 1);\n    } else {\n      this.#cartStore.create({\n        productId,\n      });\n    }\n  }\n\n  updateItem(id: number, quantity: number): void {\n    this.#cartStore.update(id, { quantity });\n  }\n\n  removeItem(id: number): void {\n    const item = this.#cartStore.getItemById(id);\n\n    if (item && item.quantity > 1) {\n      this.updateItem(item.id, item.quantity - 1);\n    } else {\n      this.#cartStore.delete(id);\n    }\n  }\n\n  getShowCart(): Signal {\n    return this.#cartStore.showCart;\n  }\n\n  getHasShoppingSession(): Signal {\n    return this.#cartStore.hasShoppingSession;\n  }\n\n  setShowCart(showCart: boolean): void {\n    this.#cartStore.setShowCart(showCart);\n  }\n\n  async loadShoppingSession(): Promise {\n    await this.#cartStore.loadShoppingSession();\n  }\n\n  async checkout(): Promise {\n    try {\n      const res = await firstValueFrom(this.#shoppingSessionApi.checkout());\n      this.#orderFacade.add(res);\n\n      await this.loadShoppingSession();\n    } catch (err: any) {\n      console.error(err);\n      throw new Error(err.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartIconComponent.html":{"url":"components/CartIconComponent.html","title":"component - CartIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/cart-icon/cart-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-cart-icon\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart-icon.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                itemsInCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showCart\n                        \n                    \n                \n            \n            \n                \nshowCart()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/cart-icon/cart-icon.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart-icon/cart-icon.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemsInCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getItemCount()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart-icon/cart-icon.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartFacade } from '../../cart.facade';\n\n@Component({\n  selector: 'lib-cart-icon',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './cart-icon.component.html',\n  styleUrl: './cart-icon.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartIconComponent {\n  readonly #cartFacade = inject(CartFacade);\n  readonly itemsInCart = this.#cartFacade.getItemCount();\n\n  showCart(): void {\n    this.#cartFacade.setShowCart(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ itemsInCart() }}\n    items in cart, view bag\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ itemsInCart() }}    items in cart, view bag  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItemResponse.html":{"url":"interfaces/CartItemResponse.html","title":"interface - CartItemResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItemResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/cart-item-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                                \n                                        \n                                            productThumbnail\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                                \n                                        \n                                            unitPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productThumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productThumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unitPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CartItemResponse {\n  id: number;\n  productId: number;\n  productName: string;\n  productThumbnail: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartItemsComponent.html":{"url":"components/CartItemsComponent.html","title":"component - CartItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-cart-items\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart-items.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart-items.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        removeItem\n                    \n                \n                        \n                            \n                                    Defined in libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, output } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { CartItemResponse } from '@demo-shop/api';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'lib-cart-items',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, RouterLink],\n  templateUrl: './cart-items.component.html',\n  styleUrl: './cart-items.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemsComponent {\n  readonly items = input.required();\n\n  removeItem = output();\n}\n\n    \n\n    \n        \n  \n    \n      @for (item of items(); track item.id) {\n      \n        \n          \n        \n\n        \n          \n            \n              \n                {{ item.productName }}\n              \n              {{ item.totalPrice | currency }}\n            \n          \n          \n            Qty {{ item.quantity }}\n\n            \n              \n                Remove\n              \n            \n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @for (item of items(); track item.id) {                                                                                            {{ item.productName }}                            {{ item.totalPrice | currency }}                                            Qty {{ item.quantity }}                                          Remove                                                        }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckoutAddressForm.html":{"url":"interfaces/CheckoutAddressForm.html","title":"interface - CheckoutAddressForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CheckoutAddressForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/models/checkout-form.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartment\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            zip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartment:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CheckoutForm {\n  firstname: FormControl;\n  lastname: FormControl;\n  email: FormControl;\n  phone?: FormControl;\n  address: FormGroup;\n}\n\nexport interface CheckoutAddressForm {\n  country: FormControl;\n  street: FormControl;\n  apartment: FormControl;\n  city: FormControl;\n  region: FormControl;\n  zip: FormControl;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/checkout/checkout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-checkout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                CartItemsComponent\n                            ReactiveFormsModule\n                                FormErrorComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./checkout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #fb\n                            \n                            \n                                    Readonly\n                                    Private\n                                #router\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                checkoutForm\n                            \n                            \n                                    Readonly\n                                isCheckoutEnabled\n                            \n                            \n                                    Readonly\n                                isUpdateEnabled\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                showShippingInformation\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                createCheckOutForm\n                            \n                            \n                                getCheckoutEnabled\n                            \n                            \n                                getUpdateEnabled\n                            \n                            \n                                removeItem\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCheckOutForm\n                        \n                    \n                \n            \n            \n                \ncreateCheckOutForm()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCheckoutEnabled\n                        \n                    \n                \n            \n            \n                \ngetCheckoutEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdateEnabled\n                        \n                    \n                \n            \n            \n                \ngetUpdateEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        checkoutForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.createCheckOutForm()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isCheckoutEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getCheckoutEnabled()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isUpdateEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getUpdateEnabled()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getAll()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getTotalPrice()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showShippingInformation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(window.innerWidth >= 768)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, signal, Signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartFacade } from '../../cart.facade';\nimport { FormErrorComponent } from '@demo-shop/shared';\nimport { CartItemsComponent } from '../shared/cart-items/cart-items.component';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CheckoutAddressForm, CheckoutForm } from '../../models/checkout-form';\nimport { UserFacade } from '@demo-shop/user';\nimport { Router } from '@angular/router';\nimport { UpdateUserAddressRequest } from '@demo-shop/api';\n\n@Component({\n  selector: 'lib-checkout',\n  standalone: true,\n  imports: [CommonModule, CartItemsComponent, ReactiveFormsModule, FormErrorComponent],\n  templateUrl: './checkout.component.html',\n  styleUrl: './checkout.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutComponent {\n  readonly checkoutForm = this.createCheckOutForm();\n  readonly isUpdateEnabled = this.getUpdateEnabled();\n  readonly isCheckoutEnabled = this.getCheckoutEnabled();\n  readonly #cartFacade = inject(CartFacade);\n  readonly items = this.#cartFacade.getAll();\n  readonly price = this.#cartFacade.getTotalPrice();\n  readonly #userFacade = inject(UserFacade);\n  readonly user = this.#userFacade.getCurrentUser();\n  readonly #fb = inject(FormBuilder);\n  readonly #router = inject(Router);\n  readonly showShippingInformation = signal(window.innerWidth >= 768);\n\n  removeItem(id: number): void {\n    this.#cartFacade.removeItem(id);\n  }\n\n  async checkout(): Promise {\n    try {\n      await this.#cartFacade.checkout();\n      this.#router.navigateByUrl('/products');\n    } catch (err: any) {\n      throw new Error(err.message);\n    }\n  }\n\n  async updateUser(): Promise {\n    const { address, phone } = this.checkoutForm().controls;\n    if (address.dirty && address.valid) {\n      await this.#userFacade.updateUserAddress(address.value as UpdateUserAddressRequest);\n    }\n\n    if (phone?.dirty) {\n      await this.#userFacade.updateUserPhone({ phone: phone.value });\n    }\n  }\n\n  createCheckOutForm(): Signal> {\n    return computed(() =>\n      this.#fb.group({\n        firstname: this.#fb.control(\n          {\n            value: this.user()?.firstname ?? '',\n            disabled: true,\n          },\n          { validators: Validators.required, nonNullable: true }\n        ),\n        lastname: this.#fb.control(\n          {\n            value: this.user()?.lastname ?? '',\n            disabled: true,\n          },\n          { validators: Validators.required, nonNullable: true }\n        ),\n        email: this.#fb.control(\n          { value: this.user()?.email ?? '', disabled: true },\n          {\n            validators: [Validators.required, Validators.email],\n            nonNullable: true,\n          }\n        ),\n        phone: this.#fb.control(this.user()?.phone ?? ''),\n        address: this.#fb.group(\n          {\n            country: this.#fb.control(this.user()?.address?.country ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            street: this.#fb.control(this.user()?.address?.street ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            apartment: this.#fb.control(this.user()?.address?.apartment ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            city: this.#fb.control(this.user()?.address?.city ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            region: this.#fb.control(this.user()?.address?.region ?? ''),\n            zip: this.#fb.control(this.user()?.address?.zip ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n          },\n          { validators: Validators.required }\n        ),\n      })\n    );\n  }\n\n  getCheckoutEnabled(): Signal {\n    return computed(() => {\n      const hasShoppingItems = this.items().length > 0;\n      const hasUserAddress = !!this.user()?.address;\n      const hasUserDataChanges = this.checkoutForm().dirty;\n\n      return hasShoppingItems && hasUserAddress && !hasUserDataChanges;\n    });\n  }\n\n  getUpdateEnabled(): Signal {\n    return computed(() => this.checkoutForm().valid && this.checkoutForm().dirty);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Shipping information\n            \n              \n            \n          \n          \n            \n              \n                First name\n              \n              \n                \n              \n              \n            \n\n            \n              \n                Last name\n              \n              \n                \n                \n              \n            \n\n            \n              \n                Email address\n              \n              \n                \n              \n              \n            \n\n            \n              Phone\n              \n                \n              \n            \n\n            \n              \n                Country\n                \n                  \n                    United States\n                    Austria\n                    Vietnam\n                  \n                \n                \n              \n\n              \n                Street\n                \n                  \n                \n              \n\n              \n                \n                  Apartment\n                \n                \n                  \n                \n                \n              \n\n              \n                City\n                \n                  \n                \n                \n              \n\n              \n                State / Province\n                \n                  \n                \n              \n\n              \n                \n                  ZIP / Postal code\n                \n                \n                  \n                \n                \n              \n            \n\n            \n              Update\n            \n          \n        \n      \n    \n\n    \n      Order Summary\n      \n      \n        \n          Total{{ price() | currency }}\n        \n      \n\n      \n        \n          \n            Checkout\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Shipping information                                                                                                    First name                                                                                                                              Last name                                                                                                                                Email address                                                                                                              Phone                                                                                                  Country                                                      United States                    Austria                    Vietnam                                                                                              Street                                                                                                                Apartment                                                                                                                              City                                                                                                              State / Province                                                                                                                ZIP / Postal code                                                                                                                                      Update                                                  Order Summary                              Total{{ price() | currency }}                                                  Checkout                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckoutForm.html":{"url":"interfaces/CheckoutForm.html","title":"interface - CheckoutForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CheckoutForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/models/checkout-form.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CheckoutForm {\n  firstname: FormControl;\n  lastname: FormControl;\n  email: FormControl;\n  phone?: FormControl;\n  address: FormGroup;\n}\n\nexport interface CheckoutAddressForm {\n  country: FormControl;\n  street: FormControl;\n  apartment: FormControl;\n  city: FormControl;\n  region: FormControl;\n  zip: FormControl;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Configuration.html":{"url":"classes/Configuration.html","title":"class - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/configuration.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accessToken\n                            \n                            \n                                    Optional\n                                apiKeys\n                            \n                            \n                                    Optional\n                                basePath\n                            \n                            \n                                credentials\n                            \n                            \n                                encodeParam\n                            \n                            \n                                    Optional\n                                encoder\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultEncodeParam\n                            \n                            \n                                    Public\n                                isJsonMime\n                            \n                            \n                                    Public\n                                lookupCredential\n                            \n                            \n                                    Public\n                                selectHeaderAccept\n                            \n                            \n                                    Public\n                                selectHeaderContentType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configurationParameters: ConfigurationParameters)\n                    \n                \n                        \n                            \n                                Defined in libs/api/configuration.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurationParameters\n                                                  \n                                                        \n                                                                        ConfigurationParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n            \n                \n                    Since 5.0. Use credentials instead\n                \n            \n                \n                    \n                        Type :     string | \n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:47\n                        \n                    \n\n            \n                \n                     @deprecated Since 5.0. Use credentials instead\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        apiKeys\n                        \n                    \n                \n            \n            \n                \n                    Since 5.0. Use credentials instead\n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:41\n                        \n                    \n\n            \n                \n                     @deprecated Since 5.0. Use credentials instead\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:67\n                        \n                    \n\n            \n                \n                    The keys are the names in the securitySchemes section of the OpenAPI\ndocument. They should map to the value used for authentication\nminus any standard prefixes such as 'Basic' or 'Bearer'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:61\n                        \n                    \n\n            \n                \n                    Encoding of various path parameter\nstyles.\n\nSee README.md for more details\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:53\n                        \n                    \n\n            \n                \n                    Takes care of encoding query- and form-parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        withCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultEncodeParam\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultEncodeParam(param: Param)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            Param\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isJsonMime\n                        \n                    \n                \n            \n            \n                \n                        \n                    isJsonMime(mime: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:144\n                        \n                    \n\n\n            \n                \n                        Check if the given MIME is a JSON MIME.\nJSON MIME examples:\n  application/json\n  application/json; charset=UTF8\n  APPLICATION/JSON\n  application/vnd.company+json\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMIME (Multipurpose Internet Mail Extensions)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the given MIME is JSON, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lookupCredential\n                        \n                    \n                \n            \n            \n                \n                        \n                    lookupCredential(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectHeaderAccept\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectHeaderAccept(accepts: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:122\n                        \n                    \n\n\n            \n                \n                        Select the correct accept content-type to use for a request.\nUses Configuration to determine the correct accept content-type.\nIf no content type is found return the first found type if the contentTypes is not empty\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accepts\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe array of content types that are available for selection.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                the selected content-type or undefined if no selection could be made.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectHeaderContentType\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectHeaderContentType(contentTypes: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:103\n                        \n                    \n\n\n            \n                \n                        Select the correct content-type to use for a request.\nUses Configuration to determine the correct content-type.\nIf no content type is found return the first found type if the contentTypes is not empty\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contentTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe array of content types that are available for selection\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                the selected content-type or undefined if no selection could be made.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\nimport { Param } from './param';\n\nexport interface ConfigurationParameters {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Override the default method for encoding path parameters in various\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam?: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials?: { [key: string]: string | (() => string | undefined) };\n}\n\nexport class Configuration {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Encoding of various path parameter\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials: { [key: string]: string | (() => string | undefined) };\n\n  constructor(configurationParameters: ConfigurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n    if (configurationParameters.encodeParam) {\n      this.encodeParam = configurationParameters.encodeParam;\n    } else {\n      this.encodeParam = param => this.defaultEncodeParam(param);\n    }\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n\n    // init default Bearer credential\n    if (!this.credentials['Bearer']) {\n      this.credentials['Bearer'] = () => {\n        return typeof this.accessToken === 'function' ? this.accessToken() : this.accessToken;\n      };\n    }\n  }\n\n  /**\n   * Select the correct content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param contentTypes - the array of content types that are available for selection\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n    return type;\n  }\n\n  /**\n   * Select the correct accept content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param accepts - the array of content types that are available for selection.\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderAccept(accepts: string[]): string | undefined {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return accepts[0];\n    }\n    return type;\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  public isJsonMime(mime: string): boolean {\n    const jsonMime: RegExp = new RegExp('^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  public lookupCredential(key: string): string | undefined {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n  private defaultEncodeParam(param: Param): string {\n    // This implementation exists as fallback for missing configuration\n    // and for backwards compatibility to older typescript-angular generator versions.\n    // It only works for the 'simple' parameter style.\n    // Date-handling only works for the 'date-time' format.\n    // All other styles and Date-formats are probably handled incorrectly.\n    //\n    // But: if that's all you need (i.e.: the most common use-case): no need for customization!\n\n    const value =\n      param.dataFormat === 'date-time' && param.value instanceof Date\n        ? (param.value as Date).toISOString()\n        : param.value;\n\n    return encodeURIComponent(String(value));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationParameters.html":{"url":"interfaces/ConfigurationParameters.html","title":"interface - ConfigurationParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/configuration.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apiKeys\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            basePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            credentials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            encodeParam\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            encoder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Since 5.0. Use credentials instead\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     @deprecated Since 5.0. Use credentials instead\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Since 5.0. Use credentials instead\n                                    \n                                \n                                \n                                    \n                                        apiKeys:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     @deprecated Since 5.0. Use credentials instead\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        basePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        basePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The keys are the names in the securitySchemes section of the OpenAPI\ndocument. They should map to the value used for authentication\nminus any standard prefixes such as 'Basic' or 'Bearer'.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encodeParam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encodeParam:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Override the default method for encoding path parameters in various\nstyles.\n\nSee README.md for more details\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoder:         HttpParameterCodec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpParameterCodec\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Takes care of encoding query- and form-parameters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\nimport { Param } from './param';\n\nexport interface ConfigurationParameters {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Override the default method for encoding path parameters in various\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam?: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials?: { [key: string]: string | (() => string | undefined) };\n}\n\nexport class Configuration {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Encoding of various path parameter\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials: { [key: string]: string | (() => string | undefined) };\n\n  constructor(configurationParameters: ConfigurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n    if (configurationParameters.encodeParam) {\n      this.encodeParam = configurationParameters.encodeParam;\n    } else {\n      this.encodeParam = param => this.defaultEncodeParam(param);\n    }\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n\n    // init default Bearer credential\n    if (!this.credentials['Bearer']) {\n      this.credentials['Bearer'] = () => {\n        return typeof this.accessToken === 'function' ? this.accessToken() : this.accessToken;\n      };\n    }\n  }\n\n  /**\n   * Select the correct content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param contentTypes - the array of content types that are available for selection\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n    return type;\n  }\n\n  /**\n   * Select the correct accept content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param accepts - the array of content types that are available for selection.\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderAccept(accepts: string[]): string | undefined {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return accepts[0];\n    }\n    return type;\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  public isJsonMime(mime: string): boolean {\n    const jsonMime: RegExp = new RegExp('^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  public lookupCredential(key: string): string | undefined {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n  private defaultEncodeParam(param: Param): string {\n    // This implementation exists as fallback for missing configuration\n    // and for backwards compatibility to older typescript-angular generator versions.\n    // It only works for the 'simple' parameter style.\n    // Date-handling only works for the 'date-time' format.\n    // All other styles and Date-formats are probably handled incorrectly.\n    //\n    // But: if that's all you need (i.e.: the most common use-case): no need for customization!\n\n    const value =\n      param.dataFormat === 'date-time' && param.value instanceof Date\n        ? (param.value as Date).toISOString()\n        : param.value;\n\n    return encodeURIComponent(String(value));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomHttpParameterCodec.html":{"url":"classes/CustomHttpParameterCodec.html","title":"class - CustomHttpParameterCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomHttpParameterCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/encoder.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom HttpParameterCodec\nWorkaround for https://github.com/angular/angular/issues/18261\n\n            \n\n\n            \n                Implements\n            \n            \n                            HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeKey\n                        \n                    \n                \n            \n            \n                \ndecodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeValue\n                        \n                    \n                \n            \n            \n                \ndecodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeKey\n                        \n                    \n                \n            \n            \n                \nencodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeValue\n                        \n                    \n                \n            \n            \n                \nencodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n  decodeValue(v: string): string {\n    return decodeURIComponent(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateTimeComponent.html":{"url":"components/DateTimeComponent.html","title":"component - DateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/shared/src/lib/components/date-time/date-time.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-date-time\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./date-time.component.html\n            \n\n\n\n            \n                styleUrl\n                ./date-time.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/date-time/date-time.component.ts:16\n                        \n                    \n\n            \n                \n                    Date to display\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, InputSignal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lib-date-time',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './date-time.component.html',\n  styleUrl: './date-time.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DateTimeComponent {\n  /**\n   * Date to display\n   */\n  readonly dateTime: InputSignal = input.required();\n}\n\n    \n\n    \n        {{ dateTime() | date : 'MMM dd, YYYY' }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ dateTime() | date : \\'MMM dd, YYYY\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormErrorComponent.html":{"url":"components/FormErrorComponent.html","title":"component - FormErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/shared/src/lib/components/form-error/form-error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-form-error\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-error.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-error.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                errors\n                            \n                            \n                                    Readonly\n                                fieldName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/form-error/form-error.component.ts:24\n                        \n                    \n\n            \n                \n                    Set of validation errors\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fieldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input('Field')\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/form-error/form-error.component.ts:20\n                        \n                    \n\n            \n                \n                    Name of form field\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, InputSignal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValidationErrors } from '@angular/forms';\n\n@Component({\n  selector: 'lib-form-error',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './form-error.component.html',\n  styleUrl: './form-error.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'text-xs text-red-600',\n  },\n})\nexport class FormErrorComponent {\n  /**\n   * Name of form field\n   */\n  readonly fieldName: InputSignal = input('Field');\n  /**\n   * Set of validation errors\n   */\n  readonly errors: InputSignal = input.required();\n}\n\n    \n\n    \n        @if (errors()?.['required']) {\n  {{ fieldName() }} is required\n}\n\n@if (errors()?.['email']) {\n  Email invalid\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (errors()?.[\\'required\\']) {  {{ fieldName() }} is required}@if (errors()?.[\\'email\\']) {  Email invalid}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetOrderByIdRequest.html":{"url":"interfaces/GetOrderByIdRequest.html","title":"interface - GetOrderByIdRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetOrderByIdRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/get-order-by-id-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetOrderByIdRequest {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetProductByIdRequest.html":{"url":"interfaces/GetProductByIdRequest.html","title":"interface - GetProductByIdRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetProductByIdRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/get-product-by-id-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetProductByIdRequest {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpValidationProblemDetails.html":{"url":"interfaces/HttpValidationProblemDetails.html","title":"interface - HttpValidationProblemDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpValidationProblemDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/http-validation-problem-details.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any | any\n\n                    \n                \n                        \n                            \n                                Defined in libs/api/model/http-validation-problem-details.ts:11\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpValidationProblemDetails {\n  [key: string]: any | any;\n\n  errors?: { [key: string]: Array };\n  type?: string | null;\n  title?: string | null;\n  status?: number | null;\n  detail?: string | null;\n  instance?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageResponse.html":{"url":"interfaces/ImageResponse.html","title":"interface - ImageResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/image-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageResponse {\n  name: string;\n  uri: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeycloakService.html":{"url":"injectables/KeycloakService.html","title":"injectable - KeycloakService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeycloakService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/services/keycloak.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                keycloak\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                                \n                                    authenticated\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AUTH_CONFIG)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/keycloak.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        keycloak\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Keycloak\n\n                    \n                \n                \n                    \n                        Default value : new Keycloak(this.authConfig.keycloak)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/keycloak.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in libs/auth/src/lib/services/keycloak.service.ts:11\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authenticated\n                    \n                \n\n                \n                    \n                        getauthenticated()\n                    \n                \n                            \n                                \n                                    Defined in libs/auth/src/lib/services/keycloak.service.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport Keycloak from 'keycloak-js';\nimport { AUTH_CONFIG } from '../models/auth-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeycloakService {\n  readonly authConfig = inject(AUTH_CONFIG);\n\n  get token(): string | undefined {\n    return this.keycloak.token;\n  }\n\n  get authenticated(): boolean {\n    return this.keycloak.authenticated === true;\n  }\n\n  private readonly keycloak: Keycloak = new Keycloak(this.authConfig.keycloak);\n\n  async init(): Promise {\n    return await this.keycloak.init({\n      onLoad: 'check-sso',\n      silentCheckSsoRedirectUri: window.location.origin + '/silent-check-sso.html',\n    });\n  }\n\n  login(): Promise {\n    return this.keycloak.login();\n  }\n\n  logout(): Promise {\n    return this.keycloak.logout({ redirectUri: window.location.origin });\n  }\n\n  register(): Promise {\n    return this.keycloak.register();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitoredUser.html":{"url":"interfaces/MonitoredUser.html","title":"interface - MonitoredUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MonitoredUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/monitoring/src/lib/models/monitored-user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MonitoredUser {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitoringConfig.html":{"url":"interfaces/MonitoringConfig.html","title":"interface - MonitoringConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MonitoringConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/monitoring/src/lib/models/monitoring-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sentry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sentry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface MonitoringConfig {\n  sentry: {\n    enabled: boolean;\n    dsn: string;\n    trustedDomain: string;\n  };\n}\n\nexport const MONITORING_CONFIG = new InjectionToken('MONITORING_CONFIG');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonitoringFacade.html":{"url":"injectables/MonitoringFacade.html","title":"injectable - MonitoringFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MonitoringFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/monitoring/src/lib/monitoring.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setUser\n                        \n                    \n                \n            \n            \n                \nsetUser(user: MonitoredUser)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/monitoring/src/lib/monitoring.facade.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            MonitoredUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MONITORING_CONFIG)\n                    \n                \n                    \n                        \n                                Defined in libs/monitoring/src/lib/monitoring.facade.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { MonitoredUser } from './models/monitored-user';\nimport * as Sentry from '@sentry/angular';\nimport { MONITORING_CONFIG } from './models/monitoring-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MonitoringFacade {\n  readonly config = inject(MONITORING_CONFIG);\n\n  setUser(user: MonitoredUser): void {\n    const { enabled, dsn } = this.config.sentry;\n\n    if (!enabled || !dsn) {\n      return;\n    }\n\n    Sentry.setUser({\n      ...user,\n      ip_address: 'none',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/navigation/src/lib/components/navigation/navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            NgOptimizedImage\n                                ProductSearchComponent\n                                UserNavigationComponent\n                                CartIconComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navigation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #navigationService\n                            \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #router\n                            \n                            \n                                    Readonly\n                                menuItems\n                            \n                            \n                                    Readonly\n                                mobileMenuOpen\n                            \n                            \n                                    Readonly\n                                selectedMenuItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setProductCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setProductCategory\n                        \n                    \n                \n            \n            \n                \nsetProductCategory(category: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NavigationService)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#navigationService.getFilteredItems(NavigationType.ROUTE) as RouteItem[]\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mobileMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedMenuItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('products')\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { Router, RouterLink } from '@angular/router';\nimport { NavigationService } from '../../services/navigation.service';\nimport { NavigationType } from '../../enums/navigation-type';\nimport { RouteItem } from '../../models/navigation-item';\nimport { ProductFacade, ProductSearchComponent } from '@demo-shop/product';\nimport { animateBackdrop, animateSlideOver } from './navigation.animations';\nimport { UserNavigationComponent } from './user-navigation/user-navigation.component';\nimport { CartIconComponent } from '@demo-shop/cart';\n\n@Component({\n  selector: 'lib-navigation',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterLink,\n    NgOptimizedImage,\n    ProductSearchComponent,\n    UserNavigationComponent,\n    CartIconComponent,\n  ],\n  templateUrl: './navigation.component.html',\n  styleUrl: './navigation.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [animateBackdrop, animateSlideOver],\n  host: {\n    class: 'bg-white',\n    '(window:resize)': 'this.mobileMenuOpen.set(false);',\n  },\n})\nexport class NavigationComponent {\n  readonly mobileMenuOpen = signal(false);\n  readonly selectedMenuItem = signal('products');\n\n  readonly #productFacade = inject(ProductFacade);\n  readonly #router = inject(Router);\n  readonly #navigationService = inject(NavigationService);\n\n  readonly menuItems = this.#navigationService.getFilteredItems(NavigationType.ROUTE) as RouteItem[];\n\n  setProductCategory(category: string): void {\n    this.#productFacade.setFilter({\n      categories: category,\n    });\n\n    this.#router.navigateByUrl('/products');\n  }\n}\n\n    \n\n    \n        @if (mobileMenuOpen()) {\n\n  \n\n\n  \n    \n      \n      Close menu\n      \n        \n      \n    \n  \n\n  \n    @for (item of menuItems; track $index) {\n    \n      \n        {{ item.label | titlecase }}\n      \n    \n    }\n  \n\n  \n\n}\n\n\n  \n    \n      \n        \n          \n          Open menu\n          \n            \n          \n        \n\n        \n        \n          \n            Demo Shop\n            \n          \n        \n\n        \n          \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (mobileMenuOpen()) {                    Close menu                                @for (item of menuItems; track $index) {                  {{ item.label | titlecase }}              }    }                                        Open menu                                                                              Demo Shop                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationConfig.html":{"url":"interfaces/NavigationConfig.html","title":"interface - NavigationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NavigationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/util/provide-navigation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            routes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:     Routes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Routes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EnvironmentProviders, InjectionToken, makeEnvironmentProviders } from '@angular/core';\nimport { Routes } from '@angular/router';\n\nexport interface NavigationConfig {\n  routes: Routes;\n}\n\nexport const NAVIGATION_CONFIG = new InjectionToken('NAVIGATION_CONFIG');\n\n\nexport const provideNavigation = (config: { routes: Routes }): EnvironmentProviders => {\n  const routes = config.routes.filter(route => route.data?.['showInMenu']);\n\n  return makeEnvironmentProviders([\n    { provide: NAVIGATION_CONFIG, useValue: { routes } },\n  ]);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationItem.html":{"url":"classes/NavigationItem.html","title":"class - NavigationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/models/navigation-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                    Optional\n                                options\n                            \n                            \n                                    Public\n                                order\n                            \n                            \n                                    Public\n                                    Optional\n                                subItems\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(label: string, order: number, options?: literal type, subItems?: RouteItem[])\n                    \n                \n                        \n                            \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        subItems\n                                                  \n                                                        \n                                                                        RouteItem[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        subItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteItem[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationType\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PermissionStrategy } from '@demo-shop/auth';\nimport { NavigationType } from '../enums/navigation-type';\n\nexport abstract class NavigationItem {\n  readonly type!: NavigationType;\n\n  protected constructor(\n    public label: string,\n    public order: number,\n    public options?: {\n      permissionStrategy?: PermissionStrategy;\n    },\n    public subItems?: RouteItem[]\n  ) {}\n}\n\nexport class RouteItem extends NavigationItem {\n  override readonly type: NavigationType = NavigationType.ROUTE;\n\n  constructor(\n    label: string,\n    order: number,\n    public override options: {\n      route: string;\n      permissionStrategy?: PermissionStrategy;\n      query?: string;\n    },\n    subItems?: RouteItem[]\n  ) {\n    super(label, order, options, subItems);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/services/navigation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #authFacade\n                            \n                            \n                                    Private\n                                    Readonly\n                                menuItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilteredItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredItems\n                        \n                    \n                \n            \n            \n                \ngetFilteredItems(type: NavigationType)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/services/navigation.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            NavigationType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         NavigationItem[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #authFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/services/navigation.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new RouteItem('products', 101, {\n      route: 'products',\n    }),\n    new RouteItem('orders', 102, {\n      route: 'orders',\n      permissionStrategy: PermissionStrategy.AUTHENTICATED,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/services/navigation.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { AuthFacade, PermissionStrategy } from '@demo-shop/auth';\nimport { NavigationItem, RouteItem } from '../models/navigation-item';\nimport { NavigationType } from '../enums/navigation-type';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  readonly #authFacade = inject(AuthFacade);\n\n  private readonly menuItems: NavigationItem[] = [\n    new RouteItem('products', 101, {\n      route: 'products',\n    }),\n    new RouteItem('orders', 102, {\n      route: 'orders',\n      permissionStrategy: PermissionStrategy.AUTHENTICATED,\n    }),\n  ];\n\n  getFilteredItems(type: NavigationType): NavigationItem[] {\n    const isType = (itemType: NavigationType) => itemType === type;\n    const allowDisplay = (strategy?: PermissionStrategy) => !strategy || this.#authFacade.hasPermission(strategy);\n\n    return this.menuItems\n      .filter(item => isType(item.type) && allowDisplay(item.options?.['permissionStrategy']))\n      .sort((a, b) => a.order - b.order);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoReuseStrategy.html":{"url":"classes/NoReuseStrategy.html","title":"class - NoReuseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoReuseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/frontend/src/app/strategies/no-reuse-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RouteReuseStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                retrieve\n                            \n                            \n                                shouldAttach\n                            \n                            \n                                shouldDetach\n                            \n                            \n                                shouldReuseRoute\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        retrieve\n                        \n                    \n                \n            \n            \n                \nretrieve()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DetachedRouteHandle | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldAttach\n                        \n                    \n                \n            \n            \n                \nshouldAttach()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldDetach\n                        \n                    \n                \n            \n            \n                \nshouldDetach()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldReuseRoute\n                        \n                    \n                \n            \n            \n                \nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                future\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                curr\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\n\nexport class NoReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(): boolean {\n    return false;\n  }\n\n  store(): void {\n    return;\n  }\n\n  shouldAttach(): boolean {\n    return false;\n  }\n\n  retrieve(): DetachedRouteHandle | null {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderApi.html":{"url":"injectables/OrderApi.html","title":"injectable - OrderApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/api/order-api.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                basePath\n                            \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                defaultHeaders\n                            \n                            \n                                    Public\n                                encoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addToHttpParams\n                            \n                            \n                                    Private\n                                addToHttpParamsRecursive\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, basePath: string | string[], configuration: Configuration)\n                    \n                \n                        \n                            \n                                Defined in libs/api/api/order-api.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basePath\n                                                  \n                                                        \n                                                                    string | string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParams(httpParams: HttpParams, value: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParamsRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:110\n                        \n                    \n\n\n            \n                \n                        Get all orders\nGet all orders of current user based on identity extracted from bearer token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:198\n                        \n                    \n\n\n            \n                \n                        Get order by id\nGet order by id of current user based on identity extracted from bearer token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:218\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost'\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Configuration()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { AddCartItem401Response } from '../model/add-cart-item401-response';\n// @ts-ignore\nimport { OrderListResponse } from '../model/order-list-response';\n// @ts-ignore\nimport { OrderResponse } from '../model/order-response';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderApi {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: Configuration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(elem => (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key)));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, (value as Date).toISOString().substring(0, 10));\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          k => (httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * Get all orders\n   * Get all orders of current user based on identity extracted from bearer token\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getAllOrdersOfCurrentUser(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getAllOrdersOfCurrentUser(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllOrdersOfCurrentUser(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllOrdersOfCurrentUser(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/orders`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n\n  /**\n   * Get order by id\n   * Get order by id of current user based on identity extracted from bearer token\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getOrderById(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getOrderById(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getOrderById(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getOrderById(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    if (id === null || id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getOrderById.');\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/orders/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'number',\n      dataFormat: 'int32',\n    })}`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderDataService.html":{"url":"injectables/OrderDataService.html","title":"injectable - OrderDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/order/src/lib/services/order-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #orderApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                loadById\n                            \n                            \n                                update\n                            \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(entity: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(entity: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(filter: OrderFilter)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            OrderFilter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadById\n                        \n                    \n                \n            \n            \n                \nloadById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(entity: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAll\n                        \n                    \n                \n            \n            \n                \nupdateAll(entity: OrderResponse[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderApi)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/services/order-data.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { DataService } from '@angular-architects/ngrx-toolkit';\nimport { firstValueFrom } from 'rxjs';\nimport { OrderFilter } from '../models/order-filter';\nimport { OrderApi, OrderResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDataService implements DataService {\n  readonly #orderApi = inject(OrderApi);\n\n  async load(filter: OrderFilter): Promise {\n    const res = await firstValueFrom(this.#orderApi.getAllOrdersOfCurrentUser());\n\n    return res?.items ?? [];\n  }\n\n  loadById(id: number): Promise {\n    return firstValueFrom(this.#orderApi.getOrderById(id));\n  }\n\n  async create(entity: OrderResponse): Promise {\n    return entity;\n  }\n\n  delete(entity: OrderResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  update(entity: OrderResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  updateAll(entity: OrderResponse[]): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/order/src/lib/components/order-detail/order-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                                OrderStatusComponent\n                                DateTimeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #activatedRoute\n                            \n                            \n                                    Readonly\n                                    Private\n                                #orderFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #printInvoiceService\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                order\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                printPdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printPdf\n                        \n                    \n                \n            \n            \n                \nprintPdf(order: OrderResponse, user: UserResponse | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserResponse | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #printInvoiceService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PrintInvoiceService)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#orderFacade.find(this.#activatedRoute.snapshot.params['id'])\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { OrderFacade } from '../../order.facade';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserFacade } from '@demo-shop/user';\nimport { PrintInvoiceService } from '../../services/print-invoice.service';\nimport { OrderResponse, UserResponse } from '@demo-shop/api';\nimport { OrderStatusComponent } from '../shared/order-status/order-status.component';\nimport { DateTimeComponent } from '@demo-shop/shared';\n\n@Component({\n  selector: 'lib-order-detail',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, OrderStatusComponent, DateTimeComponent],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderDetailComponent implements OnInit {\n  readonly #userFacade = inject(UserFacade);\n  readonly user = this.#userFacade.getCurrentUser();\n  readonly #orderFacade = inject(OrderFacade);\n  readonly #activatedRoute = inject(ActivatedRoute);\n  readonly order = this.#orderFacade.find(this.#activatedRoute.snapshot.params['id']);\n  readonly #printInvoiceService = inject(PrintInvoiceService);\n\n  ngOnInit(): void {\n    this.#orderFacade.fetchById(this.#activatedRoute.snapshot.params['id']);\n  }\n\n  printPdf(order: OrderResponse, user: UserResponse | undefined): void {\n    if (!user) {\n      console.error('Could not find user');\n      return;\n    }\n\n    this.#printInvoiceService.generatePdf(order, user);\n  }\n}\n\n    \n\n    \n        \n  \n    @if (user() && order()) {\n    \n      \n        \n          Order #{{ order().id }}\n          \n        \n        \n      \n\n      {{ user()?.firstname }} {{ user()?.lastname }}\n      \n        {{ user()?.address?.street }} {{ user()?.address?.apartment }}\n        {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}\n        {{ user()?.address?.country }}\n      \n    \n    \n      Print\n    \n    }\n  \n  \n    @if (order()) {\n    \n      @for (item of order().items; track item.productId) {\n      \n        \n          \n        \n        \n          \n            #{{ item.productId }} {{ item.productName }}\n            Qty {{ item.quantity }}\n          \n        \n        \n          {{ item.totalPrice | currency }}\n          \n            {{ item.unitPrice | currency }}\n          \n        \n      \n      }\n      \n        \n          \n            total\n          \n        \n        \n          {{ order().amount | currency }}\n        \n      \n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (user() && order()) {                            Order #{{ order().id }}                                      {{ user()?.firstname }} {{ user()?.lastname }}              {{ user()?.address?.street }} {{ user()?.address?.apartment }}        {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}        {{ user()?.address?.country }}                    Print        }        @if (order()) {          @for (item of order().items; track item.productId) {                                                              #{{ item.productId }} {{ item.productName }}            Qty {{ item.quantity }}                                    {{ item.totalPrice | currency }}                      {{ item.unitPrice | currency }}                              }                                    total                                    {{ order().amount | currency }}                      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderFacade.html":{"url":"injectables/OrderFacade.html","title":"injectable - OrderFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/order/src/lib/order.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #orderStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                fetchAll\n                            \n                            \n                                fetchById\n                            \n                            \n                                find\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedByStatusAndDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(order: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAll\n                        \n                    \n                \n            \n            \n                \nfetchAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchById\n                        \n                    \n                \n            \n            \n                \nfetchById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedByStatusAndDate\n                        \n                    \n                \n            \n            \n                \ngetSortedByStatusAndDate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderStore)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/order.facade.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { OrderStore } from './+state/order.store';\nimport { OrderResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFacade {\n  readonly #orderStore = inject(OrderStore);\n\n  fetchAll(): void {\n    this.#orderStore.load();\n  }\n\n  fetchById(id: number): void {\n    this.#orderStore.fetchById(id);\n  }\n\n  add(order: OrderResponse): void {\n    this.#orderStore.create(order);\n  }\n\n  find(id: number): Signal {\n    return this.#orderStore.getById(id);\n  }\n\n  getAll(): Signal {\n    return this.#orderStore.entities;\n  }\n\n  getSortedByStatusAndDate(): Signal {\n    return this.#orderStore.getSortedByStatusAndDate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderItemResponse.html":{"url":"interfaces/OrderItemResponse.html","title":"interface - OrderItemResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderItemResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/order-item-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                                \n                                        \n                                            productThumbnail\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                                \n                                        \n                                            unitPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productThumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productThumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unitPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderItemResponse {\n  productId: number;\n  productName: string;\n  productThumbnail: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/order/src/lib/components/order-list/order-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            NgOptimizedImage\n                                OrderStatusComponent\n                                DateTimeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #orderFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                MAX_THUMBNAILS\n                            \n                            \n                                    Readonly\n                                orders\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/components/order-list/order-list.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        MAX_THUMBNAILS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#orderFacade.getSortedByStatusAndDate()\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { OrderFacade } from '../../order.facade';\nimport { UserFacade } from '@demo-shop/user';\nimport { RouterLink } from '@angular/router';\nimport { OrderStatusComponent } from '../shared/order-status/order-status.component';\nimport { DateTimeComponent } from '@demo-shop/shared';\n\n@Component({\n  selector: 'lib-order-list',\n  standalone: true,\n  imports: [CommonModule, RouterLink, NgOptimizedImage, OrderStatusComponent, DateTimeComponent],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderListComponent implements OnInit {\n  readonly MAX_THUMBNAILS = 5;\n\n  readonly #userFacade = inject(UserFacade);\n  readonly user = this.#userFacade.getCurrentUser();\n  readonly #orderFacade = inject(OrderFacade);\n  readonly orders = this.#orderFacade.getSortedByStatusAndDate();\n\n  ngOnInit() {\n    this.#orderFacade.fetchAll();\n  }\n}\n\n    \n\n    \n        \n  \n    @if (user()) {\n    {{ user()?.firstname }} {{ user()?.lastname }}\n    \n      {{ user()?.address?.street }} {{ user()?.address?.apartment }}\n      {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}\n      {{ user()?.address?.country }}\n    \n    }\n  \n  \n    \n      @for (order of orders(); track order.id) {\n      \n        \n        \n          \n            Order #{{ order.id }}\n            \n              @for (item of order.items; track item.productId; let index = $index; let count = $count) { @if (index  MAX_THUMBNAILS) {\n              \n                +{{ count - MAX_THUMBNAILS + 1 }}\n              \n              } @else {\n              \n                \n              \n              } } }\n            \n          \n        \n        \n          {{ order.amount | currency }}\n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (user()) {    {{ user()?.firstname }} {{ user()?.lastname }}          {{ user()?.address?.street }} {{ user()?.address?.apartment }}      {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}      {{ user()?.address?.country }}        }              @for (order of orders(); track order.id) {                                            Order #{{ order.id }}                          @for (item of order.items; track item.productId; let index = $index; let count = $count) { @if (index  MAX_THUMBNAILS) {                              +{{ count - MAX_THUMBNAILS + 1 }}                            } @else {                                                          } } }                                                {{ order.amount | currency }}                              }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderListResponse.html":{"url":"interfaces/OrderListResponse.html","title":"interface - OrderListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/order-list-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderResponse } from './order-response';\n\nexport interface OrderListResponse {\n  items: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderResponse.html":{"url":"interfaces/OrderResponse.html","title":"interface - OrderResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/order-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         OrderStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderStatus } from './order-status';\nimport { OrderItemResponse } from './order-item-response';\n\nexport interface OrderResponse {\n  id: number;\n  userId: number;\n  items: Array;\n  amount: number;\n  status: OrderStatus;\n  created: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderStatusComponent.html":{"url":"components/OrderStatusComponent.html","title":"component - OrderStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/order/src/lib/components/shared/order-status/order-status.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-order-status\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-status.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-status.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                status\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in libs/order/src/lib/components/shared/order-status/order-status.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        status\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in libs/order/src/lib/components/shared/order-status/order-status.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrderStatus } from '@demo-shop/api';\n\n@Component({\n  selector: 'lib-order-status',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './order-status.component.html',\n  styleUrl: './order-status.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'rounded-lg px-4 py-1.5 max-w-28 text-center text-white border border-slate-300 text-xs',\n    '[class.bg-green-800]': 'this.status() === \"Completed\"',\n    '[class.bg-orange-500]': 'this.status() === \"Created\"',\n  },\n})\nexport class OrderStatusComponent {\n  readonly status = input.required();\n}\n\n    \n\n    \n        {{ status() | titlecase }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ status() | titlecase }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Param.html":{"url":"interfaces/Param.html","title":"interface - Param","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Param\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/param.ts\n        \n\n\n            \n                Description\n            \n            \n                The parameter to encode.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dataFormat\n                                        \n                                \n                                \n                                        \n                                            dataType\n                                        \n                                \n                                \n                                        \n                                            explode\n                                        \n                                \n                                \n                                        \n                                            in\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataFormat:         DataFormat | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataFormat | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataType:         DataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         ParamLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamLocation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         ParamStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamStyle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type StandardParamStyle =\n  | 'matrix'\n  | 'label'\n  | 'form'\n  | 'simple'\n  | 'spaceDelimited'\n  | 'pipeDelimited'\n  | 'deepObject';\n\n/**\n * The OpenAPI standard {@link StandardParamStyle}s may be extended by custom styles by the user.\n */\nexport type ParamStyle = StandardParamStyle | string;\n\n/**\n * Standard parameter locations defined by OpenAPI spec\n */\nexport type ParamLocation = 'query' | 'header' | 'path' | 'cookie';\n\n/**\n * Standard types as defined in OpenAPI Specification: Data Types\n */\nexport type StandardDataType = 'integer' | 'number' | 'boolean' | 'string' | 'object' | 'array';\n\n/**\n * Standard {@link DataType}s plus your own types/classes.\n */\nexport type DataType = StandardDataType | string;\n\n/**\n * Standard formats as defined in OpenAPI Specification: Data Types\n */\nexport type StandardDataFormat =\n  | 'int32'\n  | 'int64'\n  | 'float'\n  | 'double'\n  | 'byte'\n  | 'binary'\n  | 'date'\n  | 'date-time'\n  | 'password';\n\nexport type DataFormat = StandardDataFormat | string;\n\n/**\n * The parameter to encode.\n */\nexport interface Param {\n  name: string;\n  value: unknown;\n  in: ParamLocation;\n  style: ParamStyle;\n  explode: boolean;\n  dataType: DataType;\n  dataFormat: DataFormat | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/services/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #keycloakService\n                            \n                            \n                                    Readonly\n                                permissionStrategies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(permissionStrategy: PermissionStrategy, ...args: [])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/permission.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissionStrategy\n                                            \n                                                            PermissionStrategy\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #keycloakService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(KeycloakService)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/permission.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        permissionStrategies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    [PermissionStrategy.AUTHENTICATED]: () => this.#keycloakService.authenticated,\n  }\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/permission.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { KeycloakService } from './keycloak.service';\nimport { PermissionStrategy } from '../enums/permission-strategy';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionService {\n  readonly #keycloakService = inject(KeycloakService);\n  readonly permissionStrategies: { [key in PermissionStrategy]: (...args: unknown[]) => boolean } = {\n    [PermissionStrategy.AUTHENTICATED]: () => this.#keycloakService.authenticated,\n  };\n\n  hasPermission(permissionStrategy: PermissionStrategy, ...args: unknown[]): boolean {\n    const permissionStrategyFn = this.permissionStrategies[permissionStrategy];\n\n    if (!permissionStrategyFn) {\n      return false;\n    }\n\n    return permissionStrategyFn.bind(this)();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrintInvoiceService.html":{"url":"injectables/PrintInvoiceService.html","title":"injectable - PrintInvoiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrintInvoiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/order/src/lib/services/print-invoice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCompanyInformation\n                            \n                            \n                                addCustomerInformation\n                            \n                            \n                                addFooter\n                            \n                            \n                                addInvoiceDetails\n                            \n                            \n                                addLine\n                            \n                            \n                                addLogo\n                            \n                            \n                                addPage\n                            \n                            \n                                addTableFooter\n                            \n                            \n                                addTableHeader\n                            \n                            \n                                addTableItems\n                            \n                            \n                                generatePdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCompanyInformation\n                        \n                    \n                \n            \n            \n                \naddCompanyInformation(doc: jsPDF, options: DrawOptions, companyData: CompanyData)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                companyData\n                                            \n                                                            CompanyData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addCustomerInformation\n                        \n                    \n                \n            \n            \n                \naddCustomerInformation(doc: jsPDF, options: DrawOptions, user: UserResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addFooter\n                        \n                    \n                \n            \n            \n                \naddFooter(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymentTerms\n                                            \n                                                            PaymentTerms\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addInvoiceDetails\n                        \n                    \n                \n            \n            \n                \naddInvoiceDetails(doc: jsPDF, options: DrawOptions, order: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLine\n                        \n                    \n                \n            \n            \n                \naddLine(doc: jsPDF, options: DrawOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLogo\n                        \n                    \n                \n            \n            \n                \naddLogo(doc: jsPDF, options: DrawOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addPage\n                        \n                    \n                \n            \n            \n                \naddPage(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymentTerms\n                                            \n                                                            PaymentTerms\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTableFooter\n                        \n                    \n                \n            \n            \n                \naddTableFooter(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns, order: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                columns\n                                            \n                                                            PdfTableColumns\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTableHeader\n                        \n                    \n                \n            \n            \n                \naddTableHeader(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                columns\n                                            \n                                                            PdfTableColumns\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTableItems\n                        \n                    \n                \n            \n            \n                \naddTableItems(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns, order: OrderResponse, paymentTerms: PaymentTerms)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                columns\n                                            \n                                                            PdfTableColumns\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymentTerms\n                                            \n                                                            PaymentTerms\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePdf\n                        \n                    \n                \n            \n            \n                \ngeneratePdf(order: OrderResponse, user: UserResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { jsPDF } from 'jspdf';\nimport { OrderResponse, UserResponse } from '@demo-shop/api';\nimport { format } from 'date-fns/format';\nimport { CompanyData } from '../models/company-data';\nimport { PaymentTerms } from '../models/payment-terms';\nimport { DrawOptions } from '../models/draw-options';\nimport { PdfTableColumns } from '../models/pdf-table.columns';\nimport { columns, companyData, createDrawOptions, paymentTerms } from '../config/print-invoice.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrintInvoiceService {\n  generatePdf(order: OrderResponse, user: UserResponse) {\n    const doc = new jsPDF('p', 'mm', 'A4', true);\n    const drawOptions = createDrawOptions(doc.internal.pageSize.getWidth(), doc.internal.pageSize.getHeight());\n\n    this.addFooter(doc, drawOptions, paymentTerms);\n    this.addLogo(doc, drawOptions);\n    this.addCompanyInformation(doc, drawOptions, companyData);\n    this.addInvoiceDetails(doc, drawOptions, order);\n    this.addCustomerInformation(doc, drawOptions, user);\n    this.addTableHeader(doc, drawOptions, columns);\n    this.addTableItems(doc, drawOptions, columns, order, paymentTerms);\n    this.addTableFooter(doc, drawOptions, columns, order);\n\n    doc.save(`invoice-${order.id}.pdf`);\n  }\n\n  addLogo(doc: jsPDF, options: DrawOptions): void {\n    options.pointer.x = options.border.left;\n    options.pointer.y = options.border.top;\n\n    const width = 25;\n    const height = 25;\n\n    doc.addImage('icons/demo-shop.png', 'PNG', options.pointer.x, options.pointer.y, width, height);\n  }\n\n  addCompanyInformation(doc: jsPDF, options: DrawOptions, companyData: CompanyData): void {\n    options.pointer.x = options.border.right;\n    options.pointer.y += 6;\n    doc.setFont(options.text.font.default, 'bold');\n    doc.setFontSize(options.text.size.small);\n    doc.setTextColor(options.text.color.light);\n    doc.text(companyData.name, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.setFont(options.text.font.default);\n    doc.setFontSize(options.text.size.smaller);\n    doc.text(companyData.address, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.text(companyData.city + ', ' + companyData.zipCode, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.text(companyData.phone, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.text(companyData.email, options.pointer.x, options.pointer.y, { align: 'right' });\n  }\n\n  addInvoiceDetails(doc: jsPDF, options: DrawOptions, order: OrderResponse): void {\n    options.pointer.y += 22;\n    doc.setFontSize(options.text.size.smaller);\n    doc.setFont(options.text.font.default, 'bold');\n    doc.text(`INVOICE #${order.id}`, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    const date = format(order.created, 'yyyy-MM-dd');\n    doc.setFont(options.text.font.default);\n    doc.text(date, options.pointer.x, options.pointer.y, { align: 'right' });\n  }\n\n  addCustomerInformation(doc: jsPDF, options: DrawOptions, user: UserResponse): void {\n    options.pointer.x = options.border.left;\n    options.pointer.y += 15;\n    doc.setFontSize(options.text.size.smaller);\n    doc.setFont('Helvetica', 'bold');\n    doc.text('YOUR DATA:', options.pointer.x, options.pointer.y);\n    doc.setFont('Helvetica');\n\n    options.pointer.y += 6;\n    doc.text(`${user.firstname} ${user.lastname}`, options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(`${user.address?.street} ${user.address?.apartment}`, options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(`${user.address?.city}, ${user.address?.zip}`, options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(user.address?.country ?? '', options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(user.email, options.pointer.x, options.pointer.y);\n  }\n\n  addTableHeader(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns): void {\n    options.pointer.y += 20;\n    this.addLine(doc, options);\n\n    options.pointer.y += 4;\n    doc.setFontSize(options.text.size.smaller);\n    doc.setTextColor(options.text.color.darker);\n    doc.setFont('Helvetica', 'bold');\n\n    doc.text(columns.article.label, columns.article.x, options.pointer.y, { baseline: 'middle' });\n    doc.text(columns.qty.label, columns.qty.x, options.pointer.y, { baseline: 'middle', align: 'center' });\n    doc.text(columns.price.label, columns.price.x, options.pointer.y, { baseline: 'middle', align: 'right' });\n    doc.text(columns.amount.label, columns.amount.x, options.pointer.y, { baseline: 'middle', align: 'right' });\n\n    options.pointer.y += 4;\n    this.addLine(doc, options);\n  }\n\n  addTableItems(\n    doc: jsPDF,\n    options: DrawOptions,\n    columns: PdfTableColumns,\n    order: OrderResponse,\n    paymentTerms: PaymentTerms\n  ): void {\n    const limitForNewContent = options.border.bottom - 40;\n\n    options.pointer.y += 4;\n    doc.setFont('Helvetica', 'normal');\n\n    order.items.forEach(item => {\n      options.pointer.y += 6;\n\n      if (options.pointer.y > limitForNewContent) {\n        this.addPage(doc, options, paymentTerms);\n      }\n\n      doc.setTextColor(options.text.color.dark);\n      doc.setFontSize(options.text.size.smaller);\n      doc.text(item.productName, columns.article.x, options.pointer.y);\n      doc.text(item.quantity.toString(), columns.qty.x, options.pointer.y, { align: 'center' });\n      doc.text(`$${item.unitPrice.toFixed(2)}`, columns.price.x, options.pointer.y, { align: 'right' });\n      doc.text(`$${item.totalPrice.toFixed(2)}`, columns.amount.x, options.pointer.y, { align: 'right' });\n    });\n  }\n\n  addTableFooter(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns, order: OrderResponse) {\n    options.pointer.y += 6;\n    this.addLine(doc, options);\n\n    options.pointer.y += 6;\n    doc.setFont('Helvetica', 'bold');\n    doc.setFontSize(options.text.size.smaller);\n    doc.text('Total', columns.price.x, options.pointer.y, { align: 'right' });\n    doc.text(`$${order.amount.toFixed(2)}`, columns.amount.x, options.pointer.y, { align: 'right' });\n  }\n\n  addPage(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms) {\n    doc.addPage();\n    options.pointer.y = options.border.top;\n    this.addFooter(doc, options, paymentTerms);\n  }\n\n  addFooter(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms) {\n    const xCenter = doc.internal.pageSize.getWidth() / 2;\n    let y = options.border.bottom;\n\n    this.addLine(doc, options);\n\n    y += 6;\n    doc.setFont('Helvetica', 'bold');\n    doc.setFontSize(options.text.size.tiny);\n    doc.setTextColor(options.text.color.lighter);\n    doc.setFont('Helvetica', 'normal');\n    doc.text(paymentTerms.terms, xCenter, y, { align: 'center' });\n\n    y += 3;\n    const bankingText = `BANK: ${paymentTerms.bankName} - ACCOUNT NAME: ${paymentTerms.accountName} - ACCOUNT NO.: ${paymentTerms.accountNumber} - ROUTING NUMBER: ${paymentTerms.routingNumber}`;\n    doc.text(bankingText, xCenter, y, { align: 'center' });\n  }\n\n  addLine(doc: jsPDF, options: DrawOptions): void {\n    doc.setDrawColor(options.line.color.light);\n    doc.line(options.border.left, options.pointer.y, options.border.right, options.pointer.y);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProblemDetails.html":{"url":"interfaces/ProblemDetails.html","title":"interface - ProblemDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProblemDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/problem-details.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any | any\n\n                    \n                \n                        \n                            \n                                Defined in libs/api/model/problem-details.ts:11\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProblemDetails {\n  [key: string]: any | any;\n\n  type?: string | null;\n  title?: string | null;\n  status?: number | null;\n  detail?: string | null;\n  instance?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductApi.html":{"url":"injectables/ProductApi.html","title":"injectable - ProductApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/api/product-api.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                basePath\n                            \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                defaultHeaders\n                            \n                            \n                                    Public\n                                encoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addToHttpParams\n                            \n                            \n                                    Private\n                                addToHttpParamsRecursive\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, basePath: string | string[], configuration: Configuration)\n                    \n                \n                        \n                            \n                                Defined in libs/api/api/product-api.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basePath\n                                                  \n                                                        \n                                                                    string | string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParams(httpParams: HttpParams, value: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParamsRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:112\n                        \n                    \n\n\n            \n                \n                        Get all products\nGet all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:200\n                        \n                    \n\n\n            \n                \n                        Get all products\nGet all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:210\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost'\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Configuration()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { AddCartItem401Response } from '../model/add-cart-item401-response';\n// @ts-ignore\nimport { ProductListResponse } from '../model/product-list-response';\n// @ts-ignore\nimport { ProductResponse } from '../model/product-response';\n// @ts-ignore\nimport { ValidationProblemDetails } from '../model/validation-problem-details';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductApi {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: Configuration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(elem => (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key)));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, (value as Date).toISOString().substring(0, 10));\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          k => (httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * Get all products\n   * Get all products\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getAllProducts(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getAllProducts(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllProducts(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllProducts(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/products`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n\n  /**\n   * Get all products\n   * Get all products\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getProductById(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getProductById(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getProductById(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getProductById(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    if (id === null || id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getProductById.');\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/products/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'number',\n      dataFormat: 'int32',\n    })}`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductDataService.html":{"url":"injectables/ProductDataService.html","title":"injectable - ProductDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/product/src/lib/services/product-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #productApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                loadById\n                            \n                            \n                                update\n                            \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: ProductResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(entity: ProductResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(filter: ProductFilter)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            ProductFilter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadById\n                        \n                    \n                \n            \n            \n                \nloadById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(entity: ProductResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAll\n                        \n                    \n                \n            \n            \n                \nupdateAll(entity: ProductResponse[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductApi)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/services/product-data.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { DataService } from '@angular-architects/ngrx-toolkit';\nimport { ProductFilter } from '../models/product-filter';\nimport { firstValueFrom } from 'rxjs';\nimport { ProductApi, ProductResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductDataService implements DataService {\n  readonly #productApi = inject(ProductApi);\n\n  async load(filter: ProductFilter): Promise {\n    const res = await firstValueFrom(this.#productApi.getAllProducts());\n    return res.items ?? [];\n  }\n\n  loadById(id: number): Promise {\n    return firstValueFrom(this.#productApi.getProductById(id));\n  }\n\n  create(entity: ProductResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  delete(entity: ProductResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  update(entity: ProductResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  updateAll(entity: ProductResponse[]): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailComponent.html":{"url":"components/ProductDetailComponent.html","title":"component - ProductDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/product/src/lib/components/product-detail/product-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-product-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #activatedRoute\n                            \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                addButtonEnabled\n                            \n                            \n                                    Readonly\n                                product\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        addButtonEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getHasShoppingSession()\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#productFacade.getById(this.#activatedRoute.snapshot.params['id'])\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductFacade } from '../../product.facade';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartFacade } from '@demo-shop/cart';\n\n@Component({\n  selector: 'lib-product-detail',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage],\n  templateUrl: './product-detail.component.html',\n  styleUrl: './product-detail.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'bg-white',\n  },\n})\nexport class ProductDetailComponent implements OnInit {\n  readonly #activatedRoute = inject(ActivatedRoute);\n  readonly #productFacade = inject(ProductFacade);\n  readonly product = this.#productFacade.getById(this.#activatedRoute.snapshot.params['id']);\n  readonly #cartFacade = inject(CartFacade);\n  readonly addButtonEnabled = this.#cartFacade.getHasShoppingSession();\n\n  ngOnInit() {\n    this.#productFacade.fetchById(this.#activatedRoute.snapshot.params['id']);\n  }\n\n  addToCart(id: number): void {\n    this.#cartFacade.addItem(id);\n  }\n}\n\n    \n\n    \n        @if (product()) {\n\n  \n  \n    \n      \n    \n  \n\n  \n  \n    \n      {{ product().name }}\n    \n\n    \n    \n      Product information\n      \n        {{ product().price | currency }}\n      \n\n      \n        Add to cart\n      \n    \n\n    \n      {{ product().description }}\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (product()) {                                  {{ product().name }}                  Product information              {{ product().price | currency }}                    Add to cart                    {{ product().description }}      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductFacade.html":{"url":"injectables/ProductFacade.html","title":"injectable - ProductFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/product/src/lib/product.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchAll\n                            \n                            \n                                fetchById\n                            \n                            \n                                getById\n                            \n                            \n                                getFilter\n                            \n                            \n                                getFiltered\n                            \n                            \n                                setFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAll\n                        \n                    \n                \n            \n            \n                \nfetchAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchById\n                        \n                    \n                \n            \n            \n                \nfetchById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilter\n                        \n                    \n                \n            \n            \n                \ngetFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFiltered\n                        \n                    \n                \n            \n            \n                \ngetFiltered()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(filter: ProductFilter)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            ProductFilter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductStore)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/product.facade.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { ProductStore } from './+state/product.store';\nimport { ProductFilter } from './models/product-filter';\nimport { ProductResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductFacade {\n  readonly #store = inject(ProductStore);\n\n  fetchAll(): void {\n    this.#store.load();\n  }\n\n  fetchById(id: number): void {\n    this.#store.fetchById(id);\n  }\n\n  getFiltered(): Signal {\n    return this.#store.filteredEntities;\n  }\n\n  getFilter(): Signal {\n    return this.#store.filter;\n  }\n\n  getById(id: number): Signal {\n    return this.#store.getById(id);\n  }\n\n  setFilter(filter: ProductFilter): void {\n    this.#store.updateFilter(filter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductListComponent.html":{"url":"components/ProductListComponent.html","title":"component - ProductListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/product/src/lib/components/product-list/product-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-product-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-list/product-list.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-list/product-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#productFacade.getFiltered()\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-list/product-list.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductFacade } from '../../product.facade';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'lib-product-list',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, RouterLink],\n  templateUrl: './product-list.component.html',\n  styleUrl: './product-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'bg-white',\n  },\n})\nexport class ProductListComponent implements OnInit {\n  readonly #productFacade = inject(ProductFacade);\n\n  readonly products = this.#productFacade.getFiltered();\n\n  ngOnInit() {\n    this.#productFacade.fetchAll();\n  }\n}\n\n    \n\n    \n        \n  Products\n\n  \n    @for (product of products(); track product.id) {\n    \n      \n        \n      \n      {{ product.name }}\n      {{ product.price | currency }}\n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Products      @for (product of products(); track product.id) {                              {{ product.name }}      {{ product.price | currency }}        }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductListResponse.html":{"url":"interfaces/ProductListResponse.html","title":"interface - ProductListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/product-list-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ProductResponse } from './product-response';\n\nexport interface ProductListResponse {\n  items: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductResponse.html":{"url":"interfaces/ProductResponse.html","title":"interface - ProductResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/product-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         ImageResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ImageResponse } from './image-response';\n\nexport interface ProductResponse {\n  id: number;\n  name: string;\n  description: string;\n  price: number;\n  categories: Array;\n  images: Array;\n  thumbnail: ImageResponse;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductSearchComponent.html":{"url":"components/ProductSearchComponent.html","title":"component - ProductSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/product/src/lib/components/product-search/product-search.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-product-search\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-search.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-search.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #router\n                            \n                            \n                                    Readonly\n                                productFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToProductPage\n                            \n                            \n                                setProductNameFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToProductPage\n                        \n                    \n                \n            \n            \n                \ngoToProductPage()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-search/product-search.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProductNameFilter\n                        \n                    \n                \n            \n            \n                \nsetProductNameFilter(name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-search/product-search.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-search/product-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-search/product-search.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        productFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#productFacade.getFilter()\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-search/product-search.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductFacade } from '../../product.facade';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'lib-product-search',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, FormsModule],\n  templateUrl: './product-search.component.html',\n  styleUrl: './product-search.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'flex align-middle lg:ml-6 cursor-pointer relative',\n  },\n})\nexport class ProductSearchComponent {\n  readonly #productFacade = inject(ProductFacade);\n  readonly productFilter = this.#productFacade.getFilter();\n  readonly #router = inject(Router);\n\n  setProductNameFilter(name?: string): void {\n    this.#productFacade.setFilter({\n      name,\n    });\n  }\n\n  goToProductPage(): void {\n    this.#router.navigateByUrl('/products');\n  }\n}\n\n    \n\n    \n        \n  Search\n  \n\n\n  \n  @if (productFilter().name) {\n  \n    \n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Search      @if (productFilter().name) {          }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoveCartItemRequest.html":{"url":"interfaces/RemoveCartItemRequest.html","title":"interface - RemoveCartItemRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoveCartItemRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/remove-cart-item-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RemoveCartItemRequest {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            discriminator\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        discriminator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discriminator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Request {\n  discriminator: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteItem.html":{"url":"classes/RouteItem.html","title":"class - RouteItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/models/navigation-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            NavigationItem\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                options\n                            \n                            \n                                    \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                order\n                            \n                            \n                                    Public\n                                    Optional\n                                subItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: string, order: number, options: literal type, subItems?: RouteItem[])\n                    \n                \n                        \n                            \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subItems\n                                                  \n                                                        \n                                                                        RouteItem[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationType\n\n                    \n                \n                \n                    \n                        Default value : NavigationType.ROUTE\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        subItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteItem[]\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PermissionStrategy } from '@demo-shop/auth';\nimport { NavigationType } from '../enums/navigation-type';\n\nexport abstract class NavigationItem {\n  readonly type!: NavigationType;\n\n  protected constructor(\n    public label: string,\n    public order: number,\n    public options?: {\n      permissionStrategy?: PermissionStrategy;\n    },\n    public subItems?: RouteItem[]\n  ) {}\n}\n\nexport class RouteItem extends NavigationItem {\n  override readonly type: NavigationType = NavigationType.ROUTE;\n\n  constructor(\n    label: string,\n    order: number,\n    public override options: {\n      route: string;\n      permissionStrategy?: PermissionStrategy;\n      query?: string;\n    },\n    subItems?: RouteItem[]\n  ) {\n    super(label, order, options, subItems);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingSessionResponse.html":{"url":"interfaces/ShoppingSessionResponse.html","title":"interface - ShoppingSessionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingSessionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/shopping-session-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CartItemResponse } from './cart-item-response';\n\nexport interface ShoppingSessionResponse {\n  id: number;\n  userId: number;\n  items: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateCartItemQuantityRequest.html":{"url":"interfaces/UpdateCartItemQuantityRequest.html","title":"interface - UpdateCartItemQuantityRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateCartItemQuantityRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-cart-item-quantity-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateCartItemQuantityRequest {\n  quantity?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{"url":"interfaces/UpdateCartItemQuantityRequestWrapper.html","title":"interface - UpdateCartItemQuantityRequestWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateCartItemQuantityRequestWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-cart-item-quantity-request-wrapper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            updateCartItemQuantityRequest\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateCartItemQuantityRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateCartItemQuantityRequest:         UpdateCartItemQuantityRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UpdateCartItemQuantityRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UpdateCartItemQuantityRequest } from './update-cart-item-quantity-request';\n\nexport interface UpdateCartItemQuantityRequestWrapper {\n  id: number;\n  updateCartItemQuantityRequest: UpdateCartItemQuantityRequest;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateCartItemQuantityResponse.html":{"url":"interfaces/UpdateCartItemQuantityResponse.html","title":"interface - UpdateCartItemQuantityResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateCartItemQuantityResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-cart-item-quantity-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateCartItemQuantityResponse {\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateUserAddressRequest.html":{"url":"interfaces/UpdateUserAddressRequest.html","title":"interface - UpdateUserAddressRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateUserAddressRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-user-address-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartment\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            zip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateUserAddressRequest {\n  street: string;\n  apartment: string;\n  city: string;\n  zip: string;\n  country: string;\n  region?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateUserPhoneRequest.html":{"url":"interfaces/UpdateUserPhoneRequest.html","title":"interface - UpdateUserPhoneRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateUserPhoneRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-user-phone-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateUserPhoneRequest {\n  phone?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/user/src/lib/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #userStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchCurrentUser\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                updateUserAddress\n                            \n                            \n                                    Async\n                                updateUserPhone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserAddress(address: UpdateUserAddressRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            UpdateUserAddressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserPhone\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserPhone(phone: UpdateUserPhoneRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phone\n                                            \n                                                            UpdateUserPhoneRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserStore)\n                    \n                \n                    \n                        \n                                Defined in libs/user/src/lib/user.facade.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { UserStore } from './+state/user.store';\nimport { UpdateUserAddressRequest, UpdateUserPhoneRequest, UserResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFacade {\n  readonly #userStore = inject(UserStore);\n\n  async fetchCurrentUser(): Promise {\n    await this.#userStore.fetchCurrentUser();\n  }\n\n  getCurrentUser(): Signal {\n    return this.#userStore.user;\n  }\n\n  async updateUserAddress(address: UpdateUserAddressRequest): Promise {\n    await this.#userStore.updateUserAddress(address);\n  }\n\n  async updateUserPhone(phone: UpdateUserPhoneRequest): Promise {\n    await this.#userStore.updateUserPhone(phone);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserNavigationComponent.html":{"url":"components/UserNavigationComponent.html","title":"component - UserNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-user-navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-navigation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-navigation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #authFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                currentUser\n                            \n                            \n                                    Readonly\n                                isSmallScreen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #authFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isSmallScreen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(false, { transform: booleanAttribute })\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, ChangeDetectionStrategy, Component, inject, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthFacade } from '@demo-shop/auth';\nimport { UserFacade } from '@demo-shop/user';\nimport { CartFacade } from '@demo-shop/cart';\n\n@Component({\n  selector: 'lib-user-navigation',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './user-navigation.component.html',\n  styleUrl: './user-navigation.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserNavigationComponent {\n  readonly isSmallScreen = input(false, { transform: booleanAttribute });\n\n  readonly #authFacade = inject(AuthFacade);\n  readonly #userFacade = inject(UserFacade);\n  readonly currentUser = this.#userFacade.getCurrentUser();\n  readonly #cartFacade = inject(CartFacade);\n\n  async login(): Promise {\n    await this.#authFacade.login();\n    await this.#cartFacade.loadShoppingSession();\n  }\n\n  async register(): Promise {\n    await this.#authFacade.register();\n    await this.#cartFacade.loadShoppingSession();\n  }\n\n  async logout(): Promise {\n    await this.#authFacade.logout();\n  }\n}\n\n    \n\n    \n        \n  @if (currentUser()) {\n  \n    \n      {{ currentUser()?.firstname }}&nbsp;{{ currentUser()?.lastname }}\n    \n  \n  \n    \n      Sign out\n    \n  \n  } @else {\n  \n    \n      Sign in\n    \n  \n  \n    \n      Register\n    \n  \n  }\n\n\n\n  @if (currentUser()) {\n  \n    {{ currentUser()?.firstname }}&nbsp;{{ currentUser()?.lastname }}\n  \n  \n   Sign out \n  } @else {\n   Sign in \n  \n   Register \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (currentUser()) {            {{ currentUser()?.firstname }} {{ currentUser()?.lastname }}                  Sign out        } @else {            Sign in                  Register        }  @if (currentUser()) {      {{ currentUser()?.firstname }} {{ currentUser()?.lastname }}       Sign out   } @else {   Sign in      Register   }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPhoneResponse.html":{"url":"interfaces/UserPhoneResponse.html","title":"interface - UserPhoneResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPhoneResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/user-phone-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPhoneResponse {\n  phone: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserResponse.html":{"url":"interfaces/UserResponse.html","title":"interface - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/user-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         AddressResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AddressResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AddressResponse } from './address-response';\n\nexport interface UserResponse {\n  id: number;\n  email: string;\n  firstname: string;\n  lastname: string;\n  phone?: string | null;\n  address?: AddressResponse;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationProblemDetails.html":{"url":"interfaces/ValidationProblemDetails.html","title":"interface - ValidationProblemDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationProblemDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/validation-problem-details.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any | any\n\n                    \n                \n                        \n                            \n                                Defined in libs/api/model/validation-problem-details.ts:11\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationProblemDetails {\n  [key: string]: any | any;\n\n  type?: string | null;\n  title?: string | null;\n  status?: number | null;\n  detail?: string | null;\n  instance?: string | null;\n  errors?: { [key: string]: Array };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\n0.3.23 (2025-03-15)\n0.3.22 (2025-03-14)\nFeatures\n\nfrontend: add navigation to products from cart and checkout (#54) (22daee8)\n\n0.3.21 (2025-03-14)\n0.3.20 (2025-03-14)\nFeatures\n\norder: update styling of list and detail view (#52) (54417dc)\n\n0.3.19 (2025-03-13)\nFeatures\n\nbackend: add endpoints for updating user address and phone (#51) (f49f741)\n\n0.3.18 (2025-03-12)\n0.3.17 (2025-03-12)\nBug Fixes\n\nfix data fetching for deep links (#49) (634f627)\n\n0.3.16 (2025-03-12)\nBug Fixes\n\nfix broken image links by displaying a fallback image (#48) (5374a97)\n\n0.3.15 (2025-03-12)\n0.3.14 (2025-03-12)\n0.3.13 (2025-03-12)\n0.3.12 (2025-03-12)\n0.3.11 (2025-03-10)\n0.3.10 (2025-03-10)\n0.3.9 (2025-03-10)\n0.3.8 (2025-03-10)\n0.3.7 (2025-03-10)\n0.3.6 (2025-03-02)\n0.3.5 (2025-01-09)\n0.3.4 (2025-01-09)\n0.3.3 (2025-01-08)\n0.3.2 (2025-01-06)\n0.3.1 (2025-01-06)\nFeatures\n\nbackend: update errors to be more descriptive\n\nBug Fixes\n\ncart: fix checkout form autocomplete labels\nfix deployment issues\nfix issues raised by sonar\nfix keycloak deployment\n\n0.3.0 (2024-11-05)\n\nadd helmet, enable rate limiting and add ssl\nauth: add keycloak\n\n0.2.0 (2024-09-24)\n\nsimplify data model for a faster mvp\n\n0.1.0 (2024-08-22)\n\nbackend: update data model\nbackend: add dto factories\nrefactor frontend to use api instead of mock data\n\n0.0.1 (2024-08-20)\n\nbackend: Fix relationship between Skus and attributes\nbackend: add order dtos and hydrated entities\nbackend: add product dtos, hydrated entities and fix sku attribute relationship\nbackend: add user dto and openapi defintion\n\n0.0.0 (2024-08-20)\n\nnx: Added Nx Cloud token to your nx.json\nnx: Generated CI workflow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        apps/frontend/src/app/+state/app.store.ts\n            \n            variable\n            AppStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/+state/app.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/+state/app.store.ts\n            \n            type alias\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/frontend/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/providers/provide-api.ts\n            \n            function\n            withConfiguration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/providers/provide-api.ts\n            \n            variable\n            provideApi\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/frontend/src/app/strategies/no-reuse-strategy.ts\n            \n            class\n            NoReuseStrategy\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        libs/api/api/api.ts\n            \n            variable\n            APIS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/api/api/order-api.ts\n            \n            injectable\n            OrderApi\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                libs/api/api/product-api.ts\n            \n            injectable\n            ProductApi\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                libs/api/api/shopping-session-api.ts\n            \n            injectable\n            ShoppingSessionApi\n            \n                17 %\n                (5/28)\n            \n        \n        \n            \n                \n                libs/api/api/user-api.ts\n            \n            injectable\n            UserApi\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                libs/api/configuration.ts\n            \n            class\n            Configuration\n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                libs/api/configuration.ts\n            \n            interface\n            ConfigurationParameters\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                libs/api/encoder.ts\n            \n            class\n            CustomHttpParameterCodec\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/api/model/add-cart-item-request.ts\n            \n            interface\n            AddCartItemRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        libs/api/model/add-cart-item401-response.ts\n            \n            type alias\n            AddCartItem401Response\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/api/model/address-response.ts\n            \n            interface\n            AddressResponse\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/cart-item-response.ts\n            \n            interface\n            CartItemResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                libs/api/model/get-order-by-id-request.ts\n            \n            interface\n            GetOrderByIdRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/get-product-by-id-request.ts\n            \n            interface\n            GetProductByIdRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/http-validation-problem-details.ts\n            \n            interface\n            HttpValidationProblemDetails\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/image-response.ts\n            \n            interface\n            ImageResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/api/model/order-item-response.ts\n            \n            interface\n            OrderItemResponse\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/order-list-response.ts\n            \n            interface\n            OrderListResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/api/model/order-response.ts\n            \n            interface\n            OrderResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/api/model/problem-details.ts\n            \n            interface\n            ProblemDetails\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/api/model/product-list-response.ts\n            \n            interface\n            ProductListResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/api/model/product-response.ts\n            \n            interface\n            ProductResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/api/model/remove-cart-item-request.ts\n            \n            interface\n            RemoveCartItemRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/request.ts\n            \n            interface\n            Request\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/shopping-session-response.ts\n            \n            interface\n            ShoppingSessionResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/api/model/update-cart-item-quantity-request-wrapper.ts\n            \n            interface\n            UpdateCartItemQuantityRequestWrapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/api/model/update-cart-item-quantity-request.ts\n            \n            interface\n            UpdateCartItemQuantityRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/update-cart-item-quantity-response.ts\n            \n            interface\n            UpdateCartItemQuantityResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/update-user-address-request.ts\n            \n            interface\n            UpdateUserAddressRequest\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/update-user-phone-request.ts\n            \n            interface\n            UpdateUserPhoneRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/user-phone-response.ts\n            \n            interface\n            UserPhoneResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/user-response.ts\n            \n            interface\n            UserResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/api/model/validation-problem-details.ts\n            \n            interface\n            ValidationProblemDetails\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/param.ts\n            \n            interface\n            Param\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            DataFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            DataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            ParamLocation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            ParamStyle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            StandardDataFormat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            StandardDataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            StandardParamStyle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/variables.ts\n            \n            variable\n            BASE_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/api/variables.ts\n            \n            variable\n            COLLECTION_FORMATS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/auth.facade.ts\n            \n            injectable\n            AuthFacade\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/guards/permission.guard.ts\n            \n            variable\n            permissionGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/models/auth-config.ts\n            \n            interface\n            AuthConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/models/auth-config.ts\n            \n            variable\n            AUTH_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/providers/provide-auth.ts\n            \n            variable\n            provideAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/services/keycloak.service.ts\n            \n            injectable\n            KeycloakService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/services/permission.service.ts\n            \n            injectable\n            PermissionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/+state/cart.store.ts\n            \n            interface\n            AdditionalState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/+state/cart.store.ts\n            \n            variable\n            CartStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/+state/cart.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/cart.facade.ts\n            \n            injectable\n            CartFacade\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/cart-icon/cart-icon.component.ts\n            \n            component\n            CartIconComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/components/cart/cart.animations.ts\n            \n            variable\n            animateBackdrop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/components/cart/cart.animations.ts\n            \n            variable\n            animateSlideOver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/checkout/checkout.component.ts\n            \n            component\n            CheckoutComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts\n            \n            component\n            CartItemsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/models/cart-filter.ts\n            \n            type alias\n            CartFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/models/checkout-form.ts\n            \n            interface\n            CheckoutAddressForm\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/models/checkout-form.ts\n            \n            interface\n            CheckoutForm\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/monitoring/src/lib/models/monitored-user.ts\n            \n            interface\n            MonitoredUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/monitoring/src/lib/models/monitoring-config.ts\n            \n            interface\n            MonitoringConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/monitoring/src/lib/models/monitoring-config.ts\n            \n            variable\n            MONITORING_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/monitoring/src/lib/monitoring.facade.ts\n            \n            injectable\n            MonitoringFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/monitoring/src/lib/providers/provide-monitoring.ts\n            \n            variable\n            provideMonitoring\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/components/navigation/navigation.animations.ts\n            \n            variable\n            animateBackdrop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/components/navigation/navigation.animations.ts\n            \n            variable\n            animateSlideOver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts\n            \n            component\n            UserNavigationComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/models/navigation-item.ts\n            \n            class\n            NavigationItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/models/navigation-item.ts\n            \n            class\n            RouteItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/util/provide-navigation.ts\n            \n            interface\n            NavigationConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/util/provide-navigation.ts\n            \n            variable\n            NAVIGATION_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/util/provide-navigation.ts\n            \n            variable\n            provideNavigation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/+state/order.store.ts\n            \n            variable\n            OrderStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/order/src/lib/components/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/order/src/lib/components/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/order/src/lib/components/shared/order-status/order-status.component.ts\n            \n            component\n            OrderStatusComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            columns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            companyData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            createDrawOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            paymentTerms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/company-data.ts\n            \n            type alias\n            CompanyData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/draw-options.ts\n            \n            type alias\n            DrawOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/order-filter.ts\n            \n            type alias\n            OrderFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/payment-terms.ts\n            \n            type alias\n            PaymentTerms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/pdf-table.columns.ts\n            \n            type alias\n            PdfColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/pdf-table.columns.ts\n            \n            type alias\n            PdfTableColumns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/order/src/lib/order.facade.ts\n            \n            injectable\n            OrderFacade\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/order.routes.ts\n            \n            variable\n            orderRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/order/src/lib/services/order-data.service.ts\n            \n            injectable\n            OrderDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/order/src/lib/services/print-invoice.service.ts\n            \n            injectable\n            PrintInvoiceService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        libs/product/src/lib/+state/product.store.ts\n            \n            variable\n            ProductStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/product/src/lib/components/product-detail/product-detail.component.ts\n            \n            component\n            ProductDetailComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/product/src/lib/components/product-list/product-list.component.ts\n            \n            component\n            ProductListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/product/src/lib/components/product-search/product-search.component.ts\n            \n            component\n            ProductSearchComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        libs/product/src/lib/models/product-filter.ts\n            \n            type alias\n            AllowedProductFilterTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/product/src/lib/models/product-filter.ts\n            \n            type alias\n            ProductFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/product/src/lib/product.facade.ts\n            \n            injectable\n            ProductFacade\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/product/src/lib/services/product-data.service.ts\n            \n            injectable\n            ProductDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/shared/src/lib/components/date-time/date-time.component.ts\n            \n            component\n            DateTimeComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/shared/src/lib/components/form-error/form-error.component.ts\n            \n            component\n            FormErrorComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                        libs/user/src/lib/+state/user.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/user/src/lib/+state/user.store.ts\n            \n            variable\n            UserStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/user/src/lib/+state/user.store.ts\n            \n            type alias\n            UserState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/user/src/lib/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 18.2.9\n        \n            @angular/build : 18.2.9\n        \n            @angular/common : 18.2.9\n        \n            @angular/compiler : 18.2.9\n        \n            @angular/core : 18.2.9\n        \n            @angular/forms : 18.2.9\n        \n            @angular/platform-browser : 18.2.9\n        \n            @angular/platform-browser-dynamic : 18.2.9\n        \n            @angular/router : 18.2.9\n        \n            @date-fns/utc : ^2.1.0\n        \n            @nestjs/common : ^10.0.2\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.2\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.2\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @ngrx/signals : 18.1.1\n        \n            @prisma/client : ^5.18.0\n        \n            @sentry/angular : ^8.41.0\n        \n            @sentry/cli : ^2.39.1\n        \n            @sentry/nestjs : ^8.38.0\n        \n            @sentry/profiling-node : ^8.38.0\n        \n            axios : ^1.6.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            date-fns : ^4.1.0\n        \n            helmet : ^8.0.0\n        \n            html2canvas : ^1.4.1\n        \n            jspdf : ^2.5.2\n        \n            keycloak-connect : ^26.0.0\n        \n            keycloak-js : 22.0.5\n        \n            nest-keycloak-connect : ^1.10.1\n        \n            prisma : ^5.18.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : 0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NavigationType   (libs/.../navigation-type.ts)\n                        \n                        \n                            OrderStatus   (libs/.../order-status.ts)\n                        \n                        \n                            PermissionStrategy   (libs/.../permission-strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/navigation/src/lib/enums/navigation-type.ts\n    \n        \n            \n                \n                    \n                        \n                        NavigationType\n                    \n                \n                        \n                            \n                                 ROUTE\n                            \n                        \n                        \n                            \n                                Value : ROUTE\n                            \n                        \n            \n        \n\n    libs/api/model/order-status.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                    \n                        \n                            Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n                        \n                    \n                        \n                            \n                                 Created\n                            \n                        \n                        \n                            \n                                Value : Created\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : Completed\n                            \n                        \n            \n        \n\n    libs/auth/src/lib/enums/permission-strategy.ts\n    \n        \n            \n                \n                    \n                        \n                        PermissionStrategy\n                    \n                \n                        \n                            \n                                 AUTHENTICATED\n                            \n                        \n                        \n                            \n                                Value : AUTHENTICATED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            withConfiguration   (apps/.../provide-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/frontend/src/app/providers/provide-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        withConfiguration\n                        \n                    \n                \n            \n            \n                \nwithConfiguration(configurationParameters: ConfigurationParameters)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                configurationParameters\n                                            \n                                                            ConfigurationParameters\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Configuration\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDemo shop public\nA full-stack e-commerce application built for educational purposes using modern web technologies.\nA more refined implementation of the API with ASP.NET Core can be found in this repository:\n\ngithub.com/christian-wandling/demo-shop-dotnet-api\n\nOverview\nBackend\n\nAPI Documentation - Complete API reference and backend architecture\n\nFrontend\n\nFrontend Documentation - Component structure and frontend architecture\nStorybook - Interactive UI component library and visual testing\n\nLibraries\n\nAuthentication - User authentication and authorization flows\nUser - User management\nProducts - Product catalog, categories, and search functionality\nShopping - Shopping cart implementation and session management\nOrder - Order processing, history, and management\nMonitoring - Application performance monitoring and logging\nNavigation - Site navigation components and routing\nShared - Common utilities and shared components\nOpenApiGenerator - API client generation tools and configurations\n\nTech Stack\nFrontend\n\nAngular - Progressive web framework\nTypeScript - Type-safe JavaScript\nNgRx - State Management\nHTML2Canvas/jsPDF - Pdf generation\nTailwind CSS - Styling\n\nBackend\n\nNestJS - Progressive Node.js framework\nNestJS Throttler - Rate limiting\nOpenAPI/Swagger - API documentation\nPrisma - Modern ORM for database access\nPostgreSQL - Relational database\n\nMonitoring\n\nSentry - Monitoring\n\nAuth\n\nKeycloak - Secure Authentication\n\nTesting\n\nJest - Unit testing\n\nDev workflow\n\nCommitlint/Commitizen - Standardize commit messages\nHusky - Pre-commit hooks\nESLint/Lint-staged - automatic linting\nPrettier - automatic code formating\n\nDevOps & Infrastructure\n\nNx - Mono-repo build system\nDocker - Containerization\nTerraform - Infrastructure as Code\nGithub CI/CD - Continuous Integration/Continuous Deployment\nAWS - Cloud hosting platform\n\nSetup\nPrerequisites\n\nNode.js 20 or later\nnpm or yarn\nDocker\n\nInstallation\n\nClone the repository\n\nExample :git clone https://github.com/christian-wandling/demo-shop-public.git\nInstall dependencies\n\nExample :npm install\nSet up environment variables\n\nExample :# Edit .env file with your configuration\ncp .env.example .env\nYou can choose to omit configuring sentry or see the section on setting up sentry\nKEYCLOAK_REALM_PUBLIC_KEY is needed by the api to validate tokens. It is dynamically created on keycloak server creation.\nTo retrieve it, follow the installation steps to build & run the docker containers\nNext access the keycloak server.\n\nExample :http://localhost:8080/admin/master/console/#/demo_shop/realm-settings/keys\nClick on the Public Key of RS256 and use its value in your .env file\n\n\n\n\nCreate shared docker network (or remove network from compose file)\n\nExample :docker network create shared\nGenerate prisma client\n\nExample :npm run prisma:generate\nPush the prisma schema to database\n\nExample :npm run prisma:migrate:dev\nBuild & Run the docker containers\n\nExample :# this will build and run docker containers for frontend, api, postgres, keycloak, pgadmin\nnpm start\nAccess the application\n\nExample :Frontend: http://localhost:4200\nAPI: http://localhost:3000\nSwagger Documentation: http://localhost:3000/api\nKeycloak: http://localhost:8080\nPgAdmin: http://localhost:80Usage\n\nOpen the web app\n\nExample :http://localhost:4200Sentry Setup\n\nGo to sentry.io to create an account and follow the steps to setup projects for frontend and api\n\nAdd configuration values to your .env file\n\nRun the sentry wizard to complete the setup\n\n\nExample :npx @sentry/wizard@latest -i sourcemaps --saasDotnet APi Integration\nAn equivalent API created with ASP.Net Core is available in the following repository:\n\ngithub.com/christian-wandling/demo-shop-dotnet-api\n\nTo use the API with this frontend, ensure both applications are running and connected via the shared Docker network.\nUser management\nUser registration via web app\n\nOpen the web app\n\nExample :http://localhost:4200\nClick Register and create the user\n\nUser creation via Keycloak admin console\n\nAccess the Keycloak server to add a user\n\nExample :http://localhost:8080/admin/master/console/#/demo_shop/users/add-user\nTo login use KEYCLOAK_ADMIN and KEYCLOAK_ADMIN_PASSWORD defined in your .env file.\n\nFill Email, First Name and Last name\n\nNavigate to the Credentials tab and use Set Password to create as password\n\nFill Password and Password Confirmation and deselect Temporary\n\n\nDatabase\nSeeding\nExample :npm run prisma:seedThe seed script will attempt to add entities to the database:\n\nproducts, if the product table is empty\nusers, if any user in the keycloak has not been added to the user table\norders, for any user that has no orders attached\n\n\nBrowse products\n\nSign in to access the shopping and order features\n\n\nAccess with Prisma Studio\nOpen prisma studio via console\nExample :prisma studioAccess with PgAdmin\n\nOpen PgAdmin in your browser\n\nExample :http://localhost:80\nEnter the password you set for PGADMIN_DEFAULT_PASSWORD in your .env file\n\nRegister new server. You can give it any name.\n\nIn the connection tab of the server use db for host and for username and password use the values of POSTGRES_USER and POSTGRES_PASSWORD in your .env file\n\n\nTesting\nTo run all tests in the project use\nExample :npm run testTo test an app or lib use\nExample :nx test Deployment\nThis repository includes a comprehensive CI/CD pipeline for deploying a fullstack application to AWS with Cloudflare for DNS management and CDN services.\nContinuous Integration\n\nPR Workflow: When a PR is created to main, a test build is created with unit tests, linting, SonarQube, and GitHub code checks\nMain Branch CI: On merge to main, test builds and checks run again\nVersioning: Successful main branch builds trigger the version workflow, which:\nUpdates the version number using semantic versioning determined from commit messages\nGenerates a changelog from commit messages\nCreates a new tag\n\n\n\nContinuous Deployment\n\nTrigger: New tag creation automatically triggers the CD workflow\n\nBuild Phase: Docker images are built for both frontend and API components\n\nInfrastructure Deployment:\n\nNetwork infrastructure is provisioned using Terraform\nEC2 instance with custom GitHub runner is deployed\n\n\nService Deployment via custom GitHub runner:\n\nRDS database\nEC2 instance for API\nEC2 instance for frontend\nEC2 instance for Keycloak\nS3 bucket for assets\n\n\nMonitoring: Sourcemaps are uploaded to Sentry for error tracking\n\nExternal Services\n\nCloudflare: Manages DNS, SSL/TLS, and CDN services\n\n\n\nPrerequisites\n\nGithub Setup\n\nGitHub repository access with proper permissions\nGitHub Actions secrets configured for AWS, Cloudflare, and Sentry credentials\nBranch protection rules for main branch\n\n\nAWS Requirements:\n\nAWS account with programmatic access\nIAM user with appropriate permissions for EC2, S3, RDS, VPC, etc.\nAWS credentials stored securely in GitHub Secrets\nPostgres and Keycloak credentials stored securely in AWS\n\n\nCloudflare Requirements:\n\nCloudflare account\nDomain added to Cloudflare\nAPI token with appropriate permissions\nCloudflare API token stored in GitHub Secrets\n\n\nSentry Requirements:\n\nSentry account and project\nAuth token for sourcemap uploads\nSentry credentials stored in GitHub Secrets\n\n\nSonarQube Requirements:\n\nSonarQube server or SonarCloud account\nProject setup in SonarQube/SonarCloud\nSonarQube credentials stored in GitHub Secrets\nsonar-project.properties file in repository root\n\n\n\nDiagram\nExample :flowchart TB\n    subgraph \"PR\"\n        A[PR Created] --> B[Test build, Unit Tests, Linting, Quality Gate]\n        B --> |On Success| C[Merge to Main]\n    end\n\n    subgraph \"CI\"\n        C[Merge to Main] --> D[Test Build, Unit Tests, Linting]\n        D --> |On Success| E[Trigger version]\n\n    end\n\n    subgraph \"Version Tag\"\n        E[CI Success] --> F[Update Version & Changelog]\n        F --> G[Create Tag]\n    end\n\n    subgraph \"CD\"\n        G[Tag vX.X.X] --> H[Build Docker Images]\n        H --> I[Deploy AWS Infrastructure]\n        I --> I1[Network]\n        I --> I2[EC2 with Custom Github Runner]\n        I --> J[Deploy Services]\n        J --> J1[RDS Database]\n        J --> J2[EC2 for API]\n        J --> J3[EC2 for Frontend]\n        J --> J4[EC2 for Keycloak]\n        J --> J5[S3 Bucket]\n        I --> K[Configure Cloudflare]\n        K --> K1[Cloudflare DNS]\n        K --> K2[Cloudflare SSL/TLS]\n        K --> K3[Cloudflare CDN]\n        K --> K4[Cloudflare Security Headers]\n        I --> M[Upload sourcemaps to Sentry]\n    end📜 License\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2025 Christian Wandling\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    33 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.3.23\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddCartItem401Response   (libs/.../add-cart-item401-response.ts)\n                        \n                        \n                            AllowedProductFilterTypes   (libs/.../product-filter.ts)\n                        \n                        \n                            AppState   (apps/.../app.store.ts)\n                        \n                        \n                            CartFilter   (libs/.../cart-filter.ts)\n                        \n                        \n                            CompanyData   (libs/.../company-data.ts)\n                        \n                        \n                            DataFormat   (libs/.../param.ts)\n                        \n                        \n                            DataType   (libs/.../param.ts)\n                        \n                        \n                            DrawOptions   (libs/.../draw-options.ts)\n                        \n                        \n                            OrderFilter   (libs/.../order-filter.ts)\n                        \n                        \n                            ParamLocation   (libs/.../param.ts)\n                        \n                        \n                            ParamStyle   (libs/.../param.ts)\n                        \n                        \n                            PaymentTerms   (libs/.../payment-terms.ts)\n                        \n                        \n                            PdfColumn   (libs/.../pdf-table.columns.ts)\n                        \n                        \n                            PdfTableColumns   (libs/.../pdf-table.columns.ts)\n                        \n                        \n                            ProductFilter   (libs/.../product-filter.ts)\n                        \n                        \n                            StandardDataFormat   (libs/.../param.ts)\n                        \n                        \n                            StandardDataType   (libs/.../param.ts)\n                        \n                        \n                            StandardParamStyle   (libs/.../param.ts)\n                        \n                        \n                            UserState   (libs/.../user.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/api/model/add-cart-item401-response.ts\n    \n    \n        \n            \n                \n                    \n                    AddCartItem401Response\n                \n            \n            \n                \n                        HttpValidationProblemDetails | ProblemDetails\n\n                \n            \n        \n    \n    libs/product/src/lib/models/product-filter.ts\n    \n    \n        \n            \n                \n                    \n                    AllowedProductFilterTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProductFilter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/frontend/src/app/+state/app.store.ts\n    \n    \n        \n            \n                \n                    \n                    AppState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/cart/src/lib/models/cart-filter.ts\n    \n    \n        \n            \n                \n                    \n                    CartFilter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/order/src/lib/models/company-data.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/api/param.ts\n    \n    \n        \n            \n                \n                    \n                    DataFormat\n                \n            \n            \n                \n                        StandardDataFormat | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataType\n                \n            \n            \n                \n                    Standard DataTypes plus your own types/classes.\n\n                \n            \n            \n                \n                        StandardDataType | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamLocation\n                \n            \n            \n                \n                    Standard parameter locations defined by OpenAPI spec\n\n                \n            \n            \n                \n                        \"query\" | \"header\" | \"path\" | \"cookie\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamStyle\n                \n            \n            \n                \n                    The OpenAPI standard StandardParamStyles may be extended by custom styles by the user.\n\n                \n            \n            \n                \n                            StandardParamStyle | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardDataFormat\n                \n            \n            \n                \n                    Standard formats as defined in OpenAPI Specification: Data Types\n\n                \n            \n            \n                \n                        \"int32\" | \"int64\" | \"float\" | \"double\" | \"byte\" | \"binary\" | \"date\" | \"date-time\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardDataType\n                \n            \n            \n                \n                    Standard types as defined in OpenAPI Specification: Data Types\n\n                \n            \n            \n                \n                        \"integer\" | \"number\" | \"boolean\" | \"string\" | \"object\" | \"array\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardParamStyle\n                \n            \n            \n                \n                    Standard parameter styles defined by OpenAPI spec\n\n                \n            \n            \n                \n                        \"matrix\" | \"label\" | \"form\" | \"simple\" | \"spaceDelimited\" | \"pipeDelimited\" | \"deepObject\"\n\n                \n            \n        \n    \n    libs/order/src/lib/models/draw-options.ts\n    \n    \n        \n            \n                \n                    \n                    DrawOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/order/src/lib/models/order-filter.ts\n    \n    \n        \n            \n                \n                    \n                    OrderFilter\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    libs/order/src/lib/models/payment-terms.ts\n    \n    \n        \n            \n                \n                    \n                    PaymentTerms\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/order/src/lib/models/pdf-table.columns.ts\n    \n    \n        \n            \n                \n                    \n                    PdfColumn\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PdfTableColumns\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/user/src/lib/+state/user.store.ts\n    \n    \n        \n            \n                \n                    \n                    UserState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            animateBackdrop   (libs/.../cart.animations.ts)\n                        \n                        \n                            animateBackdrop   (libs/.../navigation.animations.ts)\n                        \n                        \n                            animateSlideOver   (libs/.../cart.animations.ts)\n                        \n                        \n                            animateSlideOver   (libs/.../navigation.animations.ts)\n                        \n                        \n                            APIS   (libs/.../api.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            appRoutes   (apps/.../app.routes.ts)\n                        \n                        \n                            AppStore   (apps/.../app.store.ts)\n                        \n                        \n                            AUTH_CONFIG   (libs/.../auth-config.ts)\n                        \n                        \n                            authInterceptor   (libs/.../auth.interceptor.ts)\n                        \n                        \n                            BASE_PATH   (libs/.../variables.ts)\n                        \n                        \n                            CartStore   (libs/.../cart.store.ts)\n                        \n                        \n                            COLLECTION_FORMATS   (libs/.../variables.ts)\n                        \n                        \n                            columns   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            companyData   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            createDrawOptions   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            initialState   (apps/.../app.store.ts)\n                        \n                        \n                            initialState   (libs/.../cart.store.ts)\n                        \n                        \n                            initialState   (libs/.../user.store.ts)\n                        \n                        \n                            MONITORING_CONFIG   (libs/.../monitoring-config.ts)\n                        \n                        \n                            NAVIGATION_CONFIG   (libs/.../provide-navigation.ts)\n                        \n                        \n                            orderRoutes   (libs/.../order.routes.ts)\n                        \n                        \n                            OrderStore   (libs/.../order.store.ts)\n                        \n                        \n                            paymentTerms   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            permissionGuard   (libs/.../permission.guard.ts)\n                        \n                        \n                            ProductStore   (libs/.../product.store.ts)\n                        \n                        \n                            provideApi   (apps/.../provide-api.ts)\n                        \n                        \n                            provideAuth   (libs/.../provide-auth.ts)\n                        \n                        \n                            provideMonitoring   (libs/.../provide-monitoring.ts)\n                        \n                        \n                            provideNavigation   (libs/.../provide-navigation.ts)\n                        \n                        \n                            UserStore   (libs/.../user.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/cart/src/lib/components/cart/cart.animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        animateBackdrop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateBackdrop', [\n  transition(':enter', [style({ opacity: 0 }), animate('500ms ease-in-out', style({ opacity: 1 }))]),\n  transition(':leave', [animate('500ms ease-in-out', style({ opacity: 0 }))]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateSlideOver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateSlideOver', [\n  transition(':enter', [\n    style({ transform: 'translateX(100%)' }),\n    animate('700ms ease-in-out', style({ transform: 'translateX(0)' })),\n  ]),\n  transition(':leave', [animate('700ms ease-in-out', style({ transform: 'translateX(100%)' }))]),\n])\n                    \n                \n\n\n        \n    \n\n    libs/navigation/src/lib/components/navigation/navigation.animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        animateBackdrop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateBackdrop', [\n  transition(':enter', [style({ opacity: 0 }), animate('300ms linear', style({ opacity: 1 }))]),\n  transition(':leave', [style({ opacity: 1 }), animate('300ms linear', style({ opacity: 0 }))]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateSlideOver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateSlideOver', [\n  transition(':enter', [\n    style({ transform: 'translateX(-100%)' }),\n    animate('300ms ease-in-out', style({ transform: 'translateX(0)' })),\n  ]),\n  transition(':leave', [\n    style({ transform: 'translateX(0)' }),\n    animate('300ms ease-in-out', style({ transform: 'translateX(-100%)' })),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    libs/api/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APIS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [OrderApi, ProductApi, ShoppingSessionApi, UserApi]\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(withFetch(), withInterceptors([authInterceptor])),\n    provideRouter(appRoutes, withRouterConfig({ onSameUrlNavigation: 'reload' })),\n    provideAnimationsAsync(),\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\n    provideRouterStore(),\n    provideStore({\n      router: routerReducer,\n    }),\n    {\n      provide: RouteReuseStrategy,\n      useClass: NoReuseStrategy,\n    },\n    {\n      provide: ErrorHandler,\n      useValue: Sentry.createErrorHandler(),\n    },\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => () => undefined,\n      deps: [Sentry.TraceService],\n      multi: true,\n    },\n    provideApi(withConfiguration({ basePath: '' })),\n    provideAuth({ keycloak: environment.keycloak }),\n    provideMonitoring({ sentry: environment.sentry }),\n    provideNavigation({ routes: appRoutes }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '',\n    redirectTo: 'products',\n    pathMatch: 'full',\n  },\n  {\n    path: 'checkout',\n    component: CheckoutComponent,\n    data: { pageTitle: 'Checkout', showInMenu: false },\n  },\n  {\n    path: 'orders',\n    loadChildren: () => import('@demo-shop/order').then(m => m.orderRoutes),\n    data: { pageTitle: 'Orders', showInMenu: true },\n  },\n  {\n    path: 'products',\n    loadChildren: () => import('@demo-shop/product').then(m => m.productRoutes),\n    data: { pageTitle: 'Products', showInMenu: true },\n  },\n  {\n    path: '**',\n    redirectTo: 'products',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/+state/app.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withMethods(\n    (store, authFacade = inject(AuthFacade), cartFacade = inject(CartFacade), userFacade = inject(UserFacade)) => ({\n      async init(): Promise {\n        const authorized = await authFacade.authorize();\n\n        if (authorized) {\n          await userFacade.fetchCurrentUser();\n          await cartFacade.loadShoppingSession();\n        }\n\n        patchState(store, state => ({ ...state, initialized: true }));\n      },\n    })\n  ),\n  withHooks({\n    onInit({ init }) {\n      init();\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                \n                    \n                        Default value : {\n  initialized: false,\n}\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/models/auth-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AUTH_CONFIG')\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const authFacade = inject(AuthFacade);\n\n  if (!authFacade.isAuthenticated()) {\n    return next(req);\n  }\n\n  return next(\n    req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${authFacade.getToken()}`),\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n    libs/api/variables.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('basePath')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COLLECTION_FORMATS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  csv: ',',\n  tsv: '   ',\n  ssv: ' ',\n  pipes: '|',\n}\n                    \n                \n\n\n        \n    \n\n    libs/cart/src/lib/+state/cart.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CartStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withCallState(),\n  withDevtools('cart'),\n  withEntities(),\n  withComputed(store => ({\n    totalPrice: computed(() => store.entities().reduce((acc, curr) => acc + curr.totalPrice, 0)),\n    itemCount: computed(() => store.entities().reduce((acc, curr) => acc + curr.quantity, 0)),\n    hasShoppingSession: computed(() => !!store.shoppingSessionId()),\n  })),\n  withMethods((store, shoppingSessionApi = inject(ShoppingSessionApi)) => ({\n    async loadShoppingSession(): Promise {\n      const shoppingSession = await firstValueFrom(shoppingSessionApi.resolveCurrentShoppingSession());\n\n      patchState(store, setAllEntities(shoppingSession.items), { shoppingSessionId: shoppingSession.id });\n    },\n    async create(dto: AddCartItemRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.addCartItem(dto));\n      await this.loadShoppingSession();\n    },\n    async delete(id: number): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.removeCartItem(id));\n      await this.loadShoppingSession();\n    },\n    async update(id: number, entity: UpdateCartItemQuantityRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.updateCartItemQuantity(id, entity));\n      await this.loadShoppingSession();\n    },\n    getItemById(id: number): CartItemResponse | undefined {\n      return store.entityMap()[id];\n    },\n    getItemByProductId(productId: number): CartItemResponse | undefined {\n      return store.entities().find(item => item.productId === productId);\n    },\n    setShowCart(showCart: boolean): void {\n      patchState(store, { showCart });\n    },\n  }))\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalState\n\n                    \n                \n                \n                    \n                        Default value : { showCart: false, shoppingSessionId: null }\n                    \n                \n\n\n        \n    \n\n    libs/order/src/lib/config/print-invoice.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PdfTableColumns\n\n                    \n                \n                \n                    \n                        Default value : {\n  article: { label: 'Article', x: 15, width: 105 },\n  qty: { label: 'Qty', x: 125, width: 20 },\n  price: { label: 'Price', x: 165, width: 30 },\n  amount: { label: 'Amount', x: 195, width: 30 },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyData\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'Demo Shop',\n  address: '123 Business Street',\n  city: 'Business City',\n  zipCode: '12345',\n  phone: '(555) 123-4567',\n  email: 'company@example.com',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDrawOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (width: number, height: number, margin = 15): DrawOptions => ({\n  pointer: {\n    x: 0,\n    y: 0,\n  },\n  border: {\n    left: margin,\n    right: width - margin,\n    top: margin,\n    bottom: height - margin,\n  },\n  line: {\n    color: {\n      light: 200,\n    },\n  },\n  text: {\n    color: {\n      darker: 25,\n      dark: 50,\n      light: 125,\n      lighter: 150,\n    },\n    size: {\n      tiny: 6,\n      smaller: 8,\n      small: 9,\n      default: 10,\n    },\n    font: {\n      default: 'Helvetica',\n    },\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentTerms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentTerms\n\n                    \n                \n                \n                    \n                        Default value : {\n  terms: 'payment due within 30 days of invoice date',\n  bankName: 'First National Bank',\n  accountName: 'Demo Shop',\n  accountNumber: '1234567890',\n  routingNumber: '987654321',\n}\n                    \n                \n\n\n        \n    \n\n    libs/user/src/lib/+state/user.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: undefined,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withDevtools('currentUser'),\n  withMethods((store, userApi = inject(UserApi)) => ({\n    async fetchCurrentUser(): Promise {\n      const user = await firstValueFrom(userApi.resolveCurrentUser());\n      patchState(store, state => ({ ...state, user }));\n    },\n    async updateUserAddress(update: UpdateUserAddressRequest): Promise {\n      const address = await firstValueFrom(userApi.updateCurrentUserAddress(update));\n\n      patchState(store, state => {\n        if (!state.user) {\n          throw new Error('User not found');\n        }\n\n        return { ...state, user: { ...state.user, address } };\n      });\n    },\n    async updateUserPhone(update: UpdateUserPhoneRequest): Promise {\n      const res = await firstValueFrom(userApi.updateCurrentUserPhone(update));\n\n      patchState(store, state => {\n        if (!state.user) {\n          throw new Error('User not found');\n        }\n\n        return { ...state, user: { ...state.user, phone: res.phone } };\n      });\n    },\n  })),\n  withHooks({\n    onInit(store) {\n      const monitoringFacade = inject(MonitoringFacade);\n\n      effect(() => {\n        const { user } = getState(store);\n        monitoringFacade.setUser({ id: user?.id });\n      });\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n\n    libs/monitoring/src/lib/models/monitoring-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MONITORING_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('MONITORING_CONFIG')\n                    \n                \n\n\n        \n    \n\n    libs/navigation/src/lib/util/provide-navigation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NAVIGATION_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('NAVIGATION_CONFIG')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideNavigation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: { routes: Routes }): EnvironmentProviders => {\n  const routes = config.routes.filter(route => route.data?.['showInMenu']);\n\n  return makeEnvironmentProviders([\n    { provide: NAVIGATION_CONFIG, useValue: { routes } },\n  ]);\n}\n                    \n                \n\n\n        \n    \n\n    libs/order/src/lib/order.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        orderRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', component: OrderListComponent, canActivate: [permissionGuard] },\n  { path: ':id', component: OrderDetailComponent },\n]\n                    \n                \n\n\n        \n    \n\n    libs/order/src/lib/+state/order.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withCallState(),\n  withDevtools('orders'),\n  withEntities(),\n  withDataService({\n    dataServiceType: OrderDataService,\n    filter: {},\n  }),\n  withMethods((store, orderApi = inject(OrderApi)) => ({\n    async fetchById(id: number) {\n      const order = await firstValueFrom(orderApi.getOrderById(id));\n      patchState(store, addEntity(order));\n    },\n    getById(id: number) {\n      return computed(() => store.entityMap()[id]);\n    },\n    getSortedByStatusAndDate() {\n      return computed(() =>\n        store.entities().sort((a, b) => {\n          if (a.status === b.status) {\n            return a.created > b.created ? -1 : 1;\n          }\n\n          return a.status === OrderStatus.Created ? -1 : 1;\n        })\n      );\n    },\n  }))\n)\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/guards/permission.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        permissionGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const permissionService = inject(PermissionService);\n  const router = inject(Router);\n\n  if (permissionService.hasPermission(PermissionStrategy.AUTHENTICATED)) {\n    return true;\n  }\n\n  return router.createUrlTree(['/']);\n}\n                    \n                \n\n\n        \n    \n\n    libs/product/src/lib/+state/product.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withCallState(),\n  withDevtools('products'),\n  withEntities(),\n  withDataService({\n    dataServiceType: ProductDataService,\n    filter: {},\n  }),\n  withComputed(({ entities, filter }) => ({\n    filteredEntities: computed(() => {\n      const filterValues = Object.entries(filter());\n\n      if (filterValues.length === 0) {\n        return entities();\n      }\n\n      return entities().filter(entity =>\n        filterValues.every(([key, filterValue]) => {\n          const value = entity[key as AllowedProductFilterTypes];\n\n          if (Array.isArray(value)) {\n            return value.some(item => item.toLowerCase().includes(filterValue.toLowerCase()));\n          }\n\n          return value.toLowerCase().includes(filterValue.toLowerCase());\n        })\n      );\n    }),\n  })),\n  withMethods((store, productApi = inject(ProductApi)) => ({\n    async fetchById(id: number) {\n      const product = await firstValueFrom(productApi.getProductById(id));\n      patchState(store, addEntity(product));\n    },\n    getById(id: number) {\n      return computed(() => store.entityMap()[id]);\n    },\n  }))\n)\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/providers/provide-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: Configuration = withConfiguration()) => {\n  return makeEnvironmentProviders([{ provide: Configuration, useValue: config }]);\n}\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/providers/provide-auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: AuthConfig) => {\n  return makeEnvironmentProviders([{ provide: AUTH_CONFIG, useValue: config }]);\n}\n                    \n                \n\n\n        \n    \n\n    libs/monitoring/src/lib/providers/provide-monitoring.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideMonitoring\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: MonitoringConfig) => {\n  return makeEnvironmentProviders([{ provide: MONITORING_CONFIG, useValue: config }]);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
