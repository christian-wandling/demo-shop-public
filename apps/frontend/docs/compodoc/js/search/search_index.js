var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddCartItemRequest.html",[0,0.171,1,2.75]],["body/interfaces/AddCartItemRequest.html",[0,0.248,1,4.763,2,1.265,3,0.248,4,0.248,5,0.185,6,4.655,7,1.601,8,2.358,9,3.341,10,1.834,11,1.027,12,1.965,13,2.036,14,2.188,15,0.488,16,2.188,17,2.11,18,1.834,19,2.036,20,2.615,21,2.615,22,2.11,23,2.188,24,0.164,25,0.349,26,1.184,27,4.95,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011]],["title/interfaces/AdditionalState.html",[0,0.171,34,2.955]],["body/interfaces/AdditionalState.html",[0,0.167,1,3.684,2,0.849,3,0.167,4,0.167,5,0.124,11,0.689,24,0.11,25,0.27,27,2.508,28,1.495,29,0.25,30,0.013,31,0.167,32,0.008,33,0.008,34,4.529,35,3.124,36,6.366,37,4.923,38,2.792,39,2.904,40,0.901,41,3.966,42,4.764,43,3.459,44,3.459,45,3.966,46,3.459,47,4.764,48,3.966,49,2.508,50,3.124,51,3.124,52,4.88,53,1.149,54,0.82,55,3.966,56,4.764,57,3.966,58,3.532,59,3.959,60,3.455,61,1.858,62,2.874,63,2.366,64,2.401,65,3.124,66,2.242,67,2.874,68,1.582,69,1.468,70,3.459,71,3.459,72,3.459,73,2.675,74,4.764,75,4.303,76,4.764,77,3.459,78,3.259,79,3.459,80,3.459,81,3.459,82,5.872,83,3.459,84,3.124,85,3.449,86,3.124,87,3.449,88,3.459,89,3.831,90,3.459,91,4.764,92,3.459,93,3.459,94,3.459,95,3.728,96,2.401,97,5.449,98,4.529,99,4.214,100,1.939,101,3.459,102,4.922,103,3.459,104,3.459,105,3.459,106,3.959,107,3.459,108,3.459,109,2.798,110,1.695,111,3.459,112,3.459,113,3.459,114,2.874,115,3.124,116,1.468]],["title/interfaces/AddressResponse.html",[0,0.171,117,2.955]],["body/interfaces/AddressResponse.html",[0,0.222,2,1.13,3,0.222,4,0.222,5,0.165,10,1.638,11,0.917,12,1.756,13,1.819,14,1.955,15,0.455,16,1.955,17,1.885,18,1.638,19,1.819,20,2.441,21,2.441,22,1.885,23,1.955,24,0.147,25,0.326,26,1.105,29,0.361,30,0.013,31,0.222,32,0.01,33,0.01,38,2.98,117,4.777,118,4.604,119,2.277,120,5.077,121,4.762,122,5.077,123,5.077,124,4.762,125,5.077,126,2.143]],["title/modules/ApiModule.html",[127,3.556,128,3.212]],["body/modules/ApiModule.html",[3,0.213,4,0.213,5,0.158,15,0.349,26,1.182,29,0.231,30,0.013,31,0.213,32,0.01,33,0.01,40,0.945,54,1.046,95,3.829,96,2.465,110,1.57,116,1.873,128,5.839,129,3.985,130,5.059,131,1.325,132,5.597,133,5.059,134,6.419,135,0.848,136,5.059,137,1.37,138,0.879,139,6.419,140,3.666,141,1.239,142,7.05,143,7.05,144,6.419,145,3.797,146,5.055,147,3.2,148,2.018,149,4.412,150,4.412,151,5.055,152,2.859,153,3.985,154,4.412,155,5.059,156,6.419,157,6.419,158,5.059,159,5.059,160,5.059,161,5.059,162,6.419,163,3.985,164,3.985,165,5.059,166,5.059,167,3.666,168,5.059]],["title/components/AppComponent.html",[169,0.903,170,1.566]],["body/components/AppComponent.html",[3,0.178,4,0.178,5,0.132,7,1.546,11,0.992,15,0.292,24,0.118,25,0.282,30,0.013,31,0.178,32,0.009,33,0.009,40,0.892,53,1.225,54,0.875,69,2.113,135,0.957,138,0.992,148,2.277,169,1.43,170,2.657,171,2.193,172,1.753,173,1.753,174,1.753,175,3.688,176,1.687,177,2.366,178,2.366,179,3.422,180,2.577,181,2.366,182,1.833,183,6.461,184,2.657,185,2.657,186,2.366,187,5.708,188,2.366,189,5.708,190,1.949,191,1.654,192,5.448,193,6.298,194,1.307,195,1.18,196,5.708,197,4.229,198,5.708,199,4.229,200,1.753,201,1.9,202,4.229,203,3.065,204,4.229,205,1.687,206,2.366,207,2.366,208,1.753,209,2.867,210,1.753,211,1.753,212,3.251,213,1.753,214,1.625,215,1.753,216,1.625,217,1.753,218,1.566,219,1.753,220,1.625,221,1.268,222,1.753,223,1.625,224,1.457,225,1.753,226,1.753,227,1.566,228,1.75,229,2.366,230,1.566,231,2.366,232,1.625,233,1.753,234,1.625,235,2.148,236,1.625,237,1.625,238,1.753,239,1.625,240,1.185,241,1.625,242,1.753,243,1.753]],["title/interfaces/AuthConfig.html",[0,0.171,244,2.75]],["body/interfaces/AuthConfig.html",[0,0.249,2,1.268,3,0.249,4,0.249,5,0.185,24,0.165,25,0.35,29,0.346,30,0.013,31,0.297,32,0.011,33,0.011,40,0.732,54,1.225,64,2.276,96,2.276,126,1.915,244,4.77,245,4.667,246,4.293,247,4.954,248,3.462,249,4.667,250,5.925,251,5.925,252,5.925,253,4.293,254,5.167]],["title/injectables/AuthFacade.html",[255,1.033,256,2.579]],["body/injectables/AuthFacade.html",[3,0.179,4,0.179,5,0.133,15,0.294,24,0.118,25,0.283,26,0.713,29,0.194,30,0.013,31,0.179,32,0.009,33,0.009,39,2.989,40,0.856,53,1.232,54,0.879,68,1.696,69,1.574,85,4.129,87,3.967,89,3.55,109,2.934,110,2.15,126,1.45,131,1.5,135,1.316,137,1.151,138,0.739,141,1.865,190,1.952,191,2.008,194,1.311,195,1.185,255,1.45,256,3.623,257,1.763,258,3.707,259,4.674,260,4.674,261,6.932,262,6.044,263,4.995,264,6.932,265,5.023,266,5.459,267,5.023,268,4.252,269,4.252,270,4.995,271,4.576,272,6.044,273,4.252,274,4.252,275,4.252,276,4.252,277,4.252,278,4.995,279,4.252,280,4.995,281,4.252,282,4.252,283,3.707,284,3.349,285,4.252,286,4.252,287,4.252,288,4.252,289,4.252,290,3.707,291,3.349,292,4.252,293,4.252]],["title/components/CartComponent.html",[169,0.903,185,1.566]],["body/components/CartComponent.html",[3,0.143,4,0.143,5,0.107,7,1.883,15,0.236,24,0.095,25,0.243,26,0.572,28,1.151,29,0.156,30,0.013,31,0.143,32,0.008,33,0.008,37,4.503,40,0.859,52,4.173,53,0.989,54,0.706,73,4.503,78,2.932,98,4.566,100,1.059,116,2.333,131,1.287,135,1.202,137,0.924,138,1.001,141,1.203,148,1.96,169,1.275,170,1.311,171,1.888,172,1.415,173,1.415,174,1.415,176,1.362,177,2.038,178,2.038,179,3.33,180,1.362,181,2.038,182,1.578,184,1.311,185,2.42,186,2.038,188,2.038,190,2.08,191,1.424,194,1.529,195,1.381,200,1.415,201,1.533,205,1.362,206,2.038,207,2.038,208,1.415,209,2.612,210,1.415,211,1.415,212,3.187,213,1.415,214,1.311,215,1.415,216,2.42,217,1.415,218,1.264,219,1.415,220,1.311,221,1.023,222,1.415,223,1.311,224,1.176,225,1.415,226,1.415,227,1.264,228,1.56,229,2.038,230,1.264,231,2.038,232,1.311,233,1.415,234,1.311,235,1.915,236,1.311,237,1.311,238,1.415,239,1.311,240,0.956,241,1.311,242,1.415,243,1.415,294,2.976,295,2.484,296,3.255,297,3.884,298,4.915,299,4.915,300,3.385,301,5.76,302,3.255,303,6.301,304,3.561,305,3.413,306,3.871,307,3.413,308,3.108,309,3.413,310,4.286,311,3.413,312,4.286,313,3.413,314,4.915,315,3.413,316,4.286,317,3.413,318,1.415,319,2.688,320,2.976,321,2.473,322,2.976,323,3.561,324,3.561,325,3.413,326,2.976,327,2.976,328,3.413,329,4.286,330,4.915,331,3.871,332,2.932,333,4.286,334,4.915,335,4.915,336,4.249,337,4.915,338,3.413]],["title/injectables/CartFacade.html",[255,1.033,300,2.191]],["body/injectables/CartFacade.html",[3,0.143,4,0.143,5,0.106,8,2.508,11,0.851,15,0.235,24,0.094,25,0.242,26,1.054,27,3.099,28,1.549,29,0.287,30,0.013,31,0.143,32,0.008,33,0.008,37,2.292,39,2.478,40,0.823,53,0.985,54,0.703,58,1.921,59,4.557,61,1.592,62,2.463,63,2.028,64,2.207,67,4.557,68,1.356,69,1.258,84,3.859,85,3.557,86,4.953,87,3.221,89,2.943,95,2.028,96,1.306,100,1.52,102,2.677,110,2.068,115,3.859,116,2.712,131,1.283,135,1.322,137,1.703,138,1.093,141,1.879,190,1.954,191,2.012,194,1.315,195,1.188,255,1.241,257,1.409,300,2.633,304,3.551,306,3.859,336,4.24,339,2.964,340,3.977,341,4.9,342,5.483,343,6.289,344,6.289,345,6.289,346,6.289,347,4.9,348,4.9,349,4.9,350,3.399,351,3.399,352,3.399,353,4.852,354,3.399,355,3.399,356,3.399,357,3.399,358,3.399,359,3.399,360,3.399,361,4.9,362,3.751,363,3.399,364,4.9,365,3.399,366,3.859,367,3.399,368,3.399,369,3.399,370,1.741,371,3.399,372,3.399,373,3.399,374,3.399,375,3.399,376,4.9,377,4.526,378,4.163,379,3.399,380,3.399,381,3.399,382,3.399,383,3.399,384,3.399,385,3.399,386,3.399,387,2.964,388,2.463,389,3.399,390,3.399,391,2.964,392,2.964,393,3.399,394,2.964]],["title/components/CartIconComponent.html",[169,0.903,214,1.566]],["body/components/CartIconComponent.html",[3,0.171,4,0.171,5,0.127,7,2.129,15,0.28,24,0.113,25,0.274,30,0.013,31,0.171,32,0.009,33,0.009,37,4.585,40,0.781,53,1.176,54,0.839,116,2.055,131,1.454,135,1.061,138,0.965,141,0.994,148,2.214,169,1.4,170,1.559,171,2.132,172,1.683,173,1.683,174,1.683,176,1.619,177,2.301,178,2.301,179,3.405,180,1.619,181,2.301,182,1.783,184,1.559,185,1.559,186,2.301,188,2.301,190,1.925,191,1.608,194,1.271,195,1.148,200,1.683,205,1.619,206,2.301,207,2.301,208,1.683,209,2.819,210,1.683,211,1.683,212,3.263,213,1.683,214,2.612,215,1.683,216,1.559,217,1.683,218,1.503,219,1.683,220,1.559,221,1.217,222,1.683,223,1.559,224,1.398,225,1.683,226,1.683,227,1.503,228,1.713,229,2.301,230,1.503,231,2.301,232,1.559,233,1.683,234,1.559,235,2.103,236,1.559,237,1.559,238,1.683,239,1.559,240,1.137,241,1.559,242,1.683,243,1.683,295,2.728,300,3.654,302,3.137,308,3.511,318,1.683,319,3.197,395,5.93,396,5.93,397,3.54,398,5.551,399,5.551,400,5.551,401,7.121,402,4.059,403,4.059,404,5.551,405,4.059,406,4.059,407,4.84,408,5.551]],["title/interfaces/CartItemResponse.html",[0,0.171,58,2.305]],["body/interfaces/CartItemResponse.html",[0,0.221,2,1.125,3,0.221,4,0.221,5,0.164,8,2.097,10,1.631,11,0.913,12,1.748,13,1.811,14,1.946,15,0.454,16,1.946,17,1.877,18,1.631,19,1.811,20,2.434,21,2.434,22,1.877,23,1.946,24,0.146,25,0.325,27,4.754,28,1.679,29,0.366,30,0.013,31,0.221,32,0.01,33,0.01,58,3.716,73,5.069,100,2.332,119,2.267,126,1.999,362,4.485,409,4.584,410,6.555,411,6.555,412,6.555]],["title/components/CartItemsComponent.html",[169,0.903,216,1.566]],["body/components/CartItemsComponent.html",[3,0.166,4,0.166,5,0.123,7,2.061,8,2.169,11,0.685,15,0.272,24,0.11,25,0.269,30,0.013,31,0.166,32,0.008,33,0.008,40,0.829,54,0.815,58,2.227,61,1.846,135,1.044,138,0.945,148,2.169,169,1.379,170,1.514,171,2.089,172,1.634,173,1.634,174,1.634,176,1.572,177,2.255,178,2.255,179,3.393,180,1.572,181,2.255,182,1.747,184,1.514,185,1.514,186,2.255,188,2.255,190,1.631,194,0.902,195,0.815,200,1.634,201,1.77,205,1.572,206,2.255,207,2.255,208,1.634,209,2.784,210,1.634,211,1.634,212,3.251,213,1.634,214,1.514,215,1.634,216,2.58,217,1.634,218,1.459,219,1.634,220,1.514,221,1.181,222,1.634,223,1.514,224,1.357,225,1.634,226,1.634,227,1.459,228,1.687,229,2.255,230,1.459,231,2.255,232,1.514,233,1.634,234,1.514,235,2.071,236,1.514,237,1.514,238,1.634,239,1.514,240,1.104,241,1.514,242,1.634,243,1.634,295,2.686,296,3.52,297,4.2,302,4.22,304,5.106,318,1.634,321,4.866,332,3.245,377,4.284,413,5.856,414,3.436,415,5.439,416,5.439,417,5.439,418,5.439,419,3.941,420,3.941,421,2.657,422,5.439,423,3.667,424,5.439,425,4.742,426,4.742,427,4.284,428,4.742]],["title/interfaces/CheckoutAddressForm.html",[0,0.171,429,2.75]],["body/interfaces/CheckoutAddressForm.html",[0,0.279,2,1.14,3,0.224,4,0.224,5,0.167,24,0.148,25,0.328,29,0.362,30,0.013,31,0.279,32,0.01,33,0.01,40,0.658,120,5.093,121,4.776,122,5.093,123,5.093,124,4.776,125,5.093,429,4.47,430,4.195,431,4.195,432,7.442,433,5.221,434,3.368,435,3.591,436,3.859,437,3.859,438,3.177,439,2.728,440,2.862]],["title/components/CheckoutComponent.html",[169,0.903,218,1.51]],["body/components/CheckoutComponent.html",[3,0.093,4,0.093,5,0.069,7,0.959,11,0.768,15,0.153,24,0.062,25,0.175,26,0.372,28,0.884,29,0.101,30,0.013,31,0.093,32,0.005,33,0.005,40,0.836,52,3.658,53,0.643,54,0.459,61,1.04,64,1.939,78,1.324,85,3.012,87,2.585,89,2.265,95,1.324,96,0.852,100,0.688,110,1.566,116,1.311,120,2.981,121,2.796,122,2.981,123,1.496,124,2.796,125,2.981,131,0.928,135,1.253,137,0.601,138,1.072,141,1.44,148,1.413,169,0.979,170,0.852,171,1.361,172,0.92,173,0.92,174,0.92,176,0.885,177,1.469,178,1.469,179,3.099,180,0.885,181,1.469,182,2.296,184,0.852,185,0.852,186,1.469,188,1.469,190,2.109,191,1.857,194,1.584,195,1.499,200,0.92,201,0.997,205,0.885,206,1.469,207,1.469,208,0.92,209,2.093,210,0.92,211,0.92,212,2.955,213,0.92,214,0.852,215,0.92,216,1.939,217,0.92,218,1.869,219,0.92,220,0.852,221,0.665,222,0.92,223,1.939,224,1.22,225,0.92,226,0.92,227,0.822,228,1.494,229,1.469,230,0.822,231,1.469,232,0.852,233,0.92,234,0.852,235,1.47,236,0.852,237,0.852,238,0.92,239,0.852,240,1.414,241,0.852,242,0.92,243,0.92,295,1.907,300,2.712,302,2.499,304,2.567,306,2.79,308,2.24,310,1.935,312,3.089,316,3.089,318,0.92,319,1.748,320,1.935,321,1.608,322,1.935,327,1.935,331,2.79,332,2.113,333,3.089,336,4.322,353,4.053,387,1.935,391,1.935,392,1.935,394,1.935,429,1.496,433,1.748,434,1.404,435,3.404,436,1.608,437,1.608,438,2.638,439,2.825,440,2.712,441,1.935,442,4.422,443,3.543,444,3.543,445,4.422,446,3.658,447,2.853,448,4.422,449,4.422,450,4.345,451,4.422,452,5.048,453,5.048,454,5.048,455,5.048,456,2.219,457,2.219,458,2.219,459,2.219,460,2.219,461,2.219,462,2.219,463,3.543,464,2.219,465,2.567,466,2.219,467,2.389,468,2.219,469,3.543,470,2.219,471,3.543,472,2.219,473,3.543,474,2.219,475,2.219,476,2.219,477,3.543,478,3.543,479,2.219,480,2.567,481,2.219,482,1.748,483,2.219,484,6.774,485,2.219,486,1.608,487,2.24,488,2.219,489,1.748,490,2.219,491,2.219,492,2.219,493,2.219,494,2.219,495,2.219,496,2.219,497,3.543,498,4.422,499,2.219,500,4.422,501,6.607,502,6.409,503,2.219,504,2.219,505,2.219,506,2.219,507,2.219,508,2.219,509,2.219,510,2.219,511,2.219,512,2.219,513,3.543,514,3.543,515,2.219,516,3.543,517,3.543,518,2.219,519,3.089,520,2.389,521,3.089,522,3.543,523,3.543,524,3.543,525,3.543,526,2.79,527,3.543,528,3.543,529,3.089,530,2.389,531,3.543]],["title/interfaces/CheckoutForm.html",[0,0.171,435,2.75]],["body/interfaces/CheckoutForm.html",[0,0.28,2,1.152,3,0.226,4,0.226,5,0.168,24,0.15,25,0.33,26,1.119,29,0.356,30,0.013,31,0.28,32,0.01,33,0.01,40,0.665,120,3.631,121,3.406,122,3.631,123,3.631,124,3.406,125,3.631,429,3.631,430,4.242,431,4.242,432,7.407,433,5.972,434,3.406,435,4.501,436,5.494,437,5.494,438,4.523,439,3.884,440,4.074]],["title/classes/Configuration.html",[15,0.282,145,2.089]],["body/classes/Configuration.html",[0,0.078,3,0.078,4,0.078,5,0.058,10,1.212,15,0.128,18,1.212,19,0.638,24,0.051,25,0.151,26,1.24,29,0.369,30,0.013,31,0.129,32,0.005,33,0.005,38,0.768,39,2.166,40,0.378,49,1.172,64,1.929,66,1.729,78,1.825,96,0.712,109,3.644,110,2.179,126,2.062,131,0.801,135,1.178,137,1.73,138,0.94,140,2.832,141,1.401,145,2.572,147,1.172,152,3.782,164,2.41,167,2.832,182,0.983,191,1.132,194,0.7,195,1.237,221,1.506,224,1.346,248,1.497,520,3.06,532,1.172,533,1.459,534,3.956,535,3.956,536,3.06,537,5.271,538,3.956,539,3.288,540,3.06,541,3.574,542,3.288,543,3.06,544,3.06,545,3.06,546,3.06,547,3.06,548,1.249,549,2.668,550,3.387,551,3.06,552,5.216,553,4.596,554,4.711,555,1.853,556,4.716,557,1.853,558,1.853,559,3.408,560,3.408,561,3.408,562,3.078,563,3.408,564,3.408,565,3.078,566,3.078,567,3.408,568,2.832,569,3.408,570,3.408,571,3.408,572,3.288,573,1.853,574,4.716,575,3.408,576,2.331,577,2.472,578,3.288,579,3.408,580,2.832,581,2.832,582,3.06,583,1.853,584,3.408,585,3.408,586,2.472,587,1.853,588,1.853,589,1.853,590,2.668,591,4.132,592,1.853,593,2.668,594,1.853,595,2.41,596,3.956,597,5.944,598,3.919,599,2.668,600,4.146,601,2.668,602,2.668,603,2.668,604,2.668,605,2.668,606,2.668,607,2.41,608,2.668,609,1.853,610,2.698,611,2.668,612,1.853,613,3.956,614,5.216,615,3.288,616,6.447,617,2.564,618,3.956,619,3.288,620,4.334,621,4.716,622,3.574,623,2.668,624,2.038,625,3.288,626,3.288,627,5.216,628,3.956,629,3.956,630,2.668,631,1.853,632,1.343,633,1.616,634,3.574,635,1.616,636,1.616,637,1.616,638,1.616,639,1.616,640,1.616,641,3.956,642,1.616,643,1.343,644,1.616,645,1.616,646,1.616,647,1.343,648,1.616,649,2.668,650,2.668,651,1.616,652,2.668,653,2.668,654,1.343,655,1.616,656,2.668,657,2.217,658,2.668,659,1.616,660,1.616,661,2.668,662,1.616,663,1.616,664,1.616,665,1.616,666,1.616,667,1.616,668,1.616,669,2.668,670,1.616,671,1.616,672,1.616,673,1.616,674,1.616,675,1.459,676,1.616,677,1.459,678,1.616,679,1.616,680,1.616,681,1.616,682,1.459,683,1.616,684,2.668,685,1.172,686,1.172,687,1.616,688,2.063,689,1.343,690,1.343,691,1.616,692,1.616,693,1.616,694,1.616,695,1.616,696,1.459,697,1.616,698,1.616,699,1.616,700,3.408,701,1.343,702,1.616,703,1.616]],["title/interfaces/ConfigurationParameters.html",[0,0.171,550,2.75]],["body/interfaces/ConfigurationParameters.html",[0,0.091,2,0.465,3,0.091,4,0.091,5,0.068,15,0.15,18,1.353,19,0.749,24,0.06,25,0.172,26,1.259,29,0.363,30,0.013,31,0.146,32,0.005,33,0.005,38,0.901,39,2.354,40,0.43,49,1.375,64,2.097,66,1.228,78,2.078,96,0.835,109,3.522,110,2.207,126,2.065,137,1.478,140,3.614,141,0.853,145,1.785,147,1.375,152,2.819,164,2.744,167,3.16,182,0.698,191,0.63,194,0.998,195,1.315,221,1.637,224,1.502,248,2.441,520,2.349,533,1.712,534,4.76,535,4.76,536,3.681,537,5.603,538,4.76,539,3.956,540,3.681,541,4.3,542,3.956,549,1.895,550,2.94,552,5.546,553,4.637,554,5.01,556,5.08,559,3.802,560,3.802,561,3.802,562,3.434,563,3.802,564,3.802,565,3.434,566,3.434,567,3.802,568,3.16,569,3.802,570,3.802,571,3.802,572,3.614,574,5.08,575,3.802,576,2.601,577,2.203,578,3.614,579,3.802,580,3.16,581,3.16,582,3.681,584,3.802,585,3.802,586,2.758,590,1.895,591,4.102,593,1.895,595,1.712,596,3.038,597,5.336,598,3.16,599,1.895,600,3.614,601,1.895,602,1.895,603,1.895,604,1.895,605,1.895,606,1.895,607,1.712,608,1.895,610,2.68,611,1.895,613,3.038,614,4.349,615,2.525,616,5.869,617,1.969,618,3.038,619,2.525,620,3.614,621,3.802,622,2.744,623,1.895,624,1.565,625,2.525,626,2.525,627,4.349,628,3.038,629,3.038,630,1.895,632,2.525,633,3.038,634,3.929,635,1.895,636,1.895,637,1.895,638,1.895,639,1.895,640,1.895,641,4.349,642,1.895,643,1.575,644,1.895,645,1.895,646,1.895,647,1.575,648,1.895,649,3.038,650,3.038,651,1.895,652,3.038,653,3.038,654,1.575,655,1.895,656,3.038,657,2.525,658,3.038,659,1.895,660,1.895,661,3.038,662,1.895,663,1.895,664,1.895,665,1.895,666,1.895,667,1.895,668,1.895,669,3.038,670,1.895,671,1.895,672,1.895,673,1.895,674,1.895,675,1.712,676,1.895,677,1.712,678,1.895,679,1.895,680,1.895,681,1.895,682,1.712,683,1.895,684,3.038,685,1.375,686,1.375,687,1.895,688,2.349,689,1.575,690,1.575,691,1.895,692,1.895,693,1.895,694,1.895,695,1.895,696,1.712,697,1.895,698,1.895,699,1.895,700,3.802,701,1.575,702,1.895,703,1.895]],["title/classes/CustomHttpParameterCodec.html",[15,0.282,704,2.75]],["body/classes/CustomHttpParameterCodec.html",[3,0.207,4,0.207,5,0.154,10,1.525,15,0.339,24,0.137,26,1.23,29,0.335,30,0.013,31,0.207,32,0.01,33,0.01,40,0.607,110,2.276,126,2.138,131,1.65,135,1.23,137,1.987,138,1.275,141,1.796,147,3.109,532,3.109,582,5.114,704,4.249,705,4.286,706,4.566,707,6.302,708,6.302,709,3.561,710,6.302,711,6.302,712,6.302,713,6.302,714,6.302,715,4.916,716,4.566,717,6.302,718,4.916,719,6.302,720,6.302,721,4.916,722,6.302,723,4.916,724,4.916,725,4.916,726,4.916,727,4.916]],["title/components/DateTimeComponent.html",[169,0.903,220,1.566]],["body/components/DateTimeComponent.html",[3,0.16,4,0.16,5,0.119,7,1.436,15,0.262,24,0.106,25,0.262,29,0.279,30,0.013,31,0.16,32,0.008,33,0.008,40,0.655,54,0.786,135,1.024,138,0.921,148,2.115,169,1.352,170,1.459,171,2.037,172,1.575,173,1.575,174,1.575,176,1.515,177,2.198,178,2.198,179,3.378,180,1.515,181,2.198,182,1.703,184,1.459,185,1.459,186,2.198,188,2.198,190,2.006,194,1.398,195,1.263,200,1.575,205,1.515,206,2.198,207,2.198,208,1.575,209,2.74,210,1.575,211,1.575,212,3.235,213,1.575,214,1.459,215,1.575,216,1.459,217,1.575,218,1.406,219,1.575,220,2.539,221,2.419,222,1.575,223,1.459,224,1.308,225,1.575,226,1.575,227,1.406,228,1.654,229,2.198,230,1.406,231,2.198,232,1.459,233,1.575,234,1.459,235,2.031,236,1.459,237,1.459,238,1.575,239,1.459,240,1.064,241,1.459,242,1.575,243,1.575,295,2.634,318,1.575,419,3.842,421,2.561,565,5.206,688,3.575,689,3.842,728,5.764,729,5.764,730,3.312,731,5.302,732,5.302,733,6.954,734,7.392,735,7.392,736,6.445,737,3.799,738,6.61,739,5.302,740,4.623,741,4.623,742,3.799,743,5.302,744,3.799]],["title/components/FormErrorComponent.html",[169,0.903,223,1.566]],["body/components/FormErrorComponent.html",[3,0.164,4,0.164,5,0.122,7,1.461,15,0.373,24,0.108,25,0.267,29,0.247,30,0.013,31,0.164,32,0.008,33,0.008,40,0.764,54,0.806,135,0.905,138,1.161,148,2.153,163,4.25,169,1.37,170,1.497,171,2.073,172,1.615,173,1.615,174,1.615,176,1.554,177,2.237,178,2.237,179,3.388,180,1.554,181,2.237,182,1.733,184,1.497,185,1.497,186,2.237,188,2.237,190,1.901,194,1.235,195,1.116,200,1.615,205,1.554,206,2.237,207,2.237,208,1.615,209,2.771,210,1.615,211,1.615,212,3.246,213,1.615,214,1.497,215,1.615,216,1.497,217,1.615,218,1.442,219,1.615,220,1.497,221,1.168,222,1.615,223,2.567,224,2.654,225,1.615,226,1.615,227,1.442,228,1.677,229,2.237,230,1.442,231,2.237,232,1.497,233,1.615,234,1.497,235,2.059,236,1.497,237,1.497,238,1.615,239,1.497,240,1.091,241,1.497,242,1.615,243,1.615,295,2.67,318,1.615,419,3.91,421,2.627,434,2.464,438,3.219,736,6.119,745,5.398,746,5.398,747,3.397,748,3.219,749,5.397,750,5.397,751,5.085,752,7.018,753,3.896,754,3.91,755,4.25,756,5.397,757,3.896,758,5.397,759,3.896,760,3.639,761,3.397,762,3.896,763,3.896,764,3.896,765,3.397,766,3.896,767,5.397,768,3.896,769,3.896,770,3.896]],["title/interfaces/GetOrderByIdRequest.html",[0,0.171,771,3.212]],["body/interfaces/GetOrderByIdRequest.html",[0,0.248,2,1.265,3,0.248,4,0.248,5,0.185,9,3.341,10,1.834,11,1.027,12,1.965,13,2.036,14,2.188,15,0.488,16,2.188,17,2.11,18,1.834,19,2.036,20,2.615,21,2.615,22,2.11,23,2.188,24,0.164,25,0.349,26,1.184,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011,100,2.482,228,1.601,771,5.563,772,4.655]],["title/interfaces/GetProductByIdRequest.html",[0,0.171,773,3.212]],["body/interfaces/GetProductByIdRequest.html",[0,0.248,2,1.265,3,0.248,4,0.248,5,0.185,9,3.341,10,1.834,11,1.027,12,1.965,13,2.036,14,2.188,15,0.488,16,2.188,17,2.11,18,1.834,19,2.036,20,2.615,21,2.615,22,2.11,23,2.188,24,0.164,25,0.349,26,1.184,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011,100,2.482,235,1.965,772,4.655,773,5.563]],["title/interfaces/HttpValidationProblemDetails.html",[0,0.171,774,2.955]],["body/interfaces/HttpValidationProblemDetails.html",[0,0.199,2,1.011,3,0.199,4,0.199,5,0.148,10,1.466,11,0.821,12,1.571,13,1.627,14,1.749,15,0.424,16,1.749,17,1.686,18,1.466,19,1.627,20,2.274,21,2.274,22,1.686,23,1.749,24,0.131,25,0.304,26,1.373,28,1.364,29,0.374,30,0.013,31,0.199,32,0.01,33,0.01,38,3.441,126,2.102,135,0.792,248,3.006,610,3.667,624,2.122,751,5.236,755,4.837,774,4.45,775,5.355,776,4.45,777,3.423,778,4.57,779,5.236,780,4.873,781,5.691,782,3.721,783,3.721]],["title/interfaces/ImageResponse.html",[0,0.171,784,2.955]],["body/interfaces/ImageResponse.html",[0,0.245,2,1.249,3,0.245,4,0.245,5,0.183,10,1.812,11,1.015,12,1.942,13,2.012,14,2.162,15,0.484,16,2.162,17,2.085,18,1.812,19,2.012,20,2.596,21,2.596,22,2.085,23,2.162,24,0.162,25,0.347,29,0.321,30,0.013,31,0.245,32,0.011,33,0.011,119,2.518,126,2.05,138,1.355,784,5.081,785,5.092,786,7.796]],["title/injectables/KeycloakService.html",[255,1.033,259,2.75]],["body/injectables/KeycloakService.html",[3,0.189,4,0.189,5,0.141,15,0.31,24,0.125,25,0.294,29,0.206,30,0.013,31,0.189,32,0.009,33,0.009,39,1.939,40,0.823,53,1.303,54,0.93,68,1.793,69,1.664,85,3.412,87,4.017,89,2.303,96,2.284,109,2.303,110,2.35,126,1.139,131,1.557,135,1.315,141,1.736,182,1.444,190,1.983,191,1.93,194,1.361,195,1.23,244,4.492,247,4.886,253,3.258,255,1.506,257,1.864,259,4.009,262,3.92,265,5.137,266,5.583,267,5.137,595,4.683,654,5.137,787,3.92,788,5.946,789,4.827,790,5.809,791,4.496,792,4.496,793,4.496,794,4.496,795,5.946,796,4.496,797,5.946,798,4.496,799,4.496,800,4.496,801,4.496,802,3.92,803,4.496,804,3.258,805,4.496,806,4.496,807,4.496,808,4.496,809,4.496,810,4.496,811,5.946,812,4.496,813,4.496,814,4.496,815,4.496,816,4.496,817,4.496]],["title/interfaces/MonitoredUser.html",[0,0.171,818,2.955]],["body/interfaces/MonitoredUser.html",[0,0.26,2,1.326,3,0.26,4,0.26,5,0.194,24,0.172,25,0.359,26,1.218,28,1.54,29,0.283,30,0.013,31,0.26,32,0.011,33,0.011,100,2.466,818,5.264,819,5.404,820,5.404]],["title/interfaces/MonitoringConfig.html",[0,0.171,821,2.955]],["body/interfaces/MonitoringConfig.html",[0,0.249,2,1.268,3,0.249,4,0.249,5,0.185,24,0.165,25,0.35,29,0.346,30,0.013,31,0.297,32,0.011,33,0.011,39,2.555,40,0.732,54,1.225,64,2.276,96,2.276,126,1.791,246,4.293,248,3.462,249,4.667,821,5.126,822,4.667,823,5.676,824,5.167,825,5.167,826,5.925,827,4.293,828,5.167]],["title/injectables/MonitoringFacade.html",[255,1.033,829,2.955]],["body/injectables/MonitoringFacade.html",[3,0.221,4,0.221,5,0.165,15,0.364,24,0.146,25,0.326,26,0.883,29,0.241,30,0.013,31,0.221,32,0.01,33,0.01,40,0.929,53,1.526,54,1.09,64,2.024,68,2.101,69,1.95,110,1.634,116,2.437,131,1.724,135,1.104,137,1.427,138,0.915,141,1.29,190,1.881,194,1.206,195,1.09,240,2.012,255,1.667,257,2.184,804,5.452,818,5.452,823,3.817,824,5.741,825,5.741,827,3.817,829,4.771,830,4.594,831,6.584,832,6.584,833,5.268,834,6.584,835,5.268,836,5.268,837,4.594,838,5.268,839,5.268,840,5.268,841,5.268,842,5.268]],["title/components/NavigationComponent.html",[169,0.903,184,1.566]],["body/components/NavigationComponent.html",[3,0.135,4,0.135,5,0.101,7,1.274,8,2.22,11,1.064,12,1.565,15,0.325,24,0.155,25,0.233,26,0.539,29,0.215,30,0.013,31,0.135,32,0.007,33,0.007,40,0.924,53,0.931,54,0.665,116,1.742,126,1.409,131,1.232,135,1.18,137,0.87,138,0.967,141,0.787,148,1.877,169,1.232,170,1.235,171,1.807,172,1.332,173,1.332,174,1.332,176,1.282,177,1.95,178,1.95,179,3.302,180,1.282,181,1.95,182,1.511,184,2.353,185,1.235,186,1.95,188,1.95,190,2.096,191,1.974,194,1.559,195,1.409,200,1.332,201,1.444,203,2.329,205,1.282,206,1.95,207,1.95,208,1.332,209,2.539,210,1.332,211,1.332,212,3.159,213,1.332,214,2.353,215,1.332,216,1.235,217,1.332,218,1.19,219,1.332,220,1.235,221,0.964,222,1.332,223,1.235,224,1.107,225,1.332,226,1.332,227,1.19,228,1.507,229,1.95,230,1.19,231,1.95,232,1.235,233,1.332,234,1.235,235,1.851,236,1.235,237,2.353,238,1.332,239,2.353,240,1.318,241,2.138,242,1.332,243,1.332,295,2.4,296,3.145,297,3.753,318,1.332,323,3.409,324,3.409,326,2.803,329,4.103,353,2.033,423,3.173,446,4.439,465,3.409,489,2.531,748,2.807,843,2.803,844,4.103,845,4.103,846,4.439,847,3.654,848,5.685,849,6.52,850,5.566,851,4.705,852,4.705,853,3.214,854,4.705,855,4.705,856,3.214,857,3.409,858,3.214,859,3.214,860,4.705,861,3.52,862,3.214,863,4.705,864,3.214,865,4.705,866,3.214,867,3.214,868,2.167,869,2.329,870,2.803,871,3.214,872,3.214,873,2.531,874,3.214,875,2.531,876,2.329,877,3.214,878,3.214,879,2.803,880,2.531,881,6.126,882,4.705,883,4.103,884,4.103]],["title/interfaces/NavigationConfig.html",[0,0.171,885,3.212]],["body/interfaces/NavigationConfig.html",[0,0.233,2,1.187,3,0.233,4,0.233,5,0.173,24,0.154,25,0.336,29,0.253,30,0.013,31,0.309,32,0.011,33,0.011,40,0.839,54,1.147,64,2.823,96,2.13,110,1.72,153,4.368,201,2.491,249,4.368,804,4.018,885,5.353,886,4.368,887,4.368,888,7.298,889,5.926,890,5.926,891,5.353,892,4.836,893,4.368,894,4.836,895,4.836,896,4.836]],["title/classes/NavigationItem.html",[15,0.282,897,2.75]],["body/classes/NavigationItem.html",[3,0.189,4,0.189,5,0.141,11,0.783,15,0.411,24,0.125,25,0.294,26,1.237,28,1.474,29,0.376,30,0.013,31,0.25,32,0.009,33,0.009,40,0.735,126,1.957,135,1.27,137,1.22,138,0.783,152,4.622,190,1.858,228,2.093,248,3.263,271,4.665,532,2.849,548,4.496,586,2.849,632,4.314,861,4.792,868,4.783,869,3.264,897,4.496,898,6.087,899,3.548,900,4.974,901,5.211,902,6.739,903,4.314,904,3.928,905,5.953,906,4.014,907,4.505,908,4.505,909,4.505,910,4.505,911,3.264,912,3.928,913,3.928,914,3.928,915,3.037,916,3.928]],["title/injectables/NavigationService.html",[255,1.033,846,2.955]],["body/injectables/NavigationService.html",[3,0.191,4,0.191,5,0.142,8,1.814,11,0.79,15,0.314,24,0.126,25,0.296,26,0.762,29,0.338,30,0.013,31,0.191,32,0.009,33,0.009,40,0.879,53,1.317,54,0.94,64,2.301,68,1.814,69,1.683,96,2.735,110,1.411,131,1.569,135,1.123,137,1.231,138,0.79,141,1.113,190,1.99,191,2.144,194,1.371,195,1.239,255,1.517,256,4.503,257,1.885,271,4.503,284,4.718,846,4.34,848,5.841,861,2.875,868,4.989,869,3.295,870,3.965,897,4.989,911,3.295,915,4.801,917,3.965,918,5.99,919,5.99,920,4.547,921,4.718,922,4.547,923,5.99,924,5.99,925,3.788,926,5.99,927,5.99,928,4.039,929,5.223,930,4.547,931,4.547,932,5.99,933,4.547,934,4.547,935,4.547,936,4.547,937,4.547,938,4.547,939,4.547,940,3.581,941,4.547,942,4.547]],["title/classes/NoReuseStrategy.html",[15,0.282,943,2.955]],["body/classes/NoReuseStrategy.html",[3,0.208,4,0.208,5,0.155,15,0.341,24,0.137,26,0.829,29,0.226,30,0.013,31,0.208,32,0.01,33,0.01,38,2.892,39,3.352,40,0.611,66,3.942,75,5.494,110,2.357,116,2.342,131,1.657,135,1.274,137,1.339,138,0.859,141,1.861,201,2.222,532,3.128,709,3.575,943,4.584,944,6.777,945,6.777,946,3.895,947,6.082,948,6.411,949,7.352,950,7.352,951,6.326,952,5.791,953,4.946,954,6.975,955,4.946,956,4.946,957,6.326,958,7.902,959,4.946,960,4.946,961,4.946]],["title/injectables/OrderApi.html",[255,1.033,962,2.75]],["body/injectables/OrderApi.html",[3,0.062,4,0.062,5,0.046,7,0.399,10,0.783,15,0.102,24,0.041,25,0.125,26,1.087,28,1.27,29,0.343,30,0.013,31,0.062,32,0.004,33,0.004,38,2.247,39,3.304,40,0.699,53,0.427,54,0.305,63,0.88,64,1.272,66,2.718,68,0.588,69,0.546,95,1.976,96,2.083,100,2.135,109,3.525,110,1.756,126,1.763,131,0.661,135,1.106,137,1.639,138,1.08,141,1.437,145,3.38,146,3.787,147,0.933,152,4.313,182,0.811,191,1.393,194,1.01,195,1.505,221,0.993,228,1.062,240,1.099,248,3.28,255,0.64,257,0.611,370,0.756,536,3.958,539,2.842,542,1.83,548,1.703,572,2.842,576,0.88,577,0.933,582,2.233,591,2.631,598,3.484,600,4.254,610,3.252,615,1.83,617,2.217,619,1.83,624,0.663,643,1.069,647,1.069,657,2.842,685,0.933,686,0.933,701,1.83,704,1.703,716,1.83,754,2.842,760,2.645,789,2.842,901,5.079,903,2.842,906,4.869,928,2.645,962,1.703,963,5.844,964,0.995,965,2.888,966,2.202,967,2.202,968,6.213,969,6.356,970,1.286,971,2.202,972,2.202,973,6.247,974,1.475,975,2.202,976,1.475,977,3.922,978,6.568,979,1.475,980,3.922,981,3.922,982,3.922,983,3.922,984,6.428,985,3.089,986,2.34,987,6.192,988,5.653,989,3.592,990,4.193,991,3.42,992,3.42,993,3.42,994,3.42,995,3.42,996,1.475,997,1.475,998,1.475,999,3.922,1000,1.475,1001,1.475,1002,1.475,1003,1.475,1004,2.202,1005,1.475,1006,1.286,1007,2.888,1008,1.475,1009,1.286,1010,1.286,1011,5.542,1012,3.845,1013,3.845,1014,1.069,1015,1.286,1016,1.069,1017,1.069,1018,2.526,1019,0.834,1020,1.069,1021,1.069,1022,0.995,1023,1.286,1024,1.286,1025,2.202,1026,2.888,1027,1.286,1028,1.286,1029,1.286,1030,2.233,1031,3.42,1032,1.162,1033,1.286,1034,1.286,1035,2.202,1036,1.286,1037,1.069,1038,2.202,1039,1.286,1040,1.286,1041,1.286,1042,4.727,1043,5.119,1044,5.119,1045,5.119,1046,5.119,1047,4.193,1048,2.202,1049,5.418,1050,2.202,1051,1.83,1052,2.202,1053,2.202,1054,2.202,1055,4.727,1056,2.202,1057,4.727,1058,2.202,1059,5.119,1060,3.42,1061,2.202,1062,2.202,1063,2.202,1064,1.475,1065,2.202,1066,2.202,1067,2.202,1068,2.202,1069,1.83,1070,1.286,1071,1.286,1072,1.475,1073,1.162,1074,0.995,1075,0.995,1076,1.069]],["title/injectables/OrderDataService.html",[255,1.033,1077,2.955]],["body/injectables/OrderDataService.html",[3,0.17,4,0.17,5,0.127,11,0.703,15,0.279,24,0.112,25,0.274,26,1.231,28,1.262,29,0.336,30,0.013,31,0.17,32,0.009,33,0.009,40,0.878,49,2.559,50,3.187,51,3.187,53,1.172,54,0.837,61,1.895,62,2.932,63,2.414,64,1.554,68,1.614,69,1.498,85,3.762,87,4.096,89,2.072,100,1.255,106,5.154,110,2.278,131,1.45,135,1.261,137,1.989,138,1.276,141,1.798,190,1.654,191,1.605,194,0.926,195,0.837,255,1.402,257,1.677,370,4.124,388,2.932,530,3.734,709,2.287,962,4.579,1077,4.013,1078,6.676,1079,3.187,1080,4.362,1081,4.829,1082,4.829,1083,4.829,1084,4.829,1085,4.829,1086,4.046,1087,4.829,1088,4.046,1089,4.829,1090,5.349,1091,3.528,1092,4.013,1093,4.829,1094,4.046,1095,4.829,1096,4.046,1097,4.829,1098,4.046,1099,4.829,1100,3.528,1101,4.829,1102,4.046,1103,4.046,1104,4.046,1105,4.046,1106,5.506,1107,5.506,1108,5.506]],["title/components/OrderDetailComponent.html",[169,0.903,227,1.51]],["body/components/OrderDetailComponent.html",[3,0.115,4,0.115,5,0.086,7,1.131,8,1.666,11,0.88,15,0.189,24,0.076,25,0.207,26,0.46,29,0.125,30,0.013,31,0.115,32,0.006,33,0.006,40,0.871,53,0.794,54,0.567,61,1.284,109,2.593,110,0.85,114,4.102,116,2.096,131,1.094,135,1.154,137,0.742,138,0.88,141,1.023,148,1.666,169,1.12,170,1.053,171,1.605,172,1.136,173,1.136,174,1.136,176,1.094,177,1.732,178,1.732,179,3.221,180,1.094,181,1.732,182,1.342,184,1.053,185,1.053,186,1.732,188,1.732,190,2.048,191,1.994,194,1.47,195,1.328,200,1.136,201,1.231,205,1.094,206,1.732,207,1.732,208,1.136,209,2.347,210,1.136,211,1.136,212,3.077,213,1.136,214,1.053,215,1.136,216,1.053,217,1.136,218,1.015,219,1.136,220,2.174,221,0.822,222,1.136,223,1.053,224,0.944,225,1.136,226,1.136,227,2.096,228,2.13,229,1.732,230,1.015,231,1.732,232,2.174,233,1.136,234,1.053,235,1.683,236,1.053,237,1.053,238,1.136,239,1.053,240,2.077,241,1.053,242,1.136,243,1.136,295,2.183,296,2.861,318,1.136,331,3.29,332,3.83,340,3.58,366,3.29,370,2.899,377,3.29,423,2.817,425,3.643,426,3.643,427,3.29,447,3.199,467,2.817,480,3.027,482,2.159,486,1.986,709,2.361,778,2.642,1109,5.554,1110,6.148,1111,2.159,1112,3.413,1113,3.643,1114,3.643,1115,4.936,1116,4.102,1117,4.102,1118,4.178,1119,2.742,1120,4.178,1121,3.58,1122,2.742,1123,3.643,1124,2.39,1125,2.39,1126,4.178,1127,2.39,1128,2.39,1129,4.178,1130,2.742,1131,2.39,1132,2.39,1133,2.742,1134,2.742,1135,2.39,1136,1.986,1137,2.39,1138,2.742,1139,2.742,1140,2.39,1141,2.742,1142,4.178,1143,3.643,1144,3.643,1145,3.643,1146,3.643,1147,3.643,1148,3.643,1149,3.643,1150,3.643,1151,4.178,1152,4.178,1153,4.178,1154,4.178]],["title/injectables/OrderFacade.html",[255,1.033,340,2.579]],["body/injectables/OrderFacade.html",[3,0.193,4,0.193,5,0.144,11,0.799,15,0.318,24,0.128,25,0.298,26,1.129,28,1.523,29,0.308,30,0.013,31,0.193,32,0.009,33,0.009,40,0.832,53,1.332,54,0.951,61,2.154,68,1.834,69,1.702,100,1.872,110,2.09,116,2.822,131,1.58,135,1.302,137,1.824,138,1.171,141,1.866,190,1.764,191,1.749,194,1.053,195,0.951,228,1.245,255,1.528,257,1.906,340,3.817,342,6.236,353,4.912,370,3.663,1140,5.262,1155,4.01,1156,5.633,1157,4.373,1158,6.236,1159,5.262,1160,6.236,1161,6.035,1162,4.599,1163,4.599,1164,4.753,1165,4.599,1166,6.035,1167,4.599,1168,4.599,1169,4.599,1170,6.035,1171,4.599,1172,4.599,1173,4.599,1174,4.599,1175,4.599,1176,4.599,1177,4.599,1178,4.599]],["title/interfaces/OrderItemResponse.html",[0,0.171,1179,2.955]],["body/interfaces/OrderItemResponse.html",[0,0.225,2,1.147,3,0.225,4,0.225,5,0.168,8,2.139,10,1.663,11,0.932,12,1.783,13,1.847,14,1.985,15,0.46,16,1.985,17,1.914,18,1.663,19,1.847,20,2.464,21,2.464,22,1.914,23,1.985,24,0.149,25,0.329,27,4.788,28,1.665,29,0.363,30,0.013,31,0.225,32,0.01,33,0.01,73,5.105,119,2.312,126,2.009,362,4.516,410,6.601,411,6.601,412,6.601,1179,4.823,1180,3.615]],["title/components/OrderListComponent.html",[169,0.903,230,1.51]],["body/components/OrderListComponent.html",[3,0.126,4,0.126,5,0.094,7,1.212,8,1.785,11,0.778,15,0.207,24,0.191,25,0.221,28,0.6,29,0.137,30,0.013,31,0.126,32,0.007,33,0.007,40,0.85,53,0.87,54,0.621,114,3.242,116,1.112,131,1.172,135,1.114,138,0.778,141,0.735,148,1.785,169,1.184,170,1.154,171,1.719,172,1.245,173,1.245,174,1.245,176,1.198,177,1.855,178,1.855,179,3.268,180,1.198,181,1.855,182,1.437,184,1.154,185,1.154,186,1.855,188,1.855,190,2.037,191,1.717,194,1.451,195,1.311,200,1.245,201,1.349,205,1.198,206,1.855,207,1.855,208,1.245,209,2.457,210,1.245,211,1.245,212,3.125,213,1.245,214,1.154,215,1.245,216,1.154,217,1.245,218,1.112,219,1.245,220,2.277,221,0.9,222,1.245,223,1.154,224,1.034,225,1.245,226,1.245,227,1.112,228,2.07,229,1.855,230,2.194,231,1.855,232,2.277,233,1.245,234,1.154,235,1.779,236,1.154,237,1.154,238,1.245,239,1.154,240,1.862,241,1.154,242,1.245,243,1.245,295,2.307,296,3.023,297,3.607,318,1.245,332,2.669,340,3.748,366,3.524,378,3.242,423,3.997,447,3.35,467,3.017,480,3.242,482,2.365,486,2.176,709,2.529,928,4.274,1019,2.529,1109,5.423,1112,3.607,1117,4.295,1132,2.619,1135,2.619,1136,2.176,1137,2.619,1143,3.902,1144,3.902,1145,3.902,1146,3.902,1147,3.902,1148,3.902,1149,3.902,1150,3.902,1181,6.003,1182,2.365,1183,3.902,1184,3.902,1185,6.885,1186,3.003,1187,2.619,1188,2.619,1189,3.902,1190,2.619,1191,4.475,1192,3.003,1193,3.003,1194,3.003,1195,5.168,1196,4.475,1197,6.646,1198,4.475]],["title/interfaces/OrderListResponse.html",[0,0.171,1017,2.955]],["body/interfaces/OrderListResponse.html",[0,0.257,2,1.309,3,0.257,4,0.257,5,0.191,24,0.17,25,0.357,29,0.28,30,0.013,31,0.257,32,0.011,33,0.011,40,0.756,119,2.639,228,1.657,302,4.474,370,3.134,624,3.444,989,3.459,1017,5.225,1019,3.459,1180,4.127]],["title/interfaces/OrderResponse.html",[0,0.171,370,2.089]],["body/interfaces/OrderResponse.html",[0,0.228,2,1.16,3,0.228,4,0.228,5,0.17,8,2.163,24,0.151,25,0.331,28,1.641,29,0.364,30,0.013,31,0.228,32,0.01,33,0.01,40,0.827,100,2.358,119,2.338,126,1.842,228,1.815,302,4.295,370,3.433,624,3.268,780,5.266,989,3.064,1179,3.928,1180,3.656,1199,6.627,1200,5.507,1201,6.627,1202,5.986]],["title/components/OrderStatusComponent.html",[169,0.903,232,1.566]],["body/components/OrderStatusComponent.html",[3,0.169,4,0.169,5,0.126,7,1.496,11,0.701,15,0.382,24,0.112,25,0.273,30,0.013,31,0.169,32,0.009,33,0.009,40,0.778,54,0.834,61,1.889,135,0.926,138,0.96,148,2.204,169,1.395,170,1.549,171,2.123,172,1.672,173,1.672,174,1.672,176,1.608,177,2.291,178,2.291,179,3.403,180,1.608,181,2.291,182,2.024,184,1.549,185,1.549,186,2.291,188,2.291,190,1.651,200,1.672,205,1.608,206,2.291,207,2.291,208,1.672,209,2.811,210,1.672,211,1.672,212,3.261,213,1.672,214,1.549,215,1.672,216,1.549,217,1.672,218,1.493,219,1.672,220,1.549,221,1.209,222,1.672,223,1.549,224,1.389,225,1.672,226,1.672,227,1.493,228,2.102,229,2.291,230,1.493,231,2.291,232,2.605,233,1.672,234,1.549,235,2.096,236,1.549,237,1.549,238,1.672,239,1.549,240,1.129,241,1.549,242,1.672,243,1.672,295,2.719,318,1.672,419,2.922,421,2.719,748,3.296,760,4.251,761,3.516,765,3.516,780,5.233,876,2.922,883,4.818,1136,4.568,1200,2.922,1202,3.176,1203,5.497,1204,3.516,1205,5.526,1206,5.526,1207,5.526,1208,5.526,1209,4.032,1210,4.032,1211,4.032,1212,3.516,1213,4.032,1214,4.032,1215,4.032,1216,4.032,1217,4.032,1218,3.516,1219,4.818,1220,4.032,1221,4.032,1222,5.526,1223,4.032,1224,4.032,1225,5.526,1226,3.516,1227,4.032,1228,4.032]],["title/interfaces/Param.html",[0,0.171,591,2.433]],["body/interfaces/Param.html",[0,0.174,2,0.888,3,0.174,4,0.174,5,0.13,10,1.287,18,2.129,24,0.115,25,0.279,28,0.829,29,0.369,30,0.013,31,0.324,32,0.009,33,0.009,39,2.96,109,3.277,126,1.917,135,1.073,138,1.193,195,1.419,221,1.689,224,1.429,240,1.162,291,3.268,540,2.798,568,5.2,576,2.475,577,4.046,578,3.007,586,2.624,591,3.361,624,1.864,625,4.636,634,4.438,685,2.624,686,4.34,688,2.798,690,3.007,706,3.007,900,2.798,986,3.361,1030,2.798,1051,3.007,1073,5.405,1074,5.194,1075,5.194,1076,3.007,1229,3.268,1230,5.635,1231,5.405,1232,5.405,1233,4.438,1234,3.618,1235,3.618,1236,3.618,1237,3.618,1238,4.15,1239,3.618,1240,3.618,1241,3.618,1242,3.618,1243,4.913,1244,4.438,1245,3.618,1246,4.15,1247,3.618,1248,3.618,1249,4.438,1250,3.618,1251,3.618,1252,3.618,1253,3.618,1254,3.618]],["title/injectables/PermissionService.html",[255,1.033,260,2.75]],["body/injectables/PermissionService.html",[3,0.209,4,0.209,5,0.155,15,0.343,24,0.138,25,0.314,26,0.833,29,0.227,30,0.013,31,0.209,32,0.01,33,0.01,39,3.014,40,0.863,53,1.439,54,1.027,64,1.908,66,2.807,68,1.981,69,1.838,110,1.968,131,1.661,135,1.172,137,1.345,138,0.863,141,1.216,190,2.038,191,1.838,194,1.452,195,1.312,255,1.606,257,2.059,259,4.965,260,4.277,263,5.531,270,5.531,271,4.921,272,6.421,278,5.531,283,4.33,284,3.911,290,5.531,291,4.996,610,2.668,929,5.531,1255,4.33,1256,6.989,1257,4.966,1258,4.966,1259,4.966,1260,4.966,1261,6.343,1262,4.966,1263,4.966]],["title/injectables/PrintInvoiceService.html",[255,1.033,1116,2.955]],["body/injectables/PrintInvoiceService.html",[3,0.084,4,0.084,5,0.063,11,0.349,15,0.139,24,0.056,26,1.126,28,0.401,29,0.307,30,0.013,31,0.084,32,0.005,33,0.005,40,0.788,54,0.415,61,0.94,64,2.371,68,0.8,69,0.743,96,0.771,116,2.736,131,0.855,135,1.126,137,1.819,138,1.19,141,1.644,182,0.644,221,0.979,228,1.887,240,1.659,255,0.827,257,0.832,370,3.569,689,1.454,740,1.749,741,1.749,901,5.423,986,1.948,1116,2.366,1121,3.745,1195,1.749,1212,5.973,1218,4.151,1264,5.973,1265,1.749,1266,3.266,1267,3.266,1268,3.266,1269,3.266,1270,3.266,1271,3.266,1272,3.266,1273,3.266,1274,3.266,1275,4.13,1276,3.266,1277,3.266,1278,6.922,1279,5.864,1280,4.625,1281,2.006,1282,6.85,1283,3.266,1284,2.006,1285,3.266,1286,5.575,1287,2.006,1288,3.266,1289,2.006,1290,3.266,1291,2.006,1292,3.266,1293,2.006,1294,3.266,1295,2.006,1296,3.266,1297,5.487,1298,4.755,1299,2.006,1300,3.266,1301,2.006,1302,2.006,1303,2.006,1304,3.266,1305,2.006,1306,2.006,1307,2.006,1308,2.006,1309,1.749,1310,2.006,1311,2.006,1312,2.006,1313,1.58,1314,2.006,1315,2.006,1316,2.006,1317,3.266,1318,2.006,1319,2.006,1320,2.006,1321,3.266,1322,2.006,1323,2.006,1324,2.006,1325,2.006,1326,2.006,1327,2.006,1328,2.006,1329,2.006,1330,2.006,1331,7.322,1332,3.266,1333,8.21,1334,3.266,1335,2.848,1336,2.848,1337,2.848,1338,2.006,1339,2.006,1340,2.006,1341,3.266,1342,4.424,1343,4.76,1344,5.617,1345,2.006,1346,2.006,1347,2.006,1348,6.385,1349,6.075,1350,5.617,1351,2.006,1352,2.006,1353,2.006,1354,2.006,1355,2.006,1356,1.749,1357,2.006,1358,2.006,1359,2.006,1360,1.353,1361,5.921,1362,2.006,1363,2.006,1364,2.006,1365,2.006,1366,2.006,1367,2.006,1368,2.006,1369,2.006,1370,2.006,1371,1.353,1372,4.76,1373,2.006,1374,2.006,1375,3.266,1376,4.76,1377,4.151,1378,2.006,1379,3.266,1380,2.006,1381,4.13,1382,2.006,1383,4.13,1384,3.266,1385,3.266,1386,2.006,1387,3.266,1388,2.006,1389,2.006,1390,2.006,1391,2.006,1392,2.006,1393,2.006,1394,2.006,1395,2.006,1396,2.006,1397,2.006,1398,4.13,1399,2.006,1400,2.006,1401,4.569,1402,2.006,1403,2.006,1404,2.006,1405,2.006,1406,2.006,1407,1.749,1408,2.006,1409,2.848,1410,2.006,1411,2.006,1412,1.749,1413,2.006,1414,2.006,1415,2.006,1416,2.006]],["title/interfaces/ProblemDetails.html",[0,0.171,1417,2.955]],["body/interfaces/ProblemDetails.html",[0,0.207,2,1.054,3,0.207,4,0.207,5,0.154,10,1.528,11,0.856,12,1.638,13,1.697,14,1.823,15,0.436,16,1.823,17,1.758,18,1.528,19,1.697,20,2.336,21,2.336,22,1.758,23,1.823,24,0.137,25,0.312,26,1.365,28,1.391,29,0.369,30,0.013,31,0.207,32,0.01,33,0.01,38,3.458,126,2.105,135,0.826,610,3.39,777,3.569,778,4.643,779,5.319,780,4.95,781,5.782,782,3.88,783,3.88,1417,4.572,1418,5.502]],["title/injectables/ProductApi.html",[255,1.033,1419,2.75]],["body/injectables/ProductApi.html",[3,0.063,4,0.063,5,0.047,7,0.405,10,0.793,15,0.103,24,0.042,25,0.126,26,1.092,28,1.276,29,0.343,30,0.013,31,0.063,32,0.004,33,0.004,38,2.261,39,3.311,40,0.729,53,0.433,54,0.309,63,0.892,64,1.285,66,2.738,68,0.596,69,0.553,95,1.996,96,2.095,100,2.02,109,3.538,110,1.767,126,1.769,131,0.669,135,1.111,137,1.647,138,1.085,141,1.445,145,3.393,146,3.815,147,0.946,152,4.322,182,0.82,191,1.404,194,1.018,195,1.509,221,1.003,248,3.293,255,0.647,257,0.62,536,3.979,539,2.868,542,1.851,548,1.723,576,0.892,577,0.946,581,1.083,582,2.256,591,2.652,598,3.51,600,4.276,610,3.268,615,1.851,617,2.237,619,1.851,624,0.672,643,1.083,647,1.083,657,2.868,685,0.946,686,0.946,701,1.851,704,1.723,716,1.851,754,2.868,760,2.669,776,1.083,901,5.091,903,2.868,906,4.883,925,3.45,964,1.008,965,2.917,966,2.228,967,2.228,970,1.304,971,1.304,972,2.228,973,6.265,975,2.228,978,6.583,984,6.445,985,3.117,986,2.361,987,6.212,988,5.677,989,3.608,990,4.224,991,3.451,992,3.451,993,3.451,994,3.451,995,3.451,1004,2.228,1006,1.304,1007,2.917,1009,1.304,1010,1.304,1011,5.567,1012,4.224,1013,4.224,1014,1.083,1015,1.304,1016,1.083,1019,0.845,1020,1.083,1021,1.083,1022,1.008,1023,1.304,1024,1.304,1025,2.228,1026,2.917,1027,1.304,1028,1.304,1029,1.304,1030,2.256,1031,3.451,1032,1.178,1033,1.304,1034,1.304,1035,2.228,1036,1.304,1037,1.083,1038,2.228,1039,1.304,1040,1.304,1041,1.304,1042,4.757,1043,5.146,1044,5.146,1045,5.146,1046,5.146,1047,4.224,1048,2.228,1049,5.443,1050,2.228,1051,1.851,1052,2.228,1053,2.228,1054,2.228,1055,4.757,1056,2.228,1057,4.757,1058,2.228,1059,5.146,1060,3.451,1061,2.228,1062,2.228,1063,2.228,1065,2.228,1066,2.228,1067,2.228,1068,2.228,1069,1.851,1070,1.304,1071,1.304,1073,1.178,1074,1.008,1075,1.008,1076,1.083,1419,1.723,1420,5.866,1421,6.243,1422,6.384,1423,2.555,1424,1.495,1425,1.495,1426,3.958,1427,1.495,1428,1.495,1429,1.495,1430,1.495,1431,3.958,1432,1.495,1433,1.495,1434,1.495,1435,1.495,1436,1.495,1437,1.083,1438,2.555,1439,0.892,1440,1.083,1441,1.495,1442,1.495,1443,1.495]],["title/injectables/ProductDataService.html",[255,1.033,1444,2.955]],["body/injectables/ProductDataService.html",[3,0.17,4,0.17,5,0.127,11,0.704,15,0.28,24,0.113,25,0.274,26,1.232,28,1.263,29,0.336,30,0.013,31,0.17,32,0.009,33,0.009,40,0.879,49,2.563,50,3.192,51,3.192,53,1.174,54,0.838,61,1.899,62,2.937,63,2.418,64,1.557,68,1.616,69,1.5,85,3.237,87,4.097,89,2.076,100,1.257,106,4.924,110,2.28,131,1.452,135,1.261,137,1.99,138,1.277,141,1.799,190,1.655,191,1.607,194,0.928,195,0.838,255,1.404,257,1.68,388,2.937,530,3.739,709,2.29,1079,3.192,1080,4.367,1081,4.835,1082,4.835,1083,4.835,1084,4.835,1085,4.835,1087,4.835,1089,4.835,1091,3.534,1092,4.018,1093,4.835,1095,4.835,1097,4.835,1100,3.534,1101,4.835,1106,5.926,1107,5.926,1108,5.926,1419,4.582,1439,4.804,1444,4.018,1445,6.679,1446,4.053,1447,4.053,1448,4.582,1449,4.053,1450,4.053,1451,4.053,1452,4.835,1453,3.534,1454,4.053,1455,4.053,1456,4.053]],["title/components/ProductDetailComponent.html",[169,0.903,234,1.566]],["body/components/ProductDetailComponent.html",[3,0.142,4,0.142,5,0.105,7,1.696,11,0.586,15,0.336,24,0.094,25,0.241,26,0.565,28,1.143,29,0.154,30,0.013,31,0.142,32,0.008,33,0.008,40,0.82,53,0.977,54,0.697,100,1.046,116,2.117,131,1.275,135,1.197,137,0.913,138,0.994,141,1.193,148,1.943,169,1.266,170,1.295,171,1.871,172,1.397,173,1.397,174,1.397,176,1.344,177,2.019,178,2.019,179,3.324,180,1.344,181,2.019,182,1.564,184,1.295,185,1.295,186,2.019,188,2.019,190,2.076,191,2.006,194,1.521,195,1.374,200,1.397,201,1.514,203,2.442,205,1.344,206,2.019,207,2.019,208,1.397,209,2.597,210,1.397,211,1.397,212,3.182,213,1.397,214,1.295,215,1.397,216,1.295,217,1.397,218,1.248,219,1.397,220,1.295,221,1.01,222,1.397,223,1.295,224,1.161,225,1.397,226,1.397,227,1.248,228,1.549,229,2.019,230,1.248,231,2.019,232,1.295,233,1.397,234,2.406,235,2.652,236,1.295,237,1.295,238,1.397,239,1.295,240,0.944,241,1.295,242,1.397,243,1.397,295,2.466,296,3.232,300,3.366,308,3.08,318,1.397,332,2.905,519,4.247,709,2.753,748,2.905,778,3.08,847,3.737,857,3.529,875,2.655,876,2.442,1111,2.655,1112,3.856,1113,4.247,1114,4.247,1115,5.462,1117,4.539,1123,4.247,1124,2.939,1125,2.939,1127,2.939,1128,2.939,1131,2.939,1157,3.529,1457,5.297,1458,6.374,1459,5.719,1460,4.871,1461,4.871,1462,3.371,1463,3.371,1464,4.871,1465,4.871,1466,2.655,1467,3.371,1468,3.371,1469,4.871,1470,4.871,1471,4.871]],["title/injectables/ProductFacade.html",[255,1.033,847,2.433]],["body/injectables/ProductFacade.html",[3,0.191,4,0.191,5,0.142,11,0.79,15,0.314,24,0.126,25,0.296,26,1.123,28,1.518,29,0.306,30,0.013,31,0.191,32,0.009,33,0.009,40,0.879,53,1.317,54,0.94,61,2.13,68,1.814,69,1.683,100,1.858,110,2.078,116,2.813,131,1.569,135,1.299,137,1.814,138,1.164,141,1.86,190,1.754,191,1.736,194,1.041,195,0.94,255,1.517,257,1.885,353,4.899,847,3.573,952,5.276,1092,4.34,1158,6.208,1159,5.223,1164,4.718,1439,2.712,1448,4.801,1453,3.965,1472,3.965,1473,5.99,1474,7.12,1475,7.12,1476,5.99,1477,4.547,1478,4.547,1479,5.223,1480,4.547,1481,4.547,1482,4.547,1483,5.99,1484,4.547,1485,5.99,1486,4.547,1487,3.581,1488,4.547,1489,4.547,1490,4.547,1491,4.547,1492,4.547,1493,4.547,1494,4.547]],["title/components/ProductListComponent.html",[169,0.903,236,1.566]],["body/components/ProductListComponent.html",[3,0.16,4,0.16,5,0.119,7,1.441,15,0.367,24,0.106,25,0.263,30,0.013,31,0.16,32,0.008,33,0.008,40,0.818,53,1.106,54,0.789,116,1.413,131,1.393,135,1.027,138,0.924,141,0.935,148,2.122,169,1.355,170,1.466,171,2.043,172,1.582,173,1.582,174,1.582,176,1.522,177,2.205,178,2.205,179,3.38,180,1.522,181,2.205,182,1.708,184,1.466,185,1.466,186,2.205,188,2.205,190,1.889,191,1.541,194,1.218,195,1.1,200,1.582,201,1.714,205,1.522,206,2.205,207,2.205,208,1.582,209,2.746,210,1.582,211,1.582,212,3.237,213,1.582,214,1.466,215,1.582,216,1.466,217,1.582,218,1.413,219,1.582,220,1.466,221,1.144,222,1.582,223,1.466,224,1.315,225,1.582,226,1.582,227,1.413,228,1.658,229,2.205,230,1.413,231,2.205,232,1.466,233,1.582,234,1.466,235,2.61,236,2.544,237,1.466,238,1.582,239,1.466,240,1.069,241,1.466,242,1.582,243,1.582,295,2.641,296,3.461,297,4.129,318,1.582,332,3.173,423,3.587,709,3.006,748,3.173,847,3.951,857,3.855,875,3.006,876,2.765,925,4.681,1019,3.006,1112,4.129,1117,4.8,1182,3.006,1183,4.638,1184,4.638,1187,3.328,1188,3.328,1190,3.328,1457,4.8,1466,3.006,1495,5.776,1496,5.32,1497,3.817,1498,5.32,1499,5.32,1500,5.32]],["title/interfaces/ProductListResponse.html",[0,0.171,1437,2.955]],["body/interfaces/ProductListResponse.html",[0,0.257,2,1.309,3,0.257,4,0.257,5,0.191,24,0.17,25,0.357,29,0.28,30,0.013,31,0.257,32,0.011,33,0.011,40,0.756,119,2.639,235,2.035,302,4.474,624,3.444,989,3.459,1019,3.459,1437,5.225,1439,3.651,1501,4.82]],["title/interfaces/ProductResponse.html",[0,0.171,1439,2.433]],["body/interfaces/ProductResponse.html",[0,0.227,2,1.155,3,0.227,4,0.227,5,0.169,10,2.354,24,0.15,25,0.331,28,1.588,29,0.368,30,0.013,31,0.227,32,0.01,33,0.01,40,0.666,100,2.354,119,2.328,126,2.012,138,1.319,450,5.977,624,3.57,784,5.498,880,5.977,989,3.05,1439,3.987,1501,4.251,1502,6.617,1503,7.588,1504,4.706]],["title/components/ProductSearchComponent.html",[169,0.903,237,1.566]],["body/components/ProductSearchComponent.html",[3,0.153,4,0.153,5,0.114,7,1.396,15,0.356,24,0.101,25,0.255,26,0.612,29,0.167,30,0.013,31,0.153,32,0.008,33,0.008,40,0.846,53,1.058,54,0.755,116,2.404,126,1.514,131,1.35,135,1.149,137,0.988,138,1.191,141,1.262,148,2.056,169,1.323,170,1.402,171,1.98,172,1.513,173,1.513,174,1.513,176,1.456,177,2.137,178,2.137,179,3.36,180,1.456,181,2.137,182,1.656,184,1.402,185,1.402,186,2.137,188,2.137,190,1.988,191,1.882,194,1.368,195,1.236,200,1.513,201,1.639,205,1.456,206,2.137,207,2.137,208,1.513,209,2.693,210,1.513,211,1.513,212,3.218,213,1.513,214,1.402,215,1.513,216,1.402,217,1.513,218,1.351,219,1.513,220,1.402,221,1.094,222,1.513,223,1.402,224,1.257,225,1.513,226,1.513,227,1.351,228,1.619,229,2.137,230,1.351,231,2.137,232,1.402,233,1.513,234,1.402,235,2.524,236,1.402,237,2.495,238,1.513,239,1.402,240,1.022,241,1.402,242,1.513,243,1.513,295,2.578,296,3.378,318,1.513,434,2.308,446,4.706,465,3.736,489,2.875,748,3.075,847,3.875,857,3.736,879,3.182,906,2.461,1342,2.875,1348,3.182,1377,3.182,1448,4.031,1457,5.153,1466,2.875,1505,6.201,1506,3.182,1507,5.663,1508,5.977,1509,5.156,1510,5.156,1511,6.495,1512,5.156,1513,3.65,1514,5.156,1515,3.65,1516,3.65,1517,3.65,1518,5.156,1519,3.65,1520,3.65,1521,3.65,1522,3.65,1523,3.182,1524,3.65,1525,5.156]],["title/interfaces/RemoveCartItemRequest.html",[0,0.171,1526,3.212]],["body/interfaces/RemoveCartItemRequest.html",[0,0.248,2,1.265,3,0.248,4,0.248,5,0.185,7,1.601,8,2.358,9,3.341,10,1.834,11,1.027,12,1.965,13,2.036,14,2.188,15,0.488,16,2.188,17,2.11,18,1.834,19,2.036,20,2.615,21,2.615,22,2.11,23,2.188,24,0.164,25,0.349,26,1.184,28,1.51,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011,100,2.428,1526,5.563,1527,5.154]],["title/interfaces/Request.html",[0,0.171,617,2.305]],["body/interfaces/Request.html",[0,0.251,2,1.28,3,0.251,4,0.251,5,0.187,10,1.856,11,1.04,12,1.99,13,2.061,14,2.215,15,0.491,16,2.215,17,2.136,18,1.856,19,2.061,20,2.634,21,2.634,22,2.136,23,2.215,24,0.166,25,0.352,29,0.274,30,0.012,31,0.251,32,0.011,33,0.011,126,1.923,617,4.021,1528,5.218,1529,7.859]],["title/classes/RouteItem.html",[15,0.282,861,2.579]],["body/classes/RouteItem.html",[3,0.187,4,0.187,5,0.139,11,0.773,15,0.408,24,0.124,25,0.292,26,1.111,28,1.468,29,0.375,30,0.013,31,0.248,32,0.009,33,0.009,40,0.729,126,1.951,135,1.266,137,1.204,138,0.773,152,4.614,190,1.848,194,1.018,195,0.92,228,2.086,248,3.242,271,4.645,532,2.812,548,4.468,586,2.812,632,4.277,861,4.872,868,4.759,869,3.222,897,5.275,898,4.649,899,3.502,900,4.953,901,5.195,902,6.718,903,3.222,904,3.877,906,2.998,911,3.222,912,3.877,913,5.147,914,5.147,915,2.998,916,3.877,1530,4.447,1531,7.346,1532,4.447,1533,4.447,1534,4.447,1535,4.447,1536,4.447]],["title/interfaces/ShoppingSessionResponse.html",[0,0.171,1537,3.212]],["body/interfaces/ShoppingSessionResponse.html",[0,0.245,2,1.249,3,0.245,4,0.245,5,0.183,7,1.581,8,2.329,24,0.162,25,0.347,28,1.618,29,0.344,30,0.013,31,0.245,32,0.011,33,0.011,40,0.721,58,3.3,99,3.938,100,2.418,119,2.518,302,4.406,624,3.376,989,3.3,1201,6.798,1537,5.523,1538,5.092]],["title/interfaces/UpdateCartItemQuantityRequest.html",[0,0.171,60,2.579]],["body/interfaces/UpdateCartItemQuantityRequest.html",[0,0.248,2,1.262,3,0.248,4,0.248,5,0.184,7,1.597,8,2.352,9,3.332,10,1.829,11,1.025,12,1.961,13,2.031,14,2.183,15,0.487,16,2.183,17,2.105,18,1.829,19,2.031,20,2.611,21,2.611,22,2.105,23,2.183,24,0.164,25,0.349,26,1.183,28,1.508,29,0.27,30,0.012,31,0.248,32,0.011,33,0.011,60,4.461,362,4.769,1539,3.729]],["title/interfaces/UpdateCartItemQuantityRequestWrapper.html",[0,0.171,1540,3.212]],["body/interfaces/UpdateCartItemQuantityRequestWrapper.html",[0,0.248,2,1.262,3,0.248,4,0.248,5,0.184,7,1.91,8,2.813,24,0.164,25,0.349,28,1.508,29,0.322,30,0.013,31,0.248,32,0.011,33,0.011,40,0.728,60,5.231,100,2.426,362,4.208,530,3.976,617,3.986,1539,3.729,1540,5.555,1541,5.141]],["title/interfaces/UpdateCartItemQuantityResponse.html",[0,0.171,1542,3.212]],["body/interfaces/UpdateCartItemQuantityResponse.html",[0,0.249,2,1.268,3,0.249,4,0.249,5,0.185,7,1.605,8,2.363,10,1.838,11,1.03,12,1.97,13,2.041,14,2.194,15,0.488,16,2.194,17,2.115,18,1.838,19,2.041,20,2.619,21,2.619,22,2.115,23,2.194,24,0.165,25,0.35,28,1.511,29,0.271,30,0.012,31,0.249,32,0.011,33,0.011,119,2.555,362,4.776,1539,3.747,1542,5.572]],["title/interfaces/UpdateUserAddressRequest.html",[0,0.171,487,2.579]],["body/interfaces/UpdateUserAddressRequest.html",[0,0.221,2,1.125,3,0.221,4,0.221,5,0.164,9,2.971,10,1.631,11,0.913,12,1.748,13,1.811,14,1.946,15,0.454,16,1.946,17,1.877,18,1.631,19,1.811,20,2.434,21,2.434,22,1.877,23,1.946,24,0.146,25,0.325,26,1.102,29,0.361,30,0.013,31,0.221,32,0.01,33,0.01,38,2.974,120,5.069,121,4.754,122,5.069,123,5.069,124,4.754,125,5.069,126,2.142,240,1.472,440,2.824,487,4.158,1539,3.325]],["title/interfaces/UpdateUserPhoneRequest.html",[0,0.171,1543,2.75]],["body/interfaces/UpdateUserPhoneRequest.html",[0,0.245,2,1.246,3,0.245,4,0.245,5,0.182,9,3.292,10,1.807,11,1.012,12,1.937,13,2.007,14,2.157,15,0.483,16,2.157,17,2.08,18,1.807,19,2.007,20,2.592,21,2.592,22,2.08,23,2.157,24,0.162,25,0.346,26,1.174,29,0.266,30,0.013,31,0.245,32,0.011,33,0.011,38,3.113,126,1.901,240,1.632,439,4.081,1539,3.684,1543,4.722]],["title/injectables/UserFacade.html",[255,1.033,447,2.305]],["body/injectables/UserFacade.html",[3,0.202,4,0.202,5,0.15,11,0.836,15,0.332,24,0.134,25,0.307,26,1.042,29,0.284,30,0.013,31,0.202,32,0.01,33,0.01,40,0.85,53,1.393,54,0.994,61,2.253,68,1.918,69,1.78,85,4.117,87,3.951,89,3.525,110,1.492,131,1.627,135,1.263,137,1.683,138,1.08,141,1.781,190,1.802,191,1.8,194,1.101,195,0.994,255,1.573,257,1.993,353,4.353,439,2.463,440,2.583,447,3.511,487,4.601,1121,3.041,1543,4.906,1544,4.193,1545,5.73,1546,6.344,1547,7.275,1548,6.213,1549,6.213,1550,4.809,1551,4.809,1552,6.213,1553,4.809,1554,6.213,1555,4.809,1556,6.213,1557,4.809,1558,4.809,1559,4.809,1560,4.809,1561,4.809,1562,4.809]],["title/components/UserNavigationComponent.html",[169,0.903,239,1.566]],["body/components/UserNavigationComponent.html",[3,0.134,4,0.134,5,0.1,7,1.266,11,0.962,15,0.22,24,0.089,25,0.231,30,0.013,31,0.134,32,0.007,33,0.007,40,0.802,53,0.923,54,0.659,85,3.761,87,3.477,89,3.327,131,1.224,135,1.206,138,0.812,141,1.356,148,1.864,169,1.225,170,1.223,171,1.795,172,1.32,173,1.32,174,1.32,176,1.27,177,1.937,178,1.937,179,3.297,180,1.27,181,1.937,182,1.501,184,1.223,185,1.223,186,1.937,188,1.937,190,2.057,191,1.967,194,1.487,195,1.343,200,1.32,203,2.308,205,1.27,206,1.937,207,1.937,208,1.32,209,2.528,210,1.32,211,1.32,212,3.154,213,1.32,214,1.223,215,1.32,216,1.223,217,1.32,218,1.179,219,1.32,220,1.223,221,0.955,222,1.32,223,1.223,224,1.097,225,1.32,226,1.32,227,1.179,228,1.499,229,1.937,230,1.179,231,1.937,232,1.223,233,1.32,234,1.223,235,1.841,236,1.223,237,1.223,238,1.32,239,2.343,240,1.965,241,2.126,242,1.32,243,1.32,256,3.857,265,4.419,266,4.803,267,5.214,295,2.387,300,3.277,308,2.955,318,1.32,421,2.147,447,3.447,467,3.151,480,3.386,486,2.308,844,4.075,845,4.075,873,5.784,911,2.308,921,3.681,1563,6.403,1564,2.777,1565,7.016,1566,5.536,1567,3.185,1568,3.185,1569,3.185,1570,3.185,1571,3.185,1572,3.185,1573,3.185,1574,4.673,1575,4.075,1576,5.536,1577,3.185,1578,3.185,1579,4.673,1580,3.185,1581,3.185,1582,6.099,1583,4.673,1584,6.099,1585,6.275,1586,4.419]],["title/interfaces/UserPhoneResponse.html",[0,0.171,1587,3.212]],["body/interfaces/UserPhoneResponse.html",[0,0.247,2,1.256,3,0.247,4,0.247,5,0.184,10,1.82,11,1.02,12,1.951,13,2.021,14,2.172,15,0.486,16,2.172,17,2.095,18,1.82,19,2.021,20,2.604,21,2.604,22,2.095,23,2.172,24,0.163,25,0.348,29,0.268,30,0.013,31,0.247,32,0.011,33,0.011,38,3.122,119,2.531,126,1.907,439,4.089,1587,5.539,1588,4.622]],["title/interfaces/UserResponse.html",[0,0.171,1121,2.579]],["body/interfaces/UserResponse.html",[0,0.226,2,1.152,3,0.226,4,0.226,5,0.168,24,0.15,25,0.33,26,1.271,28,1.45,29,0.363,30,0.013,31,0.226,32,0.01,33,0.01,38,3.007,40,0.665,100,2.352,117,5.494,119,2.323,126,2.111,436,5.494,437,5.494,438,4.523,439,3.884,440,4.188,989,3.044,1121,4.221,1588,4.242]],["title/interfaces/ValidationProblemDetails.html",[0,0.171,1440,2.955]],["body/interfaces/ValidationProblemDetails.html",[0,0.199,2,1.015,3,0.199,4,0.199,5,0.148,10,1.471,11,0.824,12,1.577,13,1.634,14,1.756,15,0.425,16,1.756,17,1.693,18,1.471,19,1.634,20,2.279,21,2.279,22,1.693,23,1.756,24,0.132,25,0.304,26,1.374,28,1.366,29,0.375,30,0.013,31,0.199,32,0.01,33,0.01,38,3.443,126,2.103,135,0.795,248,3.013,610,3.674,624,2.13,751,5.244,776,4.462,777,3.436,778,4.577,779,5.244,780,4.88,781,5.7,782,3.735,783,3.735,1440,4.462,1589,5.369]],["title/changelog.html",[1590,2.681,1591,2.681,1592,2.681]],["body/changelog.html",[5,0.122,7,1.46,13,1.34,17,1.389,18,1.207,30,0.008,32,0.008,33,0.008,224,1.34,228,1.46,235,1.294,240,1.51,241,1.494,247,3.409,336,3.635,407,3.392,439,1.992,440,2.09,530,4.171,553,2.623,554,3.064,580,2.819,677,3.064,751,2.819,778,2.46,789,2.819,925,2.46,986,3.984,1019,2.198,1037,5.082,1157,5.58,1356,3.392,1360,2.623,1371,3.635,1504,4.7,1592,3.064,1593,3.89,1594,3.89,1595,3.392,1596,3.89,1597,3.392,1598,7.256,1599,8.203,1600,3.89,1601,5.394,1602,5.823,1603,4.7,1604,3.89,1605,3.89,1606,3.89,1607,3.89,1608,3.392,1609,3.89,1610,3.89,1611,3.89,1612,3.89,1613,6.614,1614,3.89,1615,3.89,1616,3.89,1617,3.89,1618,3.89,1619,6.488,1620,3.89,1621,6.186,1622,6.186,1623,7.585,1624,3.89,1625,3.89,1626,5.391,1627,3.89,1628,3.89,1629,3.89,1630,3.89,1631,3.89,1632,3.89,1633,3.89,1634,3.89,1635,3.89,1636,3.89,1637,3.89,1638,3.89,1639,3.89,1640,3.89,1641,3.89,1642,3.89,1643,3.89,1644,3.89,1645,3.89,1646,7.014,1647,6.186,1648,3.89,1649,3.89,1650,6.679,1651,3.89,1652,5.391,1653,3.89,1654,3.89,1655,3.89,1656,3.89,1657,4.7,1658,5.391,1659,3.89,1660,3.392,1661,3.89,1662,7.014,1663,3.89,1664,3.89,1665,3.392,1666,3.89,1667,3.392,1668,3.392,1669,3.89,1670,3.392,1671,3.89,1672,3.89,1673,3.89,1674,5.391,1675,3.89,1676,3.89,1677,3.89,1678,5.391,1679,3.89,1680,3.89,1681,3.89,1682,3.89,1683,5.391,1684,3.89,1685,3.89,1686,3.89,1687,5.391,1688,5.391,1689,4.246,1690,3.89,1691,3.89,1692,3.89,1693,3.89,1694,5.394,1695,3.392,1696,3.392,1697,3.89,1698,3.392,1699,3.392]],["title/coverage.html",[1700,4.855]],["body/coverage.html",[0,0.334,1,1.327,5,0.062,6,2.533,7,1.508,8,2.343,9,3.32,15,0.358,29,0.342,30,0.013,32,0.005,33,0.005,34,1.427,35,3.211,58,1.113,59,1.427,60,1.245,65,3.211,67,1.427,78,5.035,96,0.756,99,2.169,100,0.998,117,1.427,118,1.717,119,2.99,140,1.427,145,1.008,169,1.579,170,0.756,175,1.717,184,0.756,185,0.756,192,1.551,214,0.756,216,0.756,218,0.729,220,0.756,223,0.756,227,0.729,228,0.533,230,0.729,232,0.756,234,0.756,235,0.655,236,0.756,237,0.756,239,0.756,240,0.901,244,1.327,245,2.533,246,3.411,253,1.427,255,1.827,256,1.245,258,1.717,259,1.327,260,1.327,294,1.717,300,1.058,321,1.427,323,2.33,324,2.33,339,1.717,340,1.245,362,2.432,370,1.008,395,1.717,396,1.717,397,1.717,409,1.717,413,1.717,414,1.717,429,1.327,430,2.533,431,2.533,435,1.327,439,1.647,440,1.058,441,1.717,447,1.113,487,1.245,533,2.533,550,1.327,591,1.174,617,1.818,704,1.327,705,1.717,728,1.717,729,1.717,730,1.717,745,1.717,746,1.717,747,1.717,755,1.551,771,1.551,772,2.533,773,1.551,774,1.427,775,1.717,776,2.33,777,2.954,784,1.427,785,1.717,787,1.717,818,1.427,819,1.717,820,1.717,821,1.427,822,2.533,827,1.427,829,1.427,830,1.717,843,1.717,846,1.427,847,1.174,861,1.245,873,1.551,885,1.551,886,3.211,887,3.211,891,1.551,893,1.551,897,1.327,898,2.533,899,2.533,917,1.717,943,1.427,944,1.717,945,1.717,946,1.551,962,1.327,963,1.717,964,3.754,1014,1.427,1016,1.427,1017,1.427,1019,1.818,1020,1.427,1021,1.427,1074,1.327,1075,1.327,1077,1.427,1078,1.717,1079,2.533,1090,1.551,1109,2.533,1110,1.717,1111,2.533,1116,1.427,1121,1.245,1136,1.427,1155,1.717,1156,1.551,1179,1.427,1180,2.749,1181,1.717,1182,2.533,1203,1.717,1204,1.717,1229,4.826,1231,1.551,1232,1.551,1233,1.551,1244,1.551,1249,1.551,1255,1.717,1264,1.717,1265,1.717,1279,1.427,1280,2.33,1286,2.33,1297,1.551,1298,1.427,1313,1.551,1360,1.327,1371,1.327,1417,1.427,1418,1.717,1419,1.327,1420,1.717,1437,1.427,1439,1.174,1440,1.427,1444,1.427,1445,1.717,1448,1.327,1457,2.954,1458,1.717,1472,1.717,1487,1.551,1495,1.717,1501,2.533,1505,1.717,1506,1.717,1526,1.551,1527,1.717,1528,1.717,1537,1.551,1538,1.717,1539,3.281,1540,1.551,1541,1.717,1542,1.551,1543,1.327,1544,1.717,1545,1.551,1563,1.717,1564,1.717,1587,1.551,1588,2.533,1589,1.717,1601,4.524,1619,4.104,1700,1.717,1701,1.551,1702,1.969,1703,1.969,1704,3.211,1705,7.895,1706,8.15,1707,7.425,1708,1.551,1709,5.188,1710,1.717,1711,1.717,1712,1.717,1713,1.717,1714,2.533,1715,1.551,1716,1.717,1717,4.707,1718,1.717,1719,1.717,1720,3.216,1721,1.969,1722,1.969,1723,1.969,1724,1.969,1725,1.717,1726,1.969,1727,5.822,1728,1.969,1729,1.969,1730,1.969,1731,6.34,1732,5.188,1733,3.216,1734,1.717,1735,1.969,1736,5.567,1737,5.874,1738,1.717,1739,1.969,1740,6.128,1741,5.567,1742,4.855,1743,5.567,1744,2.804,1745,1.969,1746,1.717,1747,1.717,1748,1.717,1749,1.717,1750,1.717,1751,1.717,1752,1.717,1753,1.969,1754,2.804,1755,1.969,1756,1.717,1757,4.104,1758,1.717,1759,1.717,1760,1.717,1761,1.717,1762,2.804,1763,3.216,1764,1.717,1765,4.104,1766,4.104,1767,1.717,1768,1.717,1769,1.717,1770,1.717,1771,1.717,1772,1.717,1773,1.717,1774,2.804,1775,2.804,1776,1.717,1777,1.717,1778,1.717,1779,1.969,1780,1.717,1781,2.804,1782,1.551,1783,1.969,1784,1.969,1785,1.969,1786,1.969,1787,3.211,1788,1.551,1789,1.969,1790,1.717]],["title/dependencies.html",[1791,2.968,1792,3.554]],["body/dependencies.html",[15,0.432,30,0.013,32,0.01,33,0.01,46,4.243,54,1.006,63,2.903,132,4.243,176,1.941,201,2.186,221,1.877,247,4.378,318,2.017,434,3.078,802,4.243,837,4.243,1278,4.243,1665,4.243,1792,3.526,1793,4.866,1794,8.057,1795,4.866,1796,4.866,1797,6.261,1798,5.459,1799,4.866,1800,4.866,1801,4.866,1802,4.866,1803,7.308,1804,4.866,1805,4.866,1806,4.866,1807,4.866,1808,4.866,1809,4.243,1810,4.866,1811,4.866,1812,4.866,1813,4.866,1814,4.866,1815,4.866,1816,4.866,1817,4.866,1818,6.261,1819,4.866,1820,4.866,1821,4.866,1822,4.866,1823,6.261,1824,4.866,1825,4.866,1826,4.866,1827,4.866,1828,4.866,1829,4.866,1830,4.866,1831,4.866,1832,4.866,1833,4.866,1834,4.866,1835,4.866,1836,4.866,1837,4.866,1838,6.261,1839,4.866,1840,4.866,1841,4.866,1842,4.866,1843,4.243,1844,4.866,1845,4.866,1846,4.866,1847,4.866,1848,4.866,1849,4.866,1850,4.866]],["title/miscellaneous/enumerations.html",[1851,1.924,1852,4.277]],["body/miscellaneous/enumerations.html",[11,1.007,12,1.928,13,1.997,14,2.146,15,0.482,16,2.146,17,2.07,18,1.799,19,1.997,20,2.585,21,2.585,22,2.07,23,2.146,24,0.161,30,0.013,32,0.011,33,0.011,195,1.608,271,4.416,790,6.088,868,4.708,915,4.708,946,5.499,1180,3.909,1200,5.059,1202,5.499,1226,6.088,1851,3.277,1852,5.055,1853,5.798,1854,6.983,1855,5.055,1856,6.983,1857,5.798,1858,5.798,1859,5.798]],["title/miscellaneous/functions.html",[1851,1.924,1860,4.277]],["body/miscellaneous/functions.html",[24,0.173,26,1.044,29,0.285,30,0.013,32,0.011,33,0.011,137,1.687,138,1.083,141,1.525,145,3.191,194,1.426,195,1.288,550,5.208,964,4.913,1714,4.907,1715,5.739,1851,3.521,1860,5.432,1861,5.432,1862,6.23]],["title/index.html",[24,0.095,1590,2.681,1591,2.681]],["body/index.html",[5,0.197,7,0.521,11,0.334,12,1.543,13,2.546,22,0.687,28,0.384,29,0.088,30,0.012,32,0.005,33,0.005,49,1.216,69,0.712,96,1.541,98,2.907,99,1.297,135,0.322,138,0.697,145,1.616,152,1.783,163,1.515,167,2.286,169,0.698,171,1.541,180,1.851,195,0.398,212,0.767,228,1.086,235,1.049,240,1.929,241,1.212,247,4.192,265,1.394,267,2.286,428,1.677,438,1.147,520,1.297,521,1.677,526,1.515,529,3.498,537,4.337,540,3.713,541,1.515,553,4.094,562,1.515,566,3.16,580,1.394,581,1.394,610,1.033,620,1.394,622,1.515,626,1.394,675,2.485,682,1.515,696,1.515,706,2.907,716,3.363,748,1.147,754,2.907,779,3.363,789,2.907,823,4.689,880,1.515,884,4.047,925,2.537,928,2.128,940,1.515,948,1.677,1022,1.297,1069,1.394,1080,4.036,1157,2.907,1200,3.713,1371,1.297,1409,4.468,1412,1.677,1502,2.751,1507,1.677,1585,1.677,1592,2.485,1595,4.047,1602,1.677,1603,5.78,1608,1.677,1613,3.498,1657,4.468,1660,1.677,1667,1.677,1668,1.677,1670,2.751,1689,1.515,1694,2.751,1695,2.751,1696,1.677,1698,2.751,1699,4.047,1701,3.656,1790,2.751,1792,1.394,1798,1.677,1843,4.801,1863,1.677,1864,3.155,1865,1.923,1866,1.923,1867,4.642,1868,3.155,1869,1.923,1870,1.923,1871,4.012,1872,3.155,1873,5.125,1874,1.923,1875,1.923,1876,3.155,1877,3.155,1878,5.506,1879,3.155,1880,4.012,1881,3.155,1882,1.515,1883,3.155,1884,1.923,1885,3.155,1886,1.923,1887,1.923,1888,1.923,1889,1.923,1890,1.923,1891,1.923,1892,4.642,1893,1.923,1894,1.923,1895,1.923,1896,5.506,1897,1.923,1898,1.923,1899,1.923,1900,1.923,1901,5.125,1902,1.923,1903,1.923,1904,1.923,1905,5.125,1906,1.923,1907,1.923,1908,3.155,1909,3.155,1910,1.923,1911,1.923,1912,1.923,1913,3.155,1914,3.155,1915,1.923,1916,1.923,1917,1.923,1918,1.923,1919,1.923,1920,1.923,1921,1.923,1922,3.155,1923,3.155,1924,1.923,1925,1.923,1926,1.923,1927,5.816,1928,6.072,1929,1.923,1930,1.923,1931,1.923,1932,1.923,1933,4.642,1934,1.923,1935,1.923,1936,1.923,1937,4.642,1938,4.012,1939,1.923,1940,1.923,1941,1.923,1942,1.923,1943,1.923,1944,3.155,1945,4.642,1946,1.923,1947,1.923,1948,1.923,1949,5.125,1950,1.923,1951,1.923,1952,6.072,1953,1.923,1954,6.471,1955,1.923,1956,3.155,1957,6.767,1958,3.155,1959,4.012,1960,1.923,1961,6.072,1962,1.923,1963,1.923,1964,5.506,1965,3.155,1966,1.923,1967,5.816,1968,1.923,1969,3.155,1970,3.155,1971,7.39,1972,1.923,1973,1.923,1974,1.923,1975,3.155,1976,3.155,1977,1.923,1978,5.816,1979,1.923,1980,1.923,1981,1.923,1982,1.923,1983,1.923,1984,1.923,1985,1.923,1986,1.923,1987,1.923,1988,1.923,1989,1.923,1990,5.506,1991,4.012,1992,3.155,1993,3.155,1994,6.471,1995,4.012,1996,1.677,1997,1.923,1998,1.923,1999,3.155,2000,1.923,2001,5.125,2002,1.923,2003,1.923,2004,1.923,2005,1.923,2006,1.923,2007,1.923,2008,3.155,2009,4.642,2010,1.923,2011,3.155,2012,1.923,2013,1.923,2014,1.923,2015,1.923,2016,1.923,2017,1.923,2018,1.923,2019,1.923,2020,1.923,2021,3.155,2022,1.923,2023,1.923,2024,1.923,2025,4.012,2026,1.923,2027,3.155,2028,1.923,2029,1.677,2030,1.923,2031,3.155,2032,1.923,2033,1.923,2034,1.923,2035,5.125,2036,1.923,2037,1.923,2038,3.155,2039,1.923,2040,1.923,2041,1.923,2042,3.155,2043,1.923,2044,3.155,2045,1.923,2046,1.923,2047,1.923,2048,1.923,2049,1.923,2050,1.923,2051,1.923,2052,1.923,2053,1.923,2054,1.923,2055,1.677,2056,3.155,2057,1.923,2058,1.923,2059,1.923,2060,1.923,2061,1.923,2062,1.677,2063,1.923,2064,1.923,2065,1.923,2066,4.642,2067,1.923,2068,4.642,2069,1.923,2070,1.923,2071,1.923,2072,1.923,2073,1.923,2074,6.072,2075,4.012,2076,4.012,2077,4.642,2078,4.012,2079,5.816,2080,4.642,2081,3.155,2082,4.642,2083,1.677,2084,3.155,2085,1.923,2086,3.155,2087,1.923,2088,3.155,2089,4.468,2090,1.923,2091,1.923,2092,1.923,2093,1.923,2094,1.923,2095,4.642,2096,1.923,2097,1.923,2098,3.155,2099,1.923,2100,1.923,2101,5.125,2102,4.012,2103,1.923,2104,1.923,2105,3.155,2106,3.155,2107,3.155,2108,1.923,2109,1.923,2110,1.923,2111,1.923,2112,1.923,2113,3.155,2114,1.923,2115,4.012,2116,1.923,2117,5.125,2118,1.923,2119,1.923,2120,1.923,2121,4.642,2122,1.923,2123,1.923,2124,3.155,2125,1.923,2126,1.923,2127,5.125,2128,3.155,2129,1.923,2130,1.923,2131,1.923,2132,1.923,2133,1.923,2134,1.923,2135,1.923,2136,1.923,2137,1.923,2138,4.642,2139,1.923,2140,1.923,2141,1.923,2142,1.923,2143,4.012,2144,3.155,2145,4.642,2146,1.923,2147,1.923,2148,1.923,2149,1.923,2150,1.923,2151,1.923,2152,1.923,2153,1.923,2154,1.923,2155,1.923,2156,1.923,2157,1.923,2158,1.923,2159,1.923,2160,1.923,2161,5.125,2162,1.923,2163,1.923,2164,1.923,2165,1.923,2166,1.923,2167,1.923,2168,1.923,2169,1.923,2170,1.923,2171,1.923,2172,1.923,2173,1.923,2174,2.907,2175,1.923,2176,1.923,2177,1.515]],["title/license.html",[1590,2.681,1591,2.681,2174,2.466]],["body/license.html",[30,0.01,32,0.01,33,0.01,553,4.452,607,4.167,985,4.167,1586,3.834,1598,4.614,1701,4.167,1809,4.614,2029,4.614,2062,4.614,2083,4.614,2174,3.834,2177,4.167,2178,7.196,2179,5.291,2180,5.291,2181,5.291,2182,6.602,2183,5.291,2184,5.291,2185,5.291,2186,5.291,2187,5.291,2188,5.291,2189,6.602,2190,8.177,2191,5.291,2192,5.291,2193,5.291,2194,7.196,2195,5.291,2196,6.602,2197,5.291,2198,5.291,2199,5.291,2200,5.291,2201,5.291,2202,5.291,2203,5.291,2204,5.291,2205,6.602,2206,5.291,2207,5.291,2208,5.291,2209,5.291,2210,5.291,2211,5.291,2212,6.602,2213,6.602,2214,5.291,2215,5.291,2216,5.291,2217,5.291,2218,5.291,2219,5.291,2220,5.291,2221,5.291,2222,5.291,2223,5.291,2224,5.291,2225,5.291,2226,5.291,2227,5.291,2228,5.291,2229,5.291,2230,5.291,2231,5.291,2232,5.291,2233,5.291,2234,5.291,2235,5.291,2236,5.291,2237,5.291,2238,5.291,2239,5.291]],["title/modules.html",[129,4.386]],["body/modules.html",[30,0.012,32,0.012,33,0.012,128,5.159,129,5.159,626,4.746,2055,5.711,2240,6.55]],["title/overview.html",[1882,4.386]],["body/overview.html",[2,1.34,30,0.011,32,0.011,33,0.011,127,6.373,149,5.46,150,5.46,151,4.932,171,2.405,205,2.498,257,2.596,378,4.538,532,3.96,1189,5.46,1360,4.222,1586,4.538,1734,5.46,1738,5.46,1792,4.538,1882,4.932,2241,6.262,2242,7.309,2243,6.262]],["title/properties.html",[25,0.243,1791,2.968]],["body/properties.html",[25,0.322,30,0.013,32,0.012,33,0.012,1597,5.68,2089,5.68,2174,4.72,2177,5.131]],["title/miscellaneous/typealiases.html",[1851,1.924,2244,4.905]],["body/miscellaneous/typealiases.html",[6,3.314,7,1.54,18,2.237,24,0.117,28,0.841,29,0.362,30,0.013,32,0.009,33,0.009,39,1.815,119,2.453,126,1.748,135,1.157,221,1.705,224,1.449,240,1.179,248,3.832,540,2.837,568,5.384,576,2.51,577,3.597,578,4.121,586,2.661,624,1.89,625,4.669,685,2.661,688,2.837,690,3.049,706,3.049,774,3.049,900,2.837,986,3.393,1014,4.121,1016,4.121,1030,2.837,1051,3.049,1074,3.835,1075,3.835,1076,3.049,1090,4.48,1229,3.314,1231,4.48,1232,4.48,1233,5.075,1234,3.669,1235,3.669,1236,3.669,1237,3.669,1239,3.669,1240,3.669,1241,4.96,1242,3.669,1243,4.96,1244,5.075,1245,3.669,1247,3.669,1248,3.669,1249,5.075,1250,3.669,1251,3.669,1252,3.669,1253,3.669,1254,3.669,1279,4.121,1280,4.121,1286,4.121,1298,4.121,1417,3.049,1448,3.835,1704,3.314,1708,4.48,1756,3.669,1757,6.624,1758,4.96,1767,3.669,1768,4.96,1769,3.669,1770,4.96,1771,3.669,1772,3.669,1773,4.96,1774,3.669,1775,5.619,1776,4.96,1781,3.669,1782,4.48,1787,3.314,1788,4.48,1851,2.378,1855,3.669,2245,4.207,2246,4.207,2247,5.688,2248,3.669,2249,4.207,2250,4.207,2251,7.597,2252,4.207,2253,4.207,2254,5.688,2255,3.669,2256,4.207,2257,4.207,2258,4.207]],["title/miscellaneous/variables.html",[1022,3.308,1851,1.924]],["body/miscellaneous/variables.html",[1,0.974,11,0.431,12,0.825,24,0.04,27,0.913,28,1.163,29,0.288,30,0.013,32,0.004,33,0.004,34,1.047,35,1.138,36,2.163,37,1.672,38,0.599,39,0.623,42,3.797,43,1.259,44,1.259,47,2.842,52,3.686,56,2.842,58,1.402,59,1.797,60,0.913,64,2.519,65,3.744,66,1.842,67,1.797,68,1.737,69,1.612,70,2.842,71,1.259,72,1.259,73,0.974,74,2.163,75,1.954,76,2.163,77,1.259,78,3.347,79,1.259,80,1.259,81,1.259,82,3.372,83,3.372,84,1.138,85,2.981,86,1.138,87,2.75,88,1.259,89,3.358,90,1.259,91,4.681,92,1.259,93,1.259,94,1.259,95,2.598,96,2.155,97,2.842,98,2.362,99,2.198,100,1.351,101,1.259,102,2.567,103,1.259,104,1.259,105,1.259,106,1.797,107,1.259,108,1.259,109,1.981,110,2.192,111,2.842,112,1.259,113,1.259,114,1.047,115,1.138,116,0.535,121,1.569,124,0.913,138,0.251,145,1.27,151,1.138,153,4.229,154,1.259,169,0.722,182,1.527,192,1.954,193,2.163,194,1.741,195,1.566,218,0.535,221,0.433,227,0.535,228,0.391,230,0.535,235,0.48,240,1.332,244,0.974,245,1.138,246,2.802,247,0.913,253,2.362,254,1.259,256,1.569,260,0.974,280,1.259,300,0.776,308,0.913,323,2.802,324,2.802,336,1.672,378,3.686,388,1.047,427,1.954,438,0.862,439,1.27,440,1.751,446,2.362,447,0.816,450,1.954,465,1.047,467,0.974,487,0.913,520,0.974,526,4.419,536,0.974,572,1.047,576,3.035,620,1.797,654,2.362,686,4.073,760,0.974,804,3.686,821,1.047,822,1.138,823,1.047,827,2.362,828,1.259,829,1.047,886,1.138,887,2.567,888,3.797,889,1.259,890,3.372,891,2.567,892,1.259,893,2.567,894,1.259,895,1.259,896,3.797,900,2.608,915,2.198,921,1.954,925,2.446,928,1.672,940,1.138,943,1.047,947,1.259,952,1.138,962,1.672,964,1.672,986,1.945,1020,1.797,1021,1.797,1022,0.974,1030,0.974,1032,1.138,1037,1.047,1069,1.047,1077,1.047,1092,2.362,1099,1.259,1112,0.974,1156,1.954,1160,1.259,1164,1.954,1199,2.163,1219,1.259,1279,1.047,1280,2.362,1286,2.362,1297,1.954,1298,1.047,1309,1.259,1313,1.954,1335,4.145,1336,2.163,1337,2.163,1342,1.138,1349,1.259,1360,1.672,1371,0.974,1401,1.259,1407,1.259,1419,1.672,1444,1.047,1452,1.259,1479,2.163,1487,1.954,1523,1.259,1543,0.974,1545,1.954,1546,1.259,1575,4.436,1586,3.445,1689,1.954,1704,1.138,1708,1.138,1710,1.259,1711,2.163,1712,1.259,1713,2.842,1714,1.138,1715,1.138,1716,2.163,1718,1.259,1719,2.163,1725,2.163,1727,1.259,1742,2.163,1744,1.259,1746,1.259,1747,2.842,1748,1.259,1749,2.163,1750,1.259,1751,2.163,1752,2.842,1754,1.259,1759,1.259,1760,2.163,1761,2.842,1762,1.259,1764,1.259,1765,1.259,1766,3.797,1777,1.259,1778,2.163,1780,1.259,1782,1.138,1787,1.138,1788,1.138,1851,0.816,1861,1.259,1863,1.259,1996,2.163,2248,2.163,2255,2.163,2259,2.48,2260,2.48,2261,1.444,2262,1.444,2263,1.444,2264,1.444,2265,1.444,2266,2.48,2267,2.48,2268,3.868,2269,1.444,2270,3.868,2271,1.444,2272,1.444,2273,1.444,2274,1.444,2275,2.48,2276,3.868,2277,5.087,2278,2.48,2279,4.754,2280,3.868,2281,2.48,2282,2.48,2283,2.48,2284,3.26,2285,3.868,2286,2.48,2287,2.48,2288,1.444,2289,1.444,2290,1.444,2291,1.444,2292,1.444,2293,1.444,2294,1.444,2295,1.444,2296,1.444,2297,1.444,2298,1.444,2299,1.444,2300,1.444,2301,1.444,2302,1.444,2303,1.444,2304,1.444,2305,1.444,2306,1.444,2307,1.444,2308,2.48,2309,2.48,2310,1.444,2311,1.444,2312,1.444,2313,1.444,2314,1.444,2315,2.48,2316,1.444,2317,3.26,2318,3.26,2319,2.48,2320,2.48,2321,1.444,2322,1.444,2323,1.444,2324,1.444,2325,2.48,2326,1.444,2327,1.444,2328,1.444,2329,2.48,2330,1.444,2331,1.444,2332,1.444,2333,1.444,2334,1.444,2335,1.444,2336,1.444,2337,1.444,2338,1.444,2339,1.444,2340,1.444,2341,1.444,2342,2.48,2343,4.355,2344,1.444,2345,2.48,2346,1.444,2347,3.26,2348,1.444,2349,2.48,2350,2.48,2351,1.444,2352,1.444,2353,1.444,2354,1.444,2355,1.444,2356,4.355,2357,1.444,2358,1.444,2359,1.444,2360,1.444,2361,2.48,2362,2.48,2363,1.444,2364,1.444,2365,1.444,2366,1.444,2367,1.444,2368,1.444,2369,1.444,2370,1.444,2371,1.444,2372,1.444,2373,1.444,2374,1.444,2375,1.444,2376,1.444,2377,1.444,2378,1.444,2379,1.444,2380,1.444,2381,1.444,2382,1.444,2383,1.444,2384,1.444,2385,1.444,2386,1.444,2387,1.444,2388,1.444,2389,1.444,2390,1.444,2391,1.444,2392,1.444,2393,3.868,2394,2.48,2395,1.444,2396,1.444,2397,1.444,2398,1.444,2399,1.444,2400,1.444,2401,1.444,2402,1.444,2403,1.444,2404,1.444,2405,1.444,2406,2.48,2407,2.48,2408,1.444,2409,1.444,2410,1.444,2411,2.48,2412,1.444,2413,1.444,2414,1.444,2415,1.444,2416,1.444,2417,1.444,2418,1.444,2419,1.444,2420,1.444,2421,1.444,2422,1.444,2423,1.444,2424,1.444,2425,1.444,2426,1.444,2427,1.444,2428,1.444,2429,1.444,2430,1.444,2431,1.444,2432,1.444]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":78,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["0.0.1",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":1677,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["0.14.10",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1671,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":1653,"title":{},"body":{"changelog.html":{}}}],["0.3.10",{"_index":1639,"title":{},"body":{"changelog.html":{}}}],["0.3.11",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["0.3.12",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["0.3.13",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["0.3.14",{"_index":1635,"title":{},"body":{"changelog.html":{}}}],["0.3.15",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["0.3.16",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["0.3.17",{"_index":1620,"title":{},"body":{"changelog.html":{}}}],["0.3.18",{"_index":1618,"title":{},"body":{"changelog.html":{}}}],["0.3.19",{"_index":1611,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":1651,"title":{},"body":{"changelog.html":{}}}],["0.3.20",{"_index":1607,"title":{},"body":{"changelog.html":{}}}],["0.3.21",{"_index":1606,"title":{},"body":{"changelog.html":{}}}],["0.3.22",{"_index":1600,"title":{},"body":{"changelog.html":{}}}],["0.3.23",{"_index":1597,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.3.3",{"_index":1649,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":1648,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["0.3.6",{"_index":1643,"title":{},"body":{"changelog.html":{}}}],["0.3.7",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":1641,"title":{},"body":{"changelog.html":{}}}],["0.3.9",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1745,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1709,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1644,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1599,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1664,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1652,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1650,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1647,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":378,"title":{},"body":{"injectables/CartFacade.html":{},"components/OrderListComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.1",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1214,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["1.6.0",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1037,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.2",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["101",{"_index":924,"title":{},"body":{"injectables/NavigationService.html":{}}}],["102",{"_index":927,"title":{},"body":{"injectables/NavigationService.html":{}}}],["105",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":1663,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":1619,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["123",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1234567890",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["125",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":1612,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1601,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["15",{"_index":1360,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["150",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1738,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["165",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["18.1.1",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["18.2.9",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["195",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1400,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["2.1.0",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["2.39.1",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1371,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1662,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":1598,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22",{"_index":1356,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"changelog.html":{}}}],["22.0.5",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["22daee8",{"_index":1605,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1336,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["26.0.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["28",{"_index":1217,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["3",{"_index":1405,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["3.2.3",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["3/20",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":1221,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["33",{"_index":1734,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["4",{"_index":1212,"title":{},"body":{"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["4.0.2",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1386,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["4567",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["49",{"_index":1627,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1189,"title":{},"body":{"components/OrderListComponent.html":{},"overview.html":{}}}],["5.0",{"_index":552,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["5.18.0",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["5/28",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":1228,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["51",{"_index":1616,"title":{},"body":{"changelog.html":{}}}],["52",{"_index":1609,"title":{},"body":{"changelog.html":{}}}],["5374a97",{"_index":1633,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":1604,"title":{},"body":{"changelog.html":{}}}],["54417dc",{"_index":1610,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1342,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["6.2.1",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":763,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["634f627",{"_index":1628,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["768",{"_index":478,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["8",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["8.38.0",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["8.41.0",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["8/16",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":1224,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["9",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["987654321",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.created",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.order",{"_index":941,"title":{},"body":{"injectables/NavigationService.html":{}}}],["a.status",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4",{"_index":1318,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["a[pr",{"_index":2139,"title":{},"body":{"index.html":{}}}],["above",{"_index":2211,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":912,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["acc",{"_index":76,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":615,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["accepts",{"_index":623,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts.find((x",{"_index":664,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts.length",{"_index":663,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["accepts[0",{"_index":665,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["access",{"_index":1928,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":788,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["accesstoken",{"_index":534,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["account",{"_index":1409,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"index.html":{}}}],["accountname",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountnumber",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":2235,"title":{},"body":{"license.html":{}}}],["actions",{"_index":2116,"title":{},"body":{"index.html":{}}}],["activatedroute",{"_index":1115,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["activatedroutesnapshot",{"_index":958,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["actual_component",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["add",{"_index":1157,"title":{},"body":{"injectables/OrderFacade.html":{},"components/ProductDetailComponent.html":{},"changelog.html":{},"index.html":{}}}],["add(order",{"_index":1161,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["addbuttonenabled",{"_index":1459,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["addcartitem401response",{"_index":1014,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["addcartitemrequest",{"_index":1,"title":{"interfaces/AddCartItemRequest.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addcompanyinformation",{"_index":1266,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addcompanyinformation(doc",{"_index":1277,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addcustomerinformation",{"_index":1267,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addcustomerinformation(doc",{"_index":1283,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["added",{"_index":1695,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addentity(order",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addentity(product",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addfooter",{"_index":1268,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addfooter(doc",{"_index":1285,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addinvoicedetails",{"_index":1269,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addinvoicedetails(doc",{"_index":1288,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["additem",{"_index":341,"title":{},"body":{"injectables/CartFacade.html":{}}}],["additem(productid",{"_index":349,"title":{},"body":{"injectables/CartFacade.html":{}}}],["additionalstate",{"_index":34,"title":{"interfaces/AdditionalState.html":{}},"body":{"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addline",{"_index":1270,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addline(doc",{"_index":1290,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addlogo",{"_index":1271,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addlogo(doc",{"_index":1292,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addpage",{"_index":1272,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addpage(doc",{"_index":1294,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["address",{"_index":440,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["address.dirty",{"_index":491,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["address.valid",{"_index":492,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["addressresponse",{"_index":117,"title":{"interfaces/AddressResponse.html":{}},"body":{"interfaces/AddressResponse.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["addtablefooter",{"_index":1273,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtablefooter(doc",{"_index":1296,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableheader",{"_index":1274,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableheader(doc",{"_index":1300,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableitems",{"_index":1275,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtableitems(doc",{"_index":1302,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["addtocart",{"_index":1460,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["addtocart(id",{"_index":1461,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["addtohttpparams",{"_index":966,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["addtohttpparams(httpparams",{"_index":972,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["addtohttpparamsrecursive",{"_index":967,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["addtohttpparamsrecursive(httpparams",{"_index":975,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["admin",{"_index":2037,"title":{},"body":{"index.html":{}}}],["again",{"_index":2085,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1707,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2245,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1348,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"components/ProductSearchComponent.html":{}}}],["allowdisplay",{"_index":933,"title":{},"body":{"injectables/NavigationService.html":{}}}],["allowdisplay(item.options?.['permissionstrategy",{"_index":938,"title":{},"body":{"injectables/NavigationService.html":{}}}],["allowedproductfiltertypes",{"_index":1782,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":159,"title":{},"body":{"modules/ApiModule.html":{}}}],["amount",{"_index":1199,"title":{},"body":{"interfaces/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":2203,"title":{},"body":{"license.html":{}}}],["angular",{"_index":49,"title":{},"body":{"interfaces/AdditionalState.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"index.html":{}}}],["angular/animations",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["angular/build",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":318,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":147,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["angular/compiler",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":434,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"components/FormErrorComponent.html":{},"components/ProductSearchComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NoReuseStrategy.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"dependencies.html":{}}}],["animate('300ms",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate('500ms",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate('700ms",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animatebackdrop",{"_index":323,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animateslideover",{"_index":324,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":326,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{}}}],["any[]).foreach(elem",{"_index":1033,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["apartment",{"_index":120,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["api",{"_index":13,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["api.ts",{"_index":964,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["api.ts:110",{"_index":979,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:112",{"_index":1427,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:119",{"_index":996,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:121",{"_index":1428,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:128",{"_index":997,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:130",{"_index":1429,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:137",{"_index":998,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:139",{"_index":1430,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:198",{"_index":1000,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:200",{"_index":1432,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:208",{"_index":1001,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:210",{"_index":1433,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:218",{"_index":1002,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:220",{"_index":1434,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:228",{"_index":1003,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:230",{"_index":1435,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:40",{"_index":1005,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:41",{"_index":1008,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:42",{"_index":1006,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["api.ts:43",{"_index":971,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["api.ts:44",{"_index":1436,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:45",{"_index":1423,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:68",{"_index":974,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:70",{"_index":1424,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api.ts:77",{"_index":976,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api.ts:79",{"_index":1425,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api/v1/orders",{"_index":1064,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api/v1/orders/${this.configuration.encodeparam",{"_index":1072,"title":{},"body":{"injectables/OrderApi.html":{}}}],["api/v1/products",{"_index":1442,"title":{},"body":{"injectables/ProductApi.html":{}}}],["api/v1/products/${this.configuration.encodeparam",{"_index":1443,"title":{},"body":{"injectables/ProductApi.html":{}}}],["apikeys",{"_index":535,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["apimodule",{"_index":128,"title":{"modules/ApiModule.html":{}},"body":{"modules/ApiModule.html":{},"modules.html":{}}}],["apis",{"_index":1719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":170,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1867,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":600,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["application/vnd.company+json",{"_index":602,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["applicationconfig",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":2032,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":162,"title":{},"body":{"modules/ApiModule.html":{}}}],["appropriate",{"_index":2124,"title":{},"body":{"index.html":{}}}],["approutes",{"_index":1713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/.../app.config.ts",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.routes.ts",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../app.store.ts",{"_index":2248,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../provide",{"_index":1861,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/+state/app.store.ts",{"_index":1704,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/app.component.ts",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["apps/frontend/src/app/app.component.ts:16",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/frontend/src/app/app.component.ts:17",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["apps/frontend/src/app/app.config.ts",{"_index":1710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/app.routes.ts",{"_index":1712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/providers/provide",{"_index":1714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/frontend/src/app/strategies/no",{"_index":944,"title":{},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{}}}],["appstate",{"_index":1708,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["appstore",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["architects/ngrx",{"_index":50,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["architecture",{"_index":1885,"title":{},"body":{"index.html":{}}}],["args",{"_index":272,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["arising",{"_index":2238,"title":{},"body":{"license.html":{}}}],["array",{"_index":624,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"injectables/OrderApi.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(basepath",{"_index":1027,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["array.isarray(value",{"_index":1032,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["article",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asp.net",{"_index":1876,"title":{},"body":{"index.html":{}}}],["assets",{"_index":2108,"title":{},"body":{"index.html":{}}}],["associated",{"_index":2191,"title":{},"body":{"license.html":{}}}],["async",{"_index":85,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2054,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":2052,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["austria",{"_index":524,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["auth",{"_index":1670,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["auth.ts",{"_index":1751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_config",{"_index":253,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/KeycloakService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":244,"title":{"interfaces/AuthConfig.html":{}},"body":{"interfaces/AuthConfig.html":{},"injectables/KeycloakService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticated",{"_index":790,"title":{},"body":{"injectables/KeycloakService.html":{},"miscellaneous/enumerations.html":{}}}],["authentication",{"_index":566,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["authfacade",{"_index":256,"title":{"injectables/AuthFacade.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/NavigationService.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authfacade.authorize",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authfacade.gettoken",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authfacade.isauthenticated",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":1749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":1894,"title":{},"body":{"index.html":{}}}],["authorize",{"_index":261,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["authorized",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":2229,"title":{},"body":{"license.html":{}}}],["auto",{"_index":16,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["autocomplete",{"_index":1655,"title":{},"body":{"changelog.html":{}}}],["automatic",{"_index":1944,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":2096,"title":{},"body":{"index.html":{}}}],["available",{"_index":626,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":89,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1961,"title":{},"body":{"index.html":{}}}],["axios",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":940,"title":{},"body":{"injectables/NavigationService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["b.created",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b.order",{"_index":942,"title":{},"body":{"injectables/NavigationService.html":{}}}],["b.status",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b[test",{"_index":2140,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1613,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["backwards",{"_index":679,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["bag",{"_index":408,"title":{},"body":{"components/CartIconComponent.html":{}}}],["bank",{"_index":1407,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["bankingtext",{"_index":1406,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["bankname",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":161,"title":{},"body":{"modules/ApiModule.html":{}}}],["base_path",{"_index":1020,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":981,"title":{},"body":{"injectables/OrderApi.html":{}}}],["baseline",{"_index":1376,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["basepath",{"_index":536,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["basepath[0",{"_index":1028,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["basic",{"_index":571,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["bearer",{"_index":572,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["bg",{"_index":875,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["binary",{"_index":1254,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["blob",{"_index":1060,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["body",{"_index":988,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["bold",{"_index":1344,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["boolean",{"_index":39,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["booleanattribute",{"_index":1576,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["bootstrap",{"_index":2241,"title":{},"body":{"overview.html":{}}}],["border",{"_index":1219,"title":{},"body":{"components/OrderStatusComponent.html":{},"miscellaneous/variables.html":{}}}],["both",{"_index":2031,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":2082,"title":{},"body":{"index.html":{}}}],["broken",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2055,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":1798,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bucket",{"_index":2107,"title":{},"body":{"index.html":{}}}],["bug",{"_index":1621,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1952,"title":{},"body":{"index.html":{}}}],["builds",{"_index":2084,"title":{},"body":{"index.html":{}}}],["built",{"_index":1868,"title":{},"body":{"index.html":{}}}],["business",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["byte",{"_index":1253,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["c",{"_index":2179,"title":{},"body":{"license.html":{}}}],["c[merge",{"_index":2144,"title":{},"body":{"index.html":{}}}],["calculated",{"_index":335,"title":{},"body":{"components/CartComponent.html":{}}}],["calling",{"_index":1071,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["canactivate",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivatefn",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["care",{"_index":585,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["cart",{"_index":7,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/ProductApi.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cart'},{'name",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["cart.animations",{"_index":325,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.html",{"_index":298,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.scss",{"_index":299,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.facade",{"_index":319,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{}}}],["cartcomponent",{"_index":185,"title":{"components/CartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["cartfacade",{"_index":300,"title":{"injectables/CartFacade.html":{}},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"components/ProductDetailComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartfacade.loadshoppingsession",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cartfilter",{"_index":1758,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["carticoncomponent",{"_index":214,"title":{"components/CartIconComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["cartitemresponse",{"_index":58,"title":{"interfaces/CartItemResponse.html":{}},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartitemscomponent",{"_index":216,"title":{"components/CartItemsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["cartstore",{"_index":67,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":697,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["catalog",{"_index":1897,"title":{},"body":{"index.html":{}}}],["catch",{"_index":391,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["categories",{"_index":880,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/ProductResponse.html":{},"index.html":{}}}],["category",{"_index":854,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cd",{"_index":2098,"title":{},"body":{"index.html":{}}}],["cdn",{"_index":2076,"title":{},"body":{"index.html":{}}}],["center",{"_index":1218,"title":{},"body":{"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["changedetection",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["changedetectionstrategy",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["changelog",{"_index":1592,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":1594,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":2186,"title":{},"body":{"license.html":{}}}],["charset=utf8",{"_index":601,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["check",{"_index":595,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{}}}],["checkout",{"_index":336,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["checkout'},{'name",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["checkout.component.html",{"_index":443,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.scss",{"_index":444,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutaddressform",{"_index":429,"title":{"interfaces/CheckoutAddressForm.html":{}},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["checkoutbuttonenabled",{"_index":301,"title":{},"body":{"components/CartComponent.html":{}}}],["checkoutcomponent",{"_index":218,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkoutform",{"_index":435,"title":{"interfaces/CheckoutForm.html":{}},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["checks",{"_index":2081,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1981,"title":{},"body":{"index.html":{}}}],["christian",{"_index":2180,"title":{},"body":{"license.html":{}}}],["ci",{"_index":1698,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ci/cd",{"_index":1958,"title":{},"body":{"index.html":{}}}],["city",{"_index":121,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":2232,"title":{},"body":{"license.html":{}}}],["class",{"_index":15,"title":{"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"classes/NavigationItem.html":{},"classes/NoReuseStrategy.html":{},"classes/RouteItem.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["class.bg",{"_index":1222,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["classes",{"_index":532,"title":{},"body":{"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"classes/NavigationItem.html":{},"classes/NoReuseStrategy.html":{},"classes/RouteItem.html":{},"overview.html":{}}}],["click",{"_index":1999,"title":{},"body":{"index.html":{}}}],["client",{"_index":1908,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":252,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["clone",{"_index":1970,"title":{},"body":{"index.html":{}}}],["close",{"_index":329,"title":{},"body":{"components/CartComponent.html":{},"components/NavigationComponent.html":{}}}],["closecart",{"_index":303,"title":{},"body":{"components/CartComponent.html":{}}}],["cloud",{"_index":1696,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloudflare",{"_index":2074,"title":{},"body":{"index.html":{}}}],["code",{"_index":529,"title":{},"body":{"components/CheckoutComponent.html":{},"index.html":{}}}],["collection_formats",{"_index":1021,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns",{"_index":1297,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columns.amount.x",{"_index":1383,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["columns.article.x",{"_index":1375,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["columns.price.x",{"_index":1381,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["columns.qty.x",{"_index":1379,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["commerce",{"_index":1866,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1937,"title":{},"body":{"index.html":{}}}],["commitlint/commitizen",{"_index":1935,"title":{},"body":{"index.html":{}}}],["common",{"_index":696,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["commonmodule",{"_index":295,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["company@example.com",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companydata",{"_index":1280,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["companydata.zipcode",{"_index":1353,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["compatibility",{"_index":680,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["complete",{"_index":1883,"title":{},"body":{"index.html":{}}}],["completed",{"_index":1226,"title":{},"body":{"components/OrderStatusComponent.html":{},"miscellaneous/enumerations.html":{}}}],["component",{"_index":169,"title":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["components",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":2002,"title":{},"body":{"index.html":{}}}],["comprehensive",{"_index":2070,"title":{},"body":{"index.html":{}}}],["computed",{"_index":52,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":2210,"title":{},"body":{"license.html":{}}}],["config",{"_index":804,"title":{},"body":{"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["config.routes.filter(route",{"_index":894,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":246,"title":{},"body":{"interfaces/AuthConfig.html":{},"interfaces/MonitoringConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/print",{"_index":1314,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["configuration",{"_index":145,"title":{"classes/Configuration.html":{}},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration#isjsonmime",{"_index":658,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationfactory",{"_index":139,"title":{},"body":{"modules/ApiModule.html":{}}}],["configurationparameters",{"_index":550,"title":{"interfaces/ConfigurationParameters.html":{}},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["configurationparameters.accesstoken",{"_index":642,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.apikeys",{"_index":636,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.basepath",{"_index":644,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.credentials",{"_index":652,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.encodeparam",{"_index":649,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.encoder",{"_index":648,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.password",{"_index":640,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.username",{"_index":638,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurationparameters.withcredentials",{"_index":646,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["configurations",{"_index":1911,"title":{},"body":{"index.html":{}}}],["configured",{"_index":2118,"title":{},"body":{"index.html":{}}}],["configuring",{"_index":1983,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":2045,"title":{},"body":{"index.html":{}}}],["connect",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["connected",{"_index":2034,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2062,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":2038,"title":{},"body":{"index.html":{}}}],["console.error('could",{"_index":1139,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["console.error(err",{"_index":393,"title":{},"body":{"injectables/CartFacade.html":{}}}],["const",{"_index":64,"title":{},"body":{"interfaces/AdditionalState.html":{},"interfaces/AuthConfig.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":548,"title":{},"body":{"classes/Configuration.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{}}}],["constructor(@optional",{"_index":155,"title":{},"body":{"modules/ApiModule.html":{}}}],["constructor(configurationparameters",{"_index":549,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["constructor(httpclient",{"_index":970,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["constructor(label",{"_index":904,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["containerization",{"_index":1955,"title":{},"body":{"index.html":{}}}],["containers",{"_index":1995,"title":{},"body":{"index.html":{}}}],["content",{"_index":616,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes",{"_index":621,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes.find((x",{"_index":660,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes.length",{"_index":659,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["contenttypes[0",{"_index":662,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["context",{"_index":1045,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["continue",{"_index":337,"title":{},"body":{"components/CartComponent.html":{}}}],["continuous",{"_index":1959,"title":{},"body":{"index.html":{}}}],["contract",{"_index":2236,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":1242,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["copies",{"_index":2205,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2189,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2178,"title":{},"body":{"license.html":{}}}],["core",{"_index":1877,"title":{},"body":{"index.html":{}}}],["correct",{"_index":614,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["count",{"_index":1197,"title":{},"body":{"components/OrderListComponent.html":{}}}],["country",{"_index":122,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["coverage",{"_index":1700,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":1979,"title":{},"body":{"index.html":{}}}],["create",{"_index":1080,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"index.html":{}}}],["create(dto",{"_index":94,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["create(entity",{"_index":1085,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["createcheckoutform",{"_index":452,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["created",{"_index":1200,"title":{},"body":{"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["createdrawoptions",{"_index":1313,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createdrawoptions(doc.internal.pagesize.getwidth",{"_index":1319,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["creates",{"_index":2094,"title":{},"body":{"index.html":{}}}],["creation",{"_index":1991,"title":{},"body":{"index.html":{}}}],["credential",{"_index":655,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["credentials",{"_index":537,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["css",{"_index":1921,"title":{},"body":{"index.html":{}}}],["csv",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curr",{"_index":75,"title":{},"body":{"interfaces/AdditionalState.html":{},"classes/NoReuseStrategy.html":{},"miscellaneous/variables.html":{}}}],["curr.quantity",{"_index":80,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["curr.totalprice",{"_index":77,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["currency",{"_index":332,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["current",{"_index":980,"title":{},"body":{"injectables/OrderApi.html":{}}}],["currentuser",{"_index":1565,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["currentuser()?.firstname",{"_index":1582,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["currentuser()?.lastname",{"_index":1584,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["cursor",{"_index":1522,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["custom",{"_index":706,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"interfaces/Param.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["customhttpparametercodec",{"_index":704,"title":{"classes/CustomHttpParameterCodec.html":{}},"body":{"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{}}}],["customization",{"_index":698,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["d",{"_index":2147,"title":{},"body":{"index.html":{}}}],["d[test",{"_index":2146,"title":{},"body":{"index.html":{}}}],["damages",{"_index":2233,"title":{},"body":{"license.html":{}}}],["dark",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["darker",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":986,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts",{"_index":1079,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":1100,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["data.service.ts:13",{"_index":1091,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["data.service.ts:18",{"_index":1449,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:19",{"_index":1094,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:22",{"_index":1446,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:23",{"_index":1086,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:26",{"_index":1447,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:27",{"_index":1088,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:30",{"_index":1450,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:31",{"_index":1096,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.service.ts:34",{"_index":1451,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["data.service.ts:35",{"_index":1098,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["data.ts",{"_index":1768,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database",{"_index":1927,"title":{},"body":{"index.html":{}}}],["dataformat",{"_index":1075,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dataservice",{"_index":1101,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["dataservicetype",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datatype",{"_index":1074,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datatypes",{"_index":2256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["datatype}s",{"_index":1246,"title":{},"body":{"interfaces/Param.html":{}}}],["date",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["date).toisostring",{"_index":702,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["date).toisostring().substring(0",{"_index":1036,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["datetime",{"_index":733,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["datetimecomponent",{"_index":220,"title":{"components/DateTimeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["days",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":2063,"title":{},"body":{"index.html":{}}}],["dd",{"_index":740,"title":{},"body":{"components/DateTimeComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["deal",{"_index":2193,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2239,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":149,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["decodekey",{"_index":710,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodekey(k",{"_index":714,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodeuricomponent(k",{"_index":726,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodeuricomponent(v",{"_index":727,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodevalue",{"_index":711,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["decodevalue(v",{"_index":717,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["deep",{"_index":1625,"title":{},"body":{"changelog.html":{}}}],["deepobject",{"_index":1237,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["default",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultencodeparam",{"_index":543,"title":{},"body":{"classes/Configuration.html":{}}}],["defaultencodeparam(param",{"_index":590,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["defaultheaders",{"_index":965,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["defaults",{"_index":991,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["defined",{"_index":135,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/HttpValidationProblemDetails.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defintion",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":1081,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["delete(entity",{"_index":1087,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["delete(id",{"_index":103,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["demo",{"_index":11,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"components/AppComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":1792,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":2103,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2072,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1657,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deprecated",{"_index":556,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["deps",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/OrderApi.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["descriptive",{"_index":1654,"title":{},"body":{"changelog.html":{}}}],["deselect",{"_index":2046,"title":{},"body":{"index.html":{}}}],["detachedroutehandle",{"_index":954,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["detail",{"_index":778,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"components/OrderDetailComponent.html":{},"interfaces/ProblemDetails.html":{},"components/ProductDetailComponent.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{}}}],["detail'},{'name",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["detail.component.html",{"_index":1113,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.scss",{"_index":1114,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts",{"_index":1111,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:19",{"_index":1463,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:20",{"_index":1128,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":1131,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":1125,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":1124,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:24",{"_index":1130,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":1127,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["detail.component.ts:27",{"_index":1119,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":1462,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":1122,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["detail/order",{"_index":1110,"title":{},"body":{"components/OrderDetailComponent.html":{},"coverage.html":{}}}],["detail/product",{"_index":1458,"title":{},"body":{"components/ProductDetailComponent.html":{},"coverage.html":{}}}],["details",{"_index":581,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/ProductApi.html":{},"index.html":{}}}],["details.ts",{"_index":777,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["details.ts:11",{"_index":783,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["determine",{"_index":619,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["determined",{"_index":2092,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1934,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1948,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":2135,"title":{},"body":{"index.html":{}}}],["directive",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["directives",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["disabled",{"_index":500,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["discriminator",{"_index":1529,"title":{},"body":{"interfaces/Request.html":{}}}],["display",{"_index":738,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["displaying",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":2201,"title":{},"body":{"license.html":{}}}],["dns",{"_index":2075,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1282,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.addimage('icons/demo",{"_index":1338,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.addpage",{"_index":1397,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.internal.pagesize.getheight",{"_index":1320,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.internal.pagesize.getwidth",{"_index":1399,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.line(options.border.left",{"_index":1416,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.save(`invoice",{"_index":1329,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setdrawcolor(options.line.color.light",{"_index":1415,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfont('helvetica",{"_index":1361,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfont(options.text.font.default",{"_index":1343,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfontsize(options.text.size.small",{"_index":1345,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfontsize(options.text.size.smaller",{"_index":1350,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.setfontsize(options.text.size.tiny",{"_index":1402,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.dark",{"_index":1390,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.darker",{"_index":1373,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.light",{"_index":1346,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.settextcolor(options.text.color.lighter",{"_index":1403,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text('total",{"_index":1395,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text('your",{"_index":1362,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`$${item.totalprice.tofixed(2",{"_index":1394,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`$${item.unitprice.tofixed(2",{"_index":1393,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`$${order.amount.tofixed(2",{"_index":1396,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`${user.address?.city",{"_index":1367,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`${user.address?.street",{"_index":1365,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`${user.firstname",{"_index":1363,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(`invoice",{"_index":1357,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(bankingtext",{"_index":1414,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.amount.label",{"_index":1382,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.article.label",{"_index":1374,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.price.label",{"_index":1380,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(columns.qty.label",{"_index":1378,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.address",{"_index":1351,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.city",{"_index":1352,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.email",{"_index":1355,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.name",{"_index":1347,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(companydata.phone",{"_index":1354,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(date",{"_index":1359,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(item.productname",{"_index":1391,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(item.quantity.tostring",{"_index":1392,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(paymentterms.terms",{"_index":1404,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(user.address?.country",{"_index":1369,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["doc.text(user.email",{"_index":1370,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["docker",{"_index":1954,"title":{},"body":{"index.html":{}}}],["document",{"_index":563,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["documentation",{"_index":1701,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1596,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["domain",{"_index":2129,"title":{},"body":{"index.html":{}}}],["dotnet",{"_index":1881,"title":{},"body":{"index.html":{}}}],["double",{"_index":1252,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["drawoptions",{"_index":1279,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dsn",{"_index":825,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{}}}],["dto",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["dtos",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["due",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1989,"title":{},"body":{"index.html":{}}}],["e",{"_index":1865,"title":{},"body":{"index.html":{}}}],["e[ci",{"_index":2149,"title":{},"body":{"index.html":{}}}],["e[trigger",{"_index":2148,"title":{},"body":{"index.html":{}}}],["ease",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ec2",{"_index":2101,"title":{},"body":{"index.html":{}}}],["edit",{"_index":22,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["educational",{"_index":1869,"title":{},"body":{"index.html":{}}}],["effect",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elem",{"_index":1034,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["element",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["email",{"_index":438,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"components/FormErrorComponent.html":{},"interfaces/UserResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":622,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["enable",{"_index":1666,"title":{},"body":{"changelog.html":{}}}],["enabled",{"_index":824,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{}}}],["encode",{"_index":1230,"title":{},"body":{"interfaces/Param.html":{}}}],["encodekey",{"_index":712,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodekey(k",{"_index":720,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodeparam",{"_index":538,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encoder",{"_index":539,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["encodeuricomponent(k",{"_index":724,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodeuricomponent(string(value",{"_index":703,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["encodeuricomponent(v",{"_index":725,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodevalue",{"_index":713,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encodevalue(v",{"_index":722,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["encoding",{"_index":574,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["end",{"_index":2145,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1614,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":2030,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2059,"title":{},"body":{"index.html":{}}}],["entities",{"_index":1689,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["entities().filter(entity",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":106,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["entity[key",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1852,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/navigation",{"_index":869,"title":{},"body":{"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{}}}],["enums/permission",{"_index":283,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["env",{"_index":1978,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":1980,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1977,"title":{},"body":{"index.html":{}}}],["environment.keycloak",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.sentry",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentproviders",{"_index":889,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["equivalent",{"_index":2028,"title":{},"body":{"index.html":{}}}],["err",{"_index":392,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["error",{"_index":163,"title":{},"body":{"modules/ApiModule.html":{},"components/FormErrorComponent.html":{},"index.html":{}}}],["error'},{'name",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["error('apimodule",{"_index":158,"title":{},"body":{"modules/ApiModule.html":{}}}],["error('key",{"_index":1038,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["error('missing",{"_index":97,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["error('not",{"_index":1107,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["error('required",{"_index":1070,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["error('user",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(err.message",{"_index":394,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["error.component.html",{"_index":749,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.scss",{"_index":750,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts",{"_index":747,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:20",{"_index":757,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error.component.ts:24",{"_index":753,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["error/form",{"_index":746,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["errorhandler",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":751,"title":{},"body":{"components/FormErrorComponent.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{}}}],["errors()?.['email",{"_index":766,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors()?.['required",{"_index":764,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors()?.[\\'email",{"_index":770,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["errors()?.[\\'required",{"_index":768,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["eslint/lint",{"_index":1942,"title":{},"body":{"index.html":{}}}],["etc",{"_index":2126,"title":{},"body":{"index.html":{}}}],["event",{"_index":2228,"title":{},"body":{"license.html":{}}}],["eventcoalescing",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":990,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["example",{"_index":1971,"title":{},"body":{"index.html":{}}}],["examples",{"_index":599,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["exists",{"_index":676,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["explode",{"_index":1073,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["exports",{"_index":150,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{}}}],["express",{"_index":1809,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extended",{"_index":1239,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":913,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["extensions",{"_index":606,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["external",{"_index":2111,"title":{},"body":{"index.html":{}}}],["extracted",{"_index":983,"title":{},"body":{"injectables/OrderApi.html":{}}}],["f",{"_index":2151,"title":{},"body":{"index.html":{}}}],["f49f741",{"_index":1617,"title":{},"body":{"changelog.html":{}}}],["f[update",{"_index":2150,"title":{},"body":{"index.html":{}}}],["factories",{"_index":1679,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":677,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{}}}],["false",{"_index":66,"title":{},"body":{"interfaces/AdditionalState.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["fb",{"_index":445,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["features",{"_index":1602,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fetchall",{"_index":1158,"title":{},"body":{"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{}}}],["fetchbyid",{"_index":1159,"title":{},"body":{"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{}}}],["fetchbyid(id",{"_index":1164,"title":{},"body":{"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["fetchcurrentuser",{"_index":1546,"title":{},"body":{"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["fetching",{"_index":1624,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":758,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["fieldname",{"_index":752,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2192,"title":{},"body":{"license.html":{}}}],["fill",{"_index":2042,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1092,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["filter(item",{"_index":936,"title":{},"body":{"injectables/NavigationService.html":{}}}],["filter.ts",{"_index":1757,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["filteredentities",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalue",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalues",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalues.every(([key",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtervalues.length",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1140,"title":{},"body":{"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{}}}],["find(id",{"_index":1166,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["first",{"_index":520,"title":{},"body":{"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firstbasepath",{"_index":1026,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["firstname",{"_index":436,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UserResponse.html":{}}}],["firstvaluefrom",{"_index":62,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["firstvaluefrom(orderapi.getorderbyid(id",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(productapi.getproductbyid(id",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.addcartitem(dto",{"_index":101,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.removecartitem(id",{"_index":104,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.resolvecurrentshoppingsession",{"_index":90,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(shoppingsessionapi.updatecartitemquantity(id",{"_index":107,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["firstvaluefrom(this.#orderapi.getallordersofcurrentuser",{"_index":1103,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["firstvaluefrom(this.#orderapi.getorderbyid(id",{"_index":1105,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["firstvaluefrom(this.#productapi.getallproducts",{"_index":1454,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["firstvaluefrom(this.#productapi.getproductbyid(id",{"_index":1456,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["firstvaluefrom(this.#shoppingsessionapi.checkout",{"_index":389,"title":{},"body":{"injectables/CartFacade.html":{}}}],["firstvaluefrom(userapi.resolvecurrentuser",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(userapi.updatecurrentuseraddress(update",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom(userapi.updatecurrentuserphone(update",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fitness",{"_index":2224,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1623,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1622,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":993,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["flex",{"_index":1520,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["float",{"_index":1251,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["flowchart",{"_index":2136,"title":{},"body":{"index.html":{}}}],["flows",{"_index":1895,"title":{},"body":{"index.html":{}}}],["fns",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["fns/format",{"_index":1306,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["fns/utc",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["follow",{"_index":1992,"title":{},"body":{"index.html":{}}}],["following",{"_index":2029,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["form.ts",{"_index":431,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["format",{"_index":689,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["format(order.created",{"_index":1358,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["formating",{"_index":1947,"title":{},"body":{"index.html":{}}}],["formats",{"_index":690,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["formbuilder",{"_index":483,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["formcontrol",{"_index":432,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{}}}],["formerrorcomponent",{"_index":223,"title":{"components/FormErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["formgroup",{"_index":433,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{}}}],["formsmodule",{"_index":1508,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["forroot",{"_index":133,"title":{},"body":{"modules/ApiModule.html":{}}}],["forroot(configurationfactory",{"_index":134,"title":{},"body":{"modules/ApiModule.html":{}}}],["found",{"_index":620,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":1914,"title":{},"body":{"index.html":{}}}],["free",{"_index":2185,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":1603,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full",{"_index":1863,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["fullstack",{"_index":2073,"title":{},"body":{"index.html":{}}}],["function",{"_index":140,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{}}}],["functionality",{"_index":1898,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1860,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2208,"title":{},"body":{"license.html":{}}}],["future",{"_index":960,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["g[create",{"_index":2152,"title":{},"body":{"index.html":{}}}],["g[tag",{"_index":2153,"title":{},"body":{"index.html":{}}}],["gate",{"_index":2142,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2003,"title":{},"body":{"index.html":{}}}],["generated",{"_index":17,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["generatepdf",{"_index":1276,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["generatepdf(order",{"_index":1304,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["generates",{"_index":2093,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1909,"title":{},"body":{"index.html":{}}}],["generator",{"_index":19,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["generator.tech",{"_index":21,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["getall",{"_index":342,"title":{},"body":{"injectables/CartFacade.html":{},"injectables/OrderFacade.html":{}}}],["getallordersofcurrentuser",{"_index":968,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getallordersofcurrentuser(observe",{"_index":977,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getallproducts",{"_index":1421,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getallproducts(observe",{"_index":1426,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getauthenticated",{"_index":800,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["getbyid",{"_index":1473,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["getbyid(id",{"_index":1479,"title":{},"body":{"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["getcheckoutenabled",{"_index":453,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getcurrentuser",{"_index":1547,"title":{},"body":{"injectables/UserFacade.html":{}}}],["getfilter",{"_index":1474,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["getfiltered",{"_index":1475,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["getfiltereditems",{"_index":918,"title":{},"body":{"injectables/NavigationService.html":{}}}],["getfiltereditems(type",{"_index":919,"title":{},"body":{"injectables/NavigationService.html":{}}}],["gethasshoppingsession",{"_index":343,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getitembyid(id",{"_index":108,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["getitembyproductid(productid",{"_index":112,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["getitemcount",{"_index":344,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getorderbyid",{"_index":969,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getorderbyid(id",{"_index":999,"title":{},"body":{"injectables/OrderApi.html":{}}}],["getorderbyidrequest",{"_index":771,"title":{"interfaces/GetOrderByIdRequest.html":{}},"body":{"interfaces/GetOrderByIdRequest.html":{},"coverage.html":{}}}],["getproductbyid",{"_index":1422,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getproductbyid(id",{"_index":1431,"title":{},"body":{"injectables/ProductApi.html":{}}}],["getproductbyidrequest",{"_index":773,"title":{"interfaces/GetProductByIdRequest.html":{}},"body":{"interfaces/GetProductByIdRequest.html":{},"coverage.html":{}}}],["getshowcart",{"_index":345,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getsortedbystatusanddate",{"_index":1160,"title":{},"body":{"injectables/OrderFacade.html":{},"miscellaneous/variables.html":{}}}],["getstate(store",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1590,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":262,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{}}}],["gettotalprice",{"_index":346,"title":{},"body":{"injectables/CartFacade.html":{}}}],["getupdateenabled",{"_index":454,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["git",{"_index":1972,"title":{},"body":{"index.html":{}}}],["github",{"_index":1957,"title":{},"body":{"index.html":{}}}],["github.com/christian",{"_index":1879,"title":{},"body":{"index.html":{}}}],["give",{"_index":2061,"title":{},"body":{"index.html":{}}}],["given",{"_index":596,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["go",{"_index":2018,"title":{},"body":{"index.html":{}}}],["gotoproductpage",{"_index":1511,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["granted",{"_index":2184,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2240,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1223,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["h",{"_index":2156,"title":{},"body":{"index.html":{}}}],["h[build",{"_index":2155,"title":{},"body":{"index.html":{}}}],["handled",{"_index":692,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["handling",{"_index":687,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["haspermission",{"_index":263,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["haspermission(permissionstrategy",{"_index":270,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["hasshoppingitems",{"_index":513,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["hasshoppingsession",{"_index":81,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["hasuseraddress",{"_index":514,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["hasuserdatachanges",{"_index":516,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["header",{"_index":1051,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":1069,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1337,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["helmet",{"_index":1665,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["helvetica",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hereby",{"_index":2183,"title":{},"body":{"license.html":{}}}],["history",{"_index":1900,"title":{},"body":{"index.html":{}}}],["holders",{"_index":2230,"title":{},"body":{"license.html":{}}}],["hooks",{"_index":1941,"title":{},"body":{"index.html":{}}}],["host",{"_index":748,"title":{},"body":{"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"index.html":{}}}],["hosting",{"_index":1962,"title":{},"body":{"index.html":{}}}],["html",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["html2canvas",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["html2canvas/jspdf",{"_index":1918,"title":{},"body":{"index.html":{}}}],["http",{"_index":157,"title":{},"body":{"modules/ApiModule.html":{}}}],["http://localhost",{"_index":1004,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["http://localhost:3000",{"_index":2012,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":2014,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":2011,"title":{},"body":{"index.html":{}}}],["http://localhost:4200sentry",{"_index":2017,"title":{},"body":{"index.html":{}}}],["http://localhost:80",{"_index":2058,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":2015,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/admin/master/console/#/demo_shop/realm",{"_index":1997,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/admin/master/console/#/demo_shop/users/add",{"_index":2039,"title":{},"body":{"index.html":{}}}],["http://localhost:80usage",{"_index":2016,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":146,"title":{},"body":{"modules/ApiModule.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpclientmodule",{"_index":165,"title":{},"body":{"modules/ApiModule.html":{}}}],["httpcontext",{"_index":1011,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpevent",{"_index":1010,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpheaderaccept",{"_index":1042,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpheaderaccepts",{"_index":1052,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpheaders",{"_index":1007,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpinterceptorfn",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpparametercodec",{"_index":582,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpparams",{"_index":973,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpparams.append(key",{"_index":1035,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["httpresponse",{"_index":1009,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["https://github.com/angular/angular/issues/18261",{"_index":708,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["https://github.com/angular/angular/issues/20575",{"_index":168,"title":{},"body":{"modules/ApiModule.html":{}}}],["https://github.com/christian",{"_index":1973,"title":{},"body":{"index.html":{}}}],["https://openapi",{"_index":20,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["httpvalidationproblemdetails",{"_index":774,"title":{"interfaces/HttpValidationProblemDetails.html":{}},"body":{"interfaces/HttpValidationProblemDetails.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["husky",{"_index":1939,"title":{},"body":{"index.html":{}}}],["hydrated",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["i.e",{"_index":695,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["i1[network",{"_index":2158,"title":{},"body":{"index.html":{}}}],["i2[ec2",{"_index":2159,"title":{},"body":{"index.html":{}}}],["i[deploy",{"_index":2157,"title":{},"body":{"index.html":{}}}],["iam",{"_index":2123,"title":{},"body":{"index.html":{}}}],["icon",{"_index":398,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon'},{'name",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["icon.component.html",{"_index":399,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.scss",{"_index":400,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.ts",{"_index":397,"title":{},"body":{"components/CartIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:14",{"_index":403,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.ts:15",{"_index":405,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon.component.ts:17",{"_index":402,"title":{},"body":{"components/CartIconComponent.html":{}}}],["icon/cart",{"_index":396,"title":{},"body":{"components/CartIconComponent.html":{},"coverage.html":{}}}],["id",{"_index":100,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CheckoutComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/MonitoredUser.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderResponse.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":982,"title":{},"body":{"injectables/OrderApi.html":{}}}],["ignore",{"_index":1013,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["image",{"_index":1504,"title":{},"body":{"interfaces/ProductResponse.html":{},"changelog.html":{}}}],["imageresponse",{"_index":784,"title":{"interfaces/ImageResponse.html":{}},"body":{"interfaces/ImageResponse.html":{},"interfaces/ProductResponse.html":{},"coverage.html":{}}}],["images",{"_index":1502,"title":{},"body":{"interfaces/ProductResponse.html":{},"index.html":{}}}],["implementation",{"_index":675,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["implemented",{"_index":1108,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["implements",{"_index":709,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["implied",{"_index":2220,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserResponse.html":{}}}],["import('@demo",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":148,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["included",{"_index":2214,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2069,"title":{},"body":{"index.html":{}}}],["including",{"_index":2196,"title":{},"body":{"license.html":{}}}],["incorrectly",{"_index":693,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":782,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["information",{"_index":519,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ProductDetailComponent.html":{}}}],["infrastructure",{"_index":1949,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":1531,"title":{},"body":{"classes/RouteItem.html":{}}}],["init",{"_index":654,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"miscellaneous/variables.html":{}}}],["initialized",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["initialstate",{"_index":65,"title":{},"body":{"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":53,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["inject(activatedroute",{"_index":1123,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/ProductDetailComponent.html":{}}}],["inject(appstore",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["inject(auth_config",{"_index":795,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["inject(authfacade",{"_index":921,"title":{},"body":{"injectables/NavigationService.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(base_path",{"_index":1023,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["inject(cartfacade",{"_index":308,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"components/ProductDetailComponent.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(cartstore",{"_index":364,"title":{},"body":{"injectables/CartFacade.html":{}}}],["inject(formbuilder",{"_index":463,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["inject(keycloakservice",{"_index":278,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["inject(monitoring_config",{"_index":834,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["inject(monitoringfacade",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(navigationservice",{"_index":855,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inject(orderapi",{"_index":1099,"title":{},"body":{"injectables/OrderDataService.html":{},"miscellaneous/variables.html":{}}}],["inject(orderfacade",{"_index":366,"title":{},"body":{"injectables/CartFacade.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["inject(orderstore",{"_index":1170,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["inject(permissionservice",{"_index":280,"title":{},"body":{"injectables/AuthFacade.html":{},"miscellaneous/variables.html":{}}}],["inject(printinvoiceservice",{"_index":1126,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["inject(productapi",{"_index":1452,"title":{},"body":{"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["inject(productfacade",{"_index":857,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{}}}],["inject(productstore",{"_index":1485,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["inject(router",{"_index":465,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(shoppingsessionapi",{"_index":84,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["inject(userapi",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(userfacade",{"_index":467,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(userstore",{"_index":1556,"title":{},"body":{"injectables/UserFacade.html":{}}}],["injectable",{"_index":255,"title":{"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"coverage.html":{}}}],["injectables",{"_index":257,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"overview.html":{}}}],["injectiontoken",{"_index":249,"title":{},"body":{"interfaces/AuthConfig.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{}}}],["injectiontoken('auth_config",{"_index":254,"title":{},"body":{"interfaces/AuthConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('basepath",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('monitoring_config",{"_index":828,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('navigation_config",{"_index":892,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":421,"title":{},"body":{"components/CartItemsComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{},"components/UserNavigationComponent.html":{}}}],["input('field",{"_index":756,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["input('mmm",{"_index":739,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["input('utc",{"_index":743,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["input(false",{"_index":1574,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["input.required",{"_index":419,"title":{},"body":{"components/CartItemsComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{}}}],["inputs",{"_index":1207,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["inputsignal",{"_index":736,"title":{},"body":{"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{}}}],["install",{"_index":1975,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1969,"title":{},"body":{"index.html":{}}}],["instance",{"_index":779,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{}}}],["instanceof",{"_index":701,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["instead",{"_index":554,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{}}}],["int32",{"_index":1076,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["int64",{"_index":1250,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["integer",{"_index":1245,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["integration",{"_index":2027,"title":{},"body":{"index.html":{}}}],["integration/continuous",{"_index":1960,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1888,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"overview.html":{}}}],["internet",{"_index":604,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["invalid",{"_index":767,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["invoice",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoice.config",{"_index":1315,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.config.ts",{"_index":1766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invoice.service",{"_index":1134,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["invoice.service.ts",{"_index":1265,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["invoice.service.ts:100",{"_index":1301,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:118",{"_index":1303,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:146",{"_index":1299,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:15",{"_index":1305,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:157",{"_index":1295,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:163",{"_index":1287,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:181",{"_index":1291,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:31",{"_index":1293,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:41",{"_index":1281,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:64",{"_index":1289,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["invoice.service.ts:76",{"_index":1284,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["ip_address",{"_index":841,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["isauthenticated",{"_index":264,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["ischeckoutenabled",{"_index":448,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["isdevmode",{"_index":2301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isjsonmime",{"_index":544,"title":{},"body":{"classes/Configuration.html":{}}}],["isjsonmime(mime",{"_index":593,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["issmallscreen",{"_index":1566,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["issues",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["istype",{"_index":931,"title":{},"body":{"injectables/NavigationService.html":{}}}],["istype(item.type",{"_index":937,"title":{},"body":{"injectables/NavigationService.html":{}}}],["isupdateenabled",{"_index":449,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["item",{"_index":8,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"components/OrderDetailComponent.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"coverage.html":{}}}],["item.id",{"_index":424,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["item.label",{"_index":882,"title":{},"body":{"components/NavigationComponent.html":{}}}],["item.productid",{"_index":114,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"miscellaneous/variables.html":{}}}],["item.productname",{"_index":425,"title":{},"body":{"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{}}}],["item.quantity",{"_index":377,"title":{},"body":{"injectables/CartFacade.html":{},"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{}}}],["item.tolowercase().includes(filtervalue.tolowercase",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.totalprice",{"_index":426,"title":{},"body":{"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{}}}],["item.ts",{"_index":899,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["item.ts:10",{"_index":908,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:13",{"_index":910,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:18",{"_index":1530,"title":{},"body":{"classes/RouteItem.html":{}}}],["item.ts:5",{"_index":905,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:8",{"_index":907,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.ts:9",{"_index":909,"title":{},"body":{"classes/NavigationItem.html":{}}}],["item.unitprice",{"_index":1153,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["item401",{"_index":1016,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["itemcount",{"_index":79,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":302,"title":{},"body":{"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ShoppingSessionResponse.html":{}}}],["items'},{'name",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["items.component",{"_index":322,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["items.component.html",{"_index":415,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items.component.scss",{"_index":416,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items.component.ts",{"_index":414,"title":{},"body":{"components/CartItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:15",{"_index":420,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items.component.ts:17",{"_index":418,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["items/cart",{"_index":321,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"coverage.html":{}}}],["itemsincart",{"_index":401,"title":{},"body":{"components/CartIconComponent.html":{}}}],["itemtype",{"_index":932,"title":{},"body":{"injectables/NavigationService.html":{}}}],["j",{"_index":2161,"title":{},"body":{"index.html":{}}}],["j1[rds",{"_index":2162,"title":{},"body":{"index.html":{}}}],["j2[ec2",{"_index":2163,"title":{},"body":{"index.html":{}}}],["j3[ec2",{"_index":2164,"title":{},"body":{"index.html":{}}}],["j4[ec2",{"_index":2165,"title":{},"body":{"index.html":{}}}],["j5[s3",{"_index":2166,"title":{},"body":{"index.html":{}}}],["j[deploy",{"_index":2160,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":1916,"title":{},"body":{"index.html":{}}}],["jest",{"_index":1932,"title":{},"body":{"index.html":{}}}],["js",{"_index":802,"title":{},"body":{"injectables/KeycloakService.html":{},"dependencies.html":{}}}],["json",{"_index":598,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["jsonmime",{"_index":666,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["jsonmime.test(mime",{"_index":671,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["jspdf",{"_index":1278,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"dependencies.html":{}}}],["jspdf('p",{"_index":1316,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["k",{"_index":716,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{}}}],["k1[cloudflare",{"_index":2168,"title":{},"body":{"index.html":{}}}],["k2[cloudflare",{"_index":2169,"title":{},"body":{"index.html":{}}}],["k3[cloudflare",{"_index":2170,"title":{},"body":{"index.html":{}}}],["k4[cloudflare",{"_index":2171,"title":{},"body":{"index.html":{}}}],["k[configure",{"_index":2167,"title":{},"body":{"index.html":{}}}],["key",{"_index":610,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"injectables/OrderApi.html":{},"injectables/PermissionService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{}}}],["keycloak",{"_index":247,"title":{},"body":{"interfaces/AuthConfig.html":{},"injectables/KeycloakService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["keycloak(this.authconfig.keycloak",{"_index":797,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["keycloak.service",{"_index":1260,"title":{},"body":{"injectables/PermissionService.html":{}}}],["keycloak_admin",{"_index":2040,"title":{},"body":{"index.html":{}}}],["keycloak_admin_password",{"_index":2041,"title":{},"body":{"index.html":{}}}],["keycloak_realm_public_key",{"_index":1985,"title":{},"body":{"index.html":{}}}],["keycloakservice",{"_index":259,"title":{"injectables/KeycloakService.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"injectables/PermissionService.html":{},"coverage.html":{}}}],["keys",{"_index":559,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["key}.${k",{"_index":1041,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["kind",{"_index":2219,"title":{},"body":{"license.html":{}}}],["label",{"_index":900,"title":{},"body":{"classes/NavigationItem.html":{},"interfaces/Param.html":{},"classes/RouteItem.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":1656,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":521,"title":{},"body":{"components/CheckoutComponent.html":{},"index.html":{}}}],["lastname",{"_index":437,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UserResponse.html":{}}}],["later",{"_index":1966,"title":{},"body":{"index.html":{}}}],["left",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"overview.html":{}}}],["lg",{"_index":1210,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["lg:ml",{"_index":1521,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["liability",{"_index":2234,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2231,"title":{},"body":{"license.html":{}}}],["lib",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["libraries",{"_index":1893,"title":{},"body":{"index.html":{}}}],["library",{"_index":1890,"title":{},"body":{"index.html":{}}}],["libs/.../add",{"_index":2246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../api.ts",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../auth",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../auth.interceptor.ts",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../cart",{"_index":2249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../cart.animations.ts",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../cart.store.ts",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../company",{"_index":2250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../draw",{"_index":2252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../monitoring",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../navigation",{"_index":1853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../navigation.animations.ts",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../order",{"_index":1855,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["libs/.../order.routes.ts",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../order.store.ts",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../param.ts",{"_index":2251,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../payment",{"_index":2253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../pdf",{"_index":2254,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../permission",{"_index":1857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../permission.guard.ts",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../print",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../product",{"_index":2247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../product.store.ts",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../provide",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../user.store.ts",{"_index":2255,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/.../variables.ts",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/api/api.module.ts",{"_index":130,"title":{},"body":{"modules/ApiModule.html":{}}}],["libs/api/api.module.ts:12",{"_index":136,"title":{},"body":{"modules/ApiModule.html":{}}}],["libs/api/api/api.ts",{"_index":1718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/api/api/order",{"_index":963,"title":{},"body":{"injectables/OrderApi.html":{},"coverage.html":{}}}],["libs/api/api/product",{"_index":1420,"title":{},"body":{"injectables/ProductApi.html":{},"coverage.html":{}}}],["libs/api/api/shopping",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["libs/api/api/user",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["libs/api/configuration.ts",{"_index":533,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"coverage.html":{}}}],["libs/api/configuration.ts:103",{"_index":631,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:122",{"_index":612,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:144",{"_index":594,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:149",{"_index":609,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:154",{"_index":592,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:41",{"_index":557,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:42",{"_index":588,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:43",{"_index":587,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:47",{"_index":555,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:48",{"_index":558,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:49",{"_index":589,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:53",{"_index":583,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:61",{"_index":573,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/configuration.ts:67",{"_index":551,"title":{},"body":{"classes/Configuration.html":{}}}],["libs/api/encoder.ts",{"_index":705,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{},"coverage.html":{}}}],["libs/api/encoder.ts:11",{"_index":723,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/encoder.ts:14",{"_index":715,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/encoder.ts:17",{"_index":718,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/encoder.ts:8",{"_index":721,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["libs/api/model/add",{"_index":6,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/api/model/address",{"_index":118,"title":{},"body":{"interfaces/AddressResponse.html":{},"coverage.html":{}}}],["libs/api/model/cart",{"_index":409,"title":{},"body":{"interfaces/CartItemResponse.html":{},"coverage.html":{}}}],["libs/api/model/get",{"_index":772,"title":{},"body":{"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"coverage.html":{}}}],["libs/api/model/http",{"_index":775,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"coverage.html":{}}}],["libs/api/model/image",{"_index":785,"title":{},"body":{"interfaces/ImageResponse.html":{},"coverage.html":{}}}],["libs/api/model/order",{"_index":1180,"title":{},"body":{"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["libs/api/model/problem",{"_index":1418,"title":{},"body":{"interfaces/ProblemDetails.html":{},"coverage.html":{}}}],["libs/api/model/product",{"_index":1501,"title":{},"body":{"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"coverage.html":{}}}],["libs/api/model/remove",{"_index":1527,"title":{},"body":{"interfaces/RemoveCartItemRequest.html":{},"coverage.html":{}}}],["libs/api/model/request.ts",{"_index":1528,"title":{},"body":{"interfaces/Request.html":{},"coverage.html":{}}}],["libs/api/model/shopping",{"_index":1538,"title":{},"body":{"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{}}}],["libs/api/model/update",{"_index":1539,"title":{},"body":{"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"coverage.html":{}}}],["libs/api/model/user",{"_index":1588,"title":{},"body":{"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["libs/api/model/validation",{"_index":1589,"title":{},"body":{"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["libs/api/param.ts",{"_index":1229,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/api/variables.ts",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/auth.facade.ts",{"_index":258,"title":{},"body":{"injectables/AuthFacade.html":{},"coverage.html":{}}}],["libs/auth/src/lib/auth.facade.ts:10",{"_index":279,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:11",{"_index":281,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:13",{"_index":268,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:17",{"_index":275,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:21",{"_index":276,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:25",{"_index":277,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:29",{"_index":274,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:33",{"_index":273,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/auth.facade.ts:37",{"_index":269,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["libs/auth/src/lib/enums/permission",{"_index":1859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/auth/src/lib/guards/permission.guard.ts",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/interceptors/auth.interceptor.ts",{"_index":1748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/models/auth",{"_index":245,"title":{},"body":{"interfaces/AuthConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/providers/provide",{"_index":1750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts",{"_index":787,"title":{},"body":{"injectables/KeycloakService.html":{},"coverage.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:11",{"_index":799,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:15",{"_index":801,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:19",{"_index":798,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:21",{"_index":791,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:28",{"_index":792,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:32",{"_index":793,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:36",{"_index":794,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/keycloak.service.ts:9",{"_index":796,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["libs/auth/src/lib/services/permission.service.ts",{"_index":1255,"title":{},"body":{"injectables/PermissionService.html":{},"coverage.html":{}}}],["libs/auth/src/lib/services/permission.service.ts:10",{"_index":1259,"title":{},"body":{"injectables/PermissionService.html":{}}}],["libs/auth/src/lib/services/permission.service.ts:14",{"_index":1257,"title":{},"body":{"injectables/PermissionService.html":{}}}],["libs/auth/src/lib/services/permission.service.ts:9",{"_index":1258,"title":{},"body":{"injectables/PermissionService.html":{}}}],["libs/cart/src/lib/+state/cart.store.ts",{"_index":35,"title":{},"body":{"interfaces/AdditionalState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/cart/src/lib/cart.facade.ts",{"_index":339,"title":{},"body":{"injectables/CartFacade.html":{},"coverage.html":{}}}],["libs/cart/src/lib/cart.facade.ts:11",{"_index":365,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:12",{"_index":368,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:13",{"_index":367,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:15",{"_index":352,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:19",{"_index":357,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:23",{"_index":355,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:27",{"_index":350,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:39",{"_index":363,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:43",{"_index":359,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:53",{"_index":356,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:57",{"_index":354,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:61",{"_index":360,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:65",{"_index":358,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/cart.facade.ts:69",{"_index":351,"title":{},"body":{"injectables/CartFacade.html":{}}}],["libs/cart/src/lib/components/cart",{"_index":395,"title":{},"body":{"components/CartIconComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/components/cart/cart.animations.ts",{"_index":1754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts",{"_index":294,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:18",{"_index":309,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:19",{"_index":313,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:20",{"_index":311,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:21",{"_index":317,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:22",{"_index":315,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:24",{"_index":307,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/cart/cart.component.ts:28",{"_index":305,"title":{},"body":{"components/CartComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts",{"_index":441,"title":{},"body":{"components/CheckoutComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:112",{"_index":458,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:122",{"_index":459,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:21",{"_index":470,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:22",{"_index":474,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:23",{"_index":472,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:24",{"_index":462,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:25",{"_index":475,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:26",{"_index":476,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:27",{"_index":468,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:28",{"_index":481,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:29",{"_index":464,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:30",{"_index":466,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:31",{"_index":479,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:33",{"_index":460,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:37",{"_index":456,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:46",{"_index":461,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/checkout/checkout.component.ts:57",{"_index":457,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["libs/cart/src/lib/components/shared/cart",{"_index":413,"title":{},"body":{"components/CartItemsComponent.html":{},"coverage.html":{}}}],["libs/cart/src/lib/models/cart",{"_index":1756,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/cart/src/lib/models/checkout",{"_index":430,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"interfaces/CheckoutForm.html":{},"coverage.html":{}}}],["libs/monitoring/src/lib/models/monitored",{"_index":819,"title":{},"body":{"interfaces/MonitoredUser.html":{},"coverage.html":{}}}],["libs/monitoring/src/lib/models/monitoring",{"_index":822,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/monitoring/src/lib/monitoring.facade.ts",{"_index":830,"title":{},"body":{"injectables/MonitoringFacade.html":{},"coverage.html":{}}}],["libs/monitoring/src/lib/monitoring.facade.ts:10",{"_index":835,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["libs/monitoring/src/lib/monitoring.facade.ts:12",{"_index":833,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["libs/monitoring/src/lib/providers/provide",{"_index":1759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.animations.ts",{"_index":1762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts",{"_index":843,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:33",{"_index":864,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:34",{"_index":866,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:36",{"_index":858,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:37",{"_index":859,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:38",{"_index":856,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:40",{"_index":862,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/navigation.component.ts:42",{"_index":853,"title":{},"body":{"components/NavigationComponent.html":{}}}],["libs/navigation/src/lib/components/navigation/user",{"_index":1563,"title":{},"body":{"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/enums/navigation",{"_index":1858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/navigation/src/lib/models/navigation",{"_index":898,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts",{"_index":917,"title":{},"body":{"injectables/NavigationService.html":{},"coverage.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts:10",{"_index":922,"title":{},"body":{"injectables/NavigationService.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts:12",{"_index":930,"title":{},"body":{"injectables/NavigationService.html":{}}}],["libs/navigation/src/lib/services/navigation.service.ts:22",{"_index":920,"title":{},"body":{"injectables/NavigationService.html":{}}}],["libs/navigation/src/lib/util/provide",{"_index":886,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/+state/order.store.ts",{"_index":1764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/components/order",{"_index":1109,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["libs/order/src/lib/components/shared/order",{"_index":1203,"title":{},"body":{"components/OrderStatusComponent.html":{},"coverage.html":{}}}],["libs/order/src/lib/config/print",{"_index":1765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/models/company",{"_index":1767,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/draw",{"_index":1769,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/order",{"_index":1771,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/payment",{"_index":1772,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/models/pdf",{"_index":1774,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/order/src/lib/order.facade.ts",{"_index":1155,"title":{},"body":{"injectables/OrderFacade.html":{},"coverage.html":{}}}],["libs/order/src/lib/order.facade.ts:11",{"_index":1163,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:15",{"_index":1165,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:19",{"_index":1162,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:23",{"_index":1167,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:27",{"_index":1168,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:31",{"_index":1169,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.facade.ts:9",{"_index":1171,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["libs/order/src/lib/order.routes.ts",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/order/src/lib/services/order",{"_index":1078,"title":{},"body":{"injectables/OrderDataService.html":{},"coverage.html":{}}}],["libs/order/src/lib/services/print",{"_index":1264,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["libs/product/src/lib/+state/product.store.ts",{"_index":1780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/product/src/lib/components/product",{"_index":1457,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["libs/product/src/lib/models/product",{"_index":1781,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["libs/product/src/lib/product.facade.ts",{"_index":1472,"title":{},"body":{"injectables/ProductFacade.html":{},"coverage.html":{}}}],["libs/product/src/lib/product.facade.ts:10",{"_index":1486,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:12",{"_index":1477,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:16",{"_index":1478,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:20",{"_index":1482,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:24",{"_index":1481,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:28",{"_index":1480,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/product.facade.ts:32",{"_index":1484,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["libs/product/src/lib/services/product",{"_index":1445,"title":{},"body":{"injectables/ProductDataService.html":{},"coverage.html":{}}}],["libs/shared/src/lib/components/date",{"_index":728,"title":{},"body":{"components/DateTimeComponent.html":{},"coverage.html":{}}}],["libs/shared/src/lib/components/form",{"_index":745,"title":{},"body":{"components/FormErrorComponent.html":{},"coverage.html":{}}}],["libs/user/src/lib/+state/user.store.ts",{"_index":1787,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["libs/user/src/lib/user.facade.ts",{"_index":1544,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["libs/user/src/lib/user.facade.ts:11",{"_index":1550,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:15",{"_index":1551,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:19",{"_index":1553,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:23",{"_index":1555,"title":{},"body":{"injectables/UserFacade.html":{}}}],["libs/user/src/lib/user.facade.ts:9",{"_index":1557,"title":{},"body":{"injectables/UserFacade.html":{}}}],["license",{"_index":2174,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":2175,"title":{},"body":{"index.html":{}}}],["light",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lighter",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":2197,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2221,"title":{},"body":{"license.html":{}}}],["limitfornewcontent",{"_index":1384,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["limiting",{"_index":1668,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["line",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linear",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":634,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{}}}],["links",{"_index":1626,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1945,"title":{},"body":{"index.html":{}}}],["list",{"_index":1019,"title":{},"body":{"injectables/OrderApi.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"injectables/ProductApi.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["list'},{'name",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["list.component.html",{"_index":1183,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.scss",{"_index":1184,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts",{"_index":1182,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":1190,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts:20",{"_index":1188,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts:21",{"_index":1193,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:22",{"_index":1187,"title":{},"body":{"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["list.component.ts:23",{"_index":1192,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list.component.ts:25",{"_index":1186,"title":{},"body":{"components/OrderListComponent.html":{}}}],["list/order",{"_index":1181,"title":{},"body":{"components/OrderListComponent.html":{},"coverage.html":{}}}],["list/product",{"_index":1495,"title":{},"body":{"components/ProductListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":248,"title":{},"body":{"interfaces/AuthConfig.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/MonitoringConfig.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1082,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["load(filter",{"_index":1089,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["loadbyid",{"_index":1083,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["loadbyid(id",{"_index":1093,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["loadchildren",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loaded",{"_index":160,"title":{},"body":{"modules/ApiModule.html":{}}}],["loadshoppingsession",{"_index":86,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["localvarheaders",{"_index":1047,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarheaders.set('accept",{"_index":1054,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarhttpcontext",{"_index":1055,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarhttpheaderacceptselected",{"_index":1049,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarhttpheaderacceptselected.startswith('text",{"_index":1061,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvarpath",{"_index":1063,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["localvartransfercache",{"_index":1057,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["locations",{"_index":1240,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["logging",{"_index":1903,"title":{},"body":{"index.html":{}}}],["login",{"_index":265,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["logonly",{"_index":2300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":266,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"components/UserNavigationComponent.html":{}}}],["lookupcredential",{"_index":545,"title":{},"body":{"classes/Configuration.html":{}}}],["lookupcredential(key",{"_index":608,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["m.orderroutes",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m.productroutes",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m[upload",{"_index":2173,"title":{},"body":{"index.html":{}}}],["made",{"_index":629,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mail",{"_index":605,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["main",{"_index":2079,"title":{},"body":{"index.html":{}}}],["makeenvironmentproviders",{"_index":890,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1896,"title":{},"body":{"index.html":{}}}],["manages",{"_index":2112,"title":{},"body":{"index.html":{}}}],["manually",{"_index":23,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":564,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["margin",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":1234,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":1215,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["max_thumbnails",{"_index":1185,"title":{},"body":{"components/OrderListComponent.html":{}}}],["maxage",{"_index":2299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":881,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menuitems",{"_index":848,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["merchantability",{"_index":2223,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2083,"title":{},"body":{"index.html":{},"license.html":{}}}],["messages",{"_index":1938,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"dependencies.html":{}}}],["method",{"_index":633,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["methods",{"_index":131,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["middle",{"_index":1377,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"components/ProductSearchComponent.html":{}}}],["mime",{"_index":597,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mime.tolowercase",{"_index":672,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["minus",{"_index":567,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["miscellaneous",{"_index":1851,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":678,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mit",{"_index":2177,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mm",{"_index":1317,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["mobilemenuopen",{"_index":849,"title":{},"body":{"components/NavigationComponent.html":{}}}],["mock",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1674,"title":{},"body":{"changelog.html":{}}}],["model/add",{"_index":1015,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["model/order",{"_index":1018,"title":{},"body":{"injectables/OrderApi.html":{}}}],["model/product",{"_index":1438,"title":{},"body":{"injectables/ProductApi.html":{}}}],["model/validation",{"_index":1441,"title":{},"body":{"injectables/ProductApi.html":{}}}],["models/auth",{"_index":803,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["models/checkout",{"_index":485,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["models/company",{"_index":1307,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/draw",{"_index":1310,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/monitored",{"_index":836,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["models/monitoring",{"_index":838,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["models/navigation",{"_index":870,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{}}}],["models/order",{"_index":1102,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["models/payment",{"_index":1308,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/pdf",{"_index":1311,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["models/product",{"_index":1453,"title":{},"body":{"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{}}}],["modern",{"_index":1872,"title":{},"body":{"index.html":{}}}],["modify",{"_index":2199,"title":{},"body":{"license.html":{}}}],["module",{"_index":127,"title":{"modules/ApiModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":129,"title":{"modules.html":{}},"body":{"modules/ApiModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":142,"title":{},"body":{"modules/ApiModule.html":{}}}],["monitoreduser",{"_index":818,"title":{"interfaces/MonitoredUser.html":{}},"body":{"interfaces/MonitoredUser.html":{},"injectables/MonitoringFacade.html":{},"coverage.html":{}}}],["monitoring",{"_index":1901,"title":{},"body":{"index.html":{}}}],["monitoring.ts",{"_index":1760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoring_config",{"_index":827,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoringconfig",{"_index":821,"title":{"interfaces/MonitoringConfig.html":{}},"body":{"interfaces/MonitoringConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoringfacade",{"_index":829,"title":{"injectables/MonitoringFacade.html":{}},"body":{"injectables/MonitoringFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monitoringfacade.setuser",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mono",{"_index":1950,"title":{},"body":{"index.html":{}}}],["more",{"_index":580,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{},"index.html":{}}}],["multi",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multipurpose",{"_index":603,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["mvp",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["n",{"_index":166,"title":{},"body":{"modules/ApiModule.html":{}}}],["name",{"_index":138,"title":{},"body":{"modules/ApiModule.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/ImageResponse.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":560,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["national",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigate",{"_index":2043,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"index.html":{}}}],["navigation'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["navigation.animations",{"_index":872,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component",{"_index":874,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.html",{"_index":844,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":845,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserNavigationComponent.html":{}}}],["navigation.component.ts",{"_index":1564,"title":{},"body":{"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["navigation.component.ts:16",{"_index":1577,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:18",{"_index":1570,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:19",{"_index":1572,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:20",{"_index":1573,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:21",{"_index":1571,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:23",{"_index":1567,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:28",{"_index":1569,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.component.ts:33",{"_index":1568,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["navigation.ts",{"_index":887,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigation/user",{"_index":873,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["navigation_config",{"_index":891,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigationcomponent",{"_index":184,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["navigationconfig",{"_index":885,"title":{"interfaces/NavigationConfig.html":{}},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{}}}],["navigationitem",{"_index":897,"title":{"classes/NavigationItem.html":{}},"body":{"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["navigationitem:13",{"_index":1536,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:18",{"_index":1533,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:23",{"_index":1532,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:8",{"_index":1534,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationitem:9",{"_index":1535,"title":{},"body":{"classes/RouteItem.html":{}}}],["navigationservice",{"_index":846,"title":{"injectables/NavigationService.html":{}},"body":{"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"coverage.html":{}}}],["navigationtype",{"_index":868,"title":{},"body":{"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"miscellaneous/enumerations.html":{}}}],["navigationtype.route",{"_index":914,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["nbsp",{"_index":1583,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["need",{"_index":164,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["needed",{"_index":1986,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["nestjs",{"_index":1922,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":2001,"title":{},"body":{"index.html":{}}}],["new",{"_index":96,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"interfaces/AuthConfig.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1996,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":143,"title":{},"body":{"modules/ApiModule.html":{}}}],["ngoninit",{"_index":1117,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["ngoptimizedimage",{"_index":296,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{}}}],["ngrx",{"_index":1917,"title":{},"body":{"index.html":{}}}],["ngrx/signals",{"_index":46,"title":{},"body":{"interfaces/AdditionalState.html":{},"dependencies.html":{}}}],["ngrx/signals/entities",{"_index":57,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["node",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1923,"title":{},"body":{"index.html":{}}}],["none",{"_index":842,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["noninfringement",{"_index":2227,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":502,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["noreusestrategy",{"_index":943,"title":{"classes/NoReuseStrategy.html":{}},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":1387,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["notable",{"_index":1593,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":14,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{}}}],["notice",{"_index":2212,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1967,"title":{},"body":{"index.html":{}}}],["npx",{"_index":2023,"title":{},"body":{"index.html":{}}}],["null",{"_index":38,"title":{},"body":{"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/HttpValidationProblemDetails.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":28,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"components/CheckoutComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/MonitoredUser.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductResponse.html":{},"interfaces/RemoveCartItemRequest.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":1694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nx.json",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1030,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(filter",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(value).foreach",{"_index":1039,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["observable",{"_index":987,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["observe",{"_index":984,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["obtaining",{"_index":2188,"title":{},"body":{"license.html":{}}}],["older",{"_index":681,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["omit",{"_index":1982,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":1112,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"miscellaneous/variables.html":{}}}],["oninit(store",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onload",{"_index":808,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["onsameurlnavigation",{"_index":2295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacity",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":884,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["openapi",{"_index":18,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["openapi/swagger",{"_index":1925,"title":{},"body":{"index.html":{}}}],["openapigenerator",{"_index":1907,"title":{},"body":{"index.html":{}}}],["optional",{"_index":26,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"classes/RouteItem.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":901,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{}}}],["options.border.bottom",{"_index":1385,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.border.left",{"_index":1332,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.border.right",{"_index":1341,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.border.top",{"_index":1334,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.context",{"_index":1056,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["options.httpheaderaccept",{"_index":1050,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["options.pointer.x",{"_index":1331,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.pointer.y",{"_index":1333,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["options.transfercache",{"_index":1058,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["options.ts",{"_index":1770,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orange",{"_index":1227,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["order",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["order().amount",{"_index":1154,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["order().id",{"_index":1142,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["order().items",{"_index":1152,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["order.amount",{"_index":1198,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.facade",{"_index":1132,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["order.id",{"_index":1195,"title":{},"body":{"components/OrderListComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["order.id}.pdf",{"_index":1330,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["order.items",{"_index":1196,"title":{},"body":{"components/OrderListComponent.html":{}}}],["order.items.foreach(item",{"_index":1388,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["orderapi",{"_index":962,"title":{"injectables/OrderApi.html":{}},"body":{"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderdataservice",{"_index":1077,"title":{"injectables/OrderDataService.html":{}},"body":{"injectables/OrderDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderdetailcomponent",{"_index":227,"title":{"components/OrderDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderfacade",{"_index":340,"title":{"injectables/OrderFacade.html":{}},"body":{"injectables/CartFacade.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"coverage.html":{}}}],["orderfilter",{"_index":1090,"title":{},"body":{"injectables/OrderDataService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["orderitemresponse",{"_index":1179,"title":{"interfaces/OrderItemResponse.html":{}},"body":{"interfaces/OrderItemResponse.html":{},"interfaces/OrderResponse.html":{},"coverage.html":{}}}],["orderlistcomponent",{"_index":230,"title":{"components/OrderListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderlistresponse",{"_index":1017,"title":{"interfaces/OrderListResponse.html":{}},"body":{"injectables/OrderApi.html":{},"interfaces/OrderListResponse.html":{},"coverage.html":{}}}],["orderresponse",{"_index":370,"title":{"interfaces/OrderResponse.html":{}},"body":{"injectables/CartFacade.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["orderroutes",{"_index":1778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orders",{"_index":928,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"components/OrderListComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["orderstatus",{"_index":1202,"title":{},"body":{"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.created",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderstatuscomponent",{"_index":232,"title":{"components/OrderStatusComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["orderstore",{"_index":1156,"title":{},"body":{"injectables/OrderFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orm",{"_index":1926,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":607,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"license.html":{}}}],["out",{"_index":1586,"title":{},"body":{"components/UserNavigationComponent.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":422,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["outputs",{"_index":417,"title":{},"body":{"components/CartItemsComponent.html":{}}}],["override",{"_index":632,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["overview",{"_index":1882,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1791,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagetitle",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panel",{"_index":330,"title":{},"body":{"components/CartComponent.html":{}}}],["param",{"_index":591,"title":{"interfaces/Param.html":{}},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"coverage.html":{}}}],["param.dataformat",{"_index":699,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["param.value",{"_index":700,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["parameter",{"_index":577,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"miscellaneous/functions.html":{}}}],["paramlocation",{"_index":1231,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["paramstyle",{"_index":1232,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["parentmodule",{"_index":156,"title":{},"body":{"modules/ApiModule.html":{}}}],["particular",{"_index":2225,"title":{},"body":{"license.html":{}}}],["password",{"_index":540,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["patch+json",{"_index":673,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["patchstate",{"_index":41,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["patchstate(store",{"_index":91,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":576,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":734,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["payment",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentterms",{"_index":1286,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["paymentterms.accountname",{"_index":1410,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["paymentterms.accountnumber",{"_index":1411,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["paymentterms.bankname",{"_index":1408,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["paymentterms.routingnumber",{"_index":1413,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["pdf",{"_index":1919,"title":{},"body":{"index.html":{}}}],["pdfcolumn",{"_index":1776,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["pdftablecolumns",{"_index":1298,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":1902,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2182,"title":{},"body":{"license.html":{}}}],["permissionguard",{"_index":1747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissions",{"_index":2115,"title":{},"body":{"index.html":{}}}],["permissionservice",{"_index":260,"title":{"injectables/PermissionService.html":{}},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionservice.haspermission(permissionstrategy.authenticated",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissionstrategies",{"_index":1256,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permissionstrategy",{"_index":271,"title":{},"body":{"injectables/AuthFacade.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/PermissionService.html":{},"classes/RouteItem.html":{},"miscellaneous/enumerations.html":{}}}],["permissionstrategy.authenticated",{"_index":929,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/PermissionService.html":{}}}],["permissionstrategyfn",{"_index":1261,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permissionstrategyfn.bind(this",{"_index":1263,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permit",{"_index":2206,"title":{},"body":{"license.html":{}}}],["person",{"_index":2187,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2207,"title":{},"body":{"license.html":{}}}],["pgadmin",{"_index":2009,"title":{},"body":{"index.html":{}}}],["pgadmin_default_password",{"_index":2060,"title":{},"body":{"index.html":{}}}],["phase",{"_index":2099,"title":{},"body":{"index.html":{}}}],["phone",{"_index":439,"title":{},"body":{"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phone.value",{"_index":496,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["phone?.dirty",{"_index":494,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["pipedelimited",{"_index":1236,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["pipeline",{"_index":2071,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":1963,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1247,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["png",{"_index":1340,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["pointer",{"_index":1523,"title":{},"body":{"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":2216,"title":{},"body":{"license.html":{}}}],["postal",{"_index":528,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["postgres",{"_index":2008,"title":{},"body":{"index.html":{}}}],["postgres_password",{"_index":2065,"title":{},"body":{"index.html":{}}}],["postgres_user",{"_index":2064,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":1929,"title":{},"body":{"index.html":{}}}],["pr",{"_index":2078,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1940,"title":{},"body":{"index.html":{}}}],["prefixes",{"_index":569,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["prerequisites",{"_index":1965,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1946,"title":{},"body":{"index.html":{}}}],["price",{"_index":450,"title":{},"body":{"components/CheckoutComponent.html":{},"interfaces/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["print",{"_index":1151,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["printinvoiceservice",{"_index":1116,"title":{"injectables/PrintInvoiceService.html":{}},"body":{"components/OrderDetailComponent.html":{},"injectables/PrintInvoiceService.html":{},"coverage.html":{}}}],["printpdf",{"_index":1118,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["printpdf(order",{"_index":1120,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["prisma",{"_index":1843,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["prisma/client",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["prisma:generate",{"_index":2004,"title":{},"body":{"index.html":{}}}],["prisma:migrate:dev",{"_index":2007,"title":{},"body":{"index.html":{}}}],["prisma:seedthe",{"_index":2049,"title":{},"body":{"index.html":{}}}],["private",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["probably",{"_index":691,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["problem",{"_index":776,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["problemdetails",{"_index":1417,"title":{"interfaces/ProblemDetails.html":{}},"body":{"interfaces/ProblemDetails.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["processing",{"_index":1899,"title":{},"body":{"index.html":{}}}],["product",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetProductByIdRequest.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["product().description",{"_index":1471,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product().name",{"_index":1469,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product().price",{"_index":1470,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["product.facade",{"_index":1466,"title":{},"body":{"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{}}}],["product.id",{"_index":1498,"title":{},"body":{"components/ProductListComponent.html":{}}}],["product.name",{"_index":1499,"title":{},"body":{"components/ProductListComponent.html":{}}}],["product.price",{"_index":1500,"title":{},"body":{"components/ProductListComponent.html":{}}}],["productapi",{"_index":1419,"title":{"injectables/ProductApi.html":{}},"body":{"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productdataservice",{"_index":1444,"title":{"injectables/ProductDataService.html":{}},"body":{"injectables/ProductDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productdetailcomponent",{"_index":234,"title":{"components/ProductDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["productfacade",{"_index":847,"title":{"injectables/ProductFacade.html":{}},"body":{"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["productfilter",{"_index":1448,"title":{},"body":{"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"components/ProductSearchComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["productfilter().name",{"_index":1525,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["productid",{"_index":27,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["productlistcomponent",{"_index":236,"title":{"components/ProductListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["productlistresponse",{"_index":1437,"title":{"interfaces/ProductListResponse.html":{}},"body":{"injectables/ProductApi.html":{},"interfaces/ProductListResponse.html":{},"coverage.html":{}}}],["productname",{"_index":410,"title":{},"body":{"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{}}}],["productresponse",{"_index":1439,"title":{"interfaces/ProductResponse.html":{}},"body":{"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"coverage.html":{}}}],["products",{"_index":925,"title":{},"body":{"injectables/NavigationService.html":{},"injectables/ProductApi.html":{},"components/ProductListComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["productsearchcomponent",{"_index":237,"title":{"components/ProductSearchComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["productstore",{"_index":1487,"title":{},"body":{"injectables/ProductFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productthumbnail",{"_index":411,"title":{},"body":{"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{}}}],["programmatic",{"_index":2122,"title":{},"body":{"index.html":{}}}],["progress",{"_index":995,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["progressive",{"_index":1913,"title":{},"body":{"index.html":{}}}],["project",{"_index":1595,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["project.properties",{"_index":2134,"title":{},"body":{"index.html":{}}}],["projects",{"_index":2020,"title":{},"body":{"index.html":{}}}],["promise",{"_index":87,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/KeycloakService.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["promise.reject(new",{"_index":1106,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["proper",{"_index":2114,"title":{},"body":{"index.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"properties.html":{}}}],["protected",{"_index":903,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{}}}],["protection",{"_index":2119,"title":{},"body":{"index.html":{}}}],["provide",{"_index":153,"title":{},"body":{"modules/ApiModule.html":{},"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":2297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideapi",{"_index":1716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provideapi(withconfiguration",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideauth",{"_index":1752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":2217,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":68,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["providehttpclient(withfetch",{"_index":2291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providemonitoring",{"_index":1761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["providenavigation",{"_index":893,"title":{},"body":{"interfaces/NavigationConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providerouter(approutes",{"_index":2293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouterstore",{"_index":2302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":151,"title":{},"body":{"modules/ApiModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providestore",{"_index":2303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":2298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["province",{"_index":527,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["provisioned",{"_index":2100,"title":{},"body":{"index.html":{}}}],["public",{"_index":152,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"classes/RouteItem.html":{},"index.html":{}}}],["public.git",{"_index":1974,"title":{},"body":{"index.html":{}}}],["publish",{"_index":2200,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2226,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1870,"title":{},"body":{"index.html":{}}}],["push",{"_index":2005,"title":{},"body":{"index.html":{}}}],["px",{"_index":1211,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["py",{"_index":1213,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["qty",{"_index":427,"title":{},"body":{"components/CartItemsComponent.html":{},"components/OrderDetailComponent.html":{},"miscellaneous/variables.html":{}}}],["quality",{"_index":2141,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":362,"title":{},"body":{"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"coverage.html":{}}}],["query",{"_index":586,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/NavigationItem.html":{},"interfaces/Param.html":{},"classes/RouteItem.html":{},"miscellaneous/typealiases.html":{}}}],["raised",{"_index":1659,"title":{},"body":{"changelog.html":{}}}],["rarr",{"_index":338,"title":{},"body":{"components/CartComponent.html":{}}}],["rate",{"_index":1667,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rds",{"_index":2105,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":442,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["readme.md",{"_index":579,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["readonly",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PermissionService.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{}}}],["realm",{"_index":251,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["record",{"_index":2258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["red",{"_index":762,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["redirectto",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirecturi",{"_index":816,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["refactor",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1884,"title":{},"body":{"index.html":{}}}],["refined",{"_index":1875,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["regexp",{"_index":667,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["regexp('^(application/json",{"_index":668,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["region",{"_index":123,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["register",{"_index":267,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/KeycloakService.html":{},"components/UserNavigationComponent.html":{},"index.html":{}}}],["registration",{"_index":2036,"title":{},"body":{"index.html":{}}}],["relational",{"_index":1930,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":1524,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["reload",{"_index":2296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":428,"title":{},"body":{"components/CartItemsComponent.html":{},"index.html":{}}}],["removecartitemrequest",{"_index":1526,"title":{"interfaces/RemoveCartItemRequest.html":{}},"body":{"interfaces/RemoveCartItemRequest.html":{},"coverage.html":{}}}],["removeitem",{"_index":304,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{}}}],["removeitem(id",{"_index":306,"title":{},"body":{"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["repo",{"_index":1951,"title":{},"body":{"index.html":{}}}],["report",{"_index":994,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["reportprogress",{"_index":978,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["repository",{"_index":1878,"title":{},"body":{"index.html":{}}}],["req",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set('authorization",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":617,"title":{"interfaces/Request.html":{}},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{}}}],["request.ts",{"_index":9,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"coverage.html":{}}}],["required",{"_index":765,"title":{},"body":{"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{}}}],["required}@if",{"_index":769,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["requirements",{"_index":2121,"title":{},"body":{"index.html":{}}}],["res",{"_index":388,"title":{},"body":{"injectables/CartFacade.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"miscellaneous/variables.html":{}}}],["res.items",{"_index":1455,"title":{},"body":{"injectables/ProductDataService.html":{}}}],["res.phone",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res?.items",{"_index":1104,"title":{},"body":{"injectables/OrderDataService.html":{}}}],["reset",{"_index":2243,"title":{},"body":{"overview.html":{}}}],["response",{"_index":989,"title":{},"body":{"injectables/OrderApi.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"injectables/ProductApi.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UserResponse.html":{}}}],["response.ts",{"_index":119,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/ImageResponse.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["responsetype",{"_index":1067,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["responsetype_",{"_index":1059,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["restriction",{"_index":2195,"title":{},"body":{"license.html":{}}}],["results",{"_index":32,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":948,"title":{},"body":{"classes/NoReuseStrategy.html":{},"index.html":{}}}],["return",{"_index":110,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"interfaces/NavigationConfig.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":992,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["returns",{"_index":141,"title":{},"body":{"modules/ApiModule.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":945,"title":{},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{}}}],["right",{"_index":1349,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2198,"title":{},"body":{"license.html":{}}}],["root",{"_index":69,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"injectables/CartFacade.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/OrderFacade.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["rounded",{"_index":1209,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["route",{"_index":915,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["route.data?.['showinmenu",{"_index":895,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["routeitem",{"_index":861,"title":{"classes/RouteItem.html":{}},"body":{"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"coverage.html":{}}}],["routeitem('orders",{"_index":926,"title":{},"body":{"injectables/NavigationService.html":{}}}],["routeitem('products",{"_index":923,"title":{},"body":{"injectables/NavigationService.html":{}}}],["router",{"_index":446,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["router.createurltree",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routereusestrategy",{"_index":947,"title":{},"body":{"classes/NoReuseStrategy.html":{},"miscellaneous/variables.html":{}}}],["routerlink",{"_index":297,"title":{},"body":{"components/CartComponent.html":{},"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["routermodule",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["routerreducer",{"_index":2304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":888,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["routing",{"_index":1412,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"index.html":{}}}],["routingnumber",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rs256",{"_index":2000,"title":{},"body":{"index.html":{}}}],["rules",{"_index":2120,"title":{},"body":{"index.html":{}}}],["run",{"_index":1994,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2102,"title":{},"body":{"index.html":{}}}],["running",{"_index":2033,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":63,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"dependencies.html":{}}}],["s3",{"_index":2106,"title":{},"body":{"index.html":{}}}],["saasdotnet",{"_index":2026,"title":{},"body":{"index.html":{}}}],["safe",{"_index":1915,"title":{},"body":{"index.html":{}}}],["schema",{"_index":2006,"title":{},"body":{"index.html":{}}}],["script",{"_index":2051,"title":{},"body":{"index.html":{}}}],["search",{"_index":1507,"title":{},"body":{"components/ProductSearchComponent.html":{},"index.html":{}}}],["search'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["search.component.html",{"_index":1509,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.scss",{"_index":1510,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts",{"_index":1506,"title":{},"body":{"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:19",{"_index":1516,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:20",{"_index":1519,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:21",{"_index":1517,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:23",{"_index":1515,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search.component.ts:29",{"_index":1513,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["search/product",{"_index":1505,"title":{},"body":{"components/ProductSearchComponent.html":{},"coverage.html":{}}}],["secrets",{"_index":2117,"title":{},"body":{"index.html":{}}}],["section",{"_index":562,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["secure",{"_index":1931,"title":{},"body":{"index.html":{}}}],["securely",{"_index":2128,"title":{},"body":{"index.html":{}}}],["security",{"_index":2172,"title":{},"body":{"index.html":{}}}],["securityschemes",{"_index":561,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["see",{"_index":167,"title":{},"body":{"modules/ApiModule.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["seed",{"_index":2050,"title":{},"body":{"index.html":{}}}],["seeding",{"_index":2048,"title":{},"body":{"index.html":{}}}],["select",{"_index":613,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selected",{"_index":628,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selectedmenuitem",{"_index":850,"title":{},"body":{"components/NavigationComponent.html":{}}}],["selectheaderaccept",{"_index":546,"title":{},"body":{"classes/Configuration.html":{}}}],["selectheaderaccept(accepts",{"_index":611,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selectheadercontenttype",{"_index":547,"title":{},"body":{"classes/Configuration.html":{}}}],["selectheadercontenttype(contenttypes",{"_index":630,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selection",{"_index":627,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["selector",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["sell",{"_index":2204,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2091,"title":{},"body":{"index.html":{}}}],["sentry",{"_index":823,"title":{},"body":{"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sentry.createerrorhandler",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry.io",{"_index":2019,"title":{},"body":{"index.html":{}}}],["sentry.setuser",{"_index":840,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["sentry.traceservice",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sentry/angular",{"_index":837,"title":{},"body":{"injectables/MonitoringFacade.html":{},"dependencies.html":{}}}],["sentry/cli",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["sentry/nestjs",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["sentry/profiling",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["sentry/wizard@latest",{"_index":2024,"title":{},"body":{"index.html":{}}}],["server",{"_index":1990,"title":{},"body":{"index.html":{}}}],["service",{"_index":2104,"title":{},"body":{"index.html":{}}}],["services",{"_index":2077,"title":{},"body":{"index.html":{}}}],["services/keycloak.service",{"_index":282,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["services/navigation.service",{"_index":867,"title":{},"body":{"components/NavigationComponent.html":{}}}],["services/permission.service",{"_index":285,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["services/print",{"_index":1133,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["session",{"_index":99,"title":{},"body":{"interfaces/AdditionalState.html":{},"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":754,"title":{},"body":{"components/FormErrorComponent.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{}}}],["setallentities",{"_index":55,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["setallentities(shoppingsession.items",{"_index":92,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["setfilter",{"_index":1476,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["setfilter(filter",{"_index":1483,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["setproductcategory",{"_index":851,"title":{},"body":{"components/NavigationComponent.html":{}}}],["setproductcategory(category",{"_index":852,"title":{},"body":{"components/NavigationComponent.html":{}}}],["setproductnamefilter",{"_index":1512,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["setproductnamefilter(name",{"_index":1514,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["setshowcart",{"_index":347,"title":{},"body":{"injectables/CartFacade.html":{}}}],["setshowcart(showcart",{"_index":115,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":1984,"title":{},"body":{"index.html":{}}}],["settings/keys",{"_index":1998,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1964,"title":{},"body":{"index.html":{}}}],["setuser",{"_index":831,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["setuser(user",{"_index":832,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["shall",{"_index":2213,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1905,"title":{},"body":{"index.html":{}}}],["shared/cart",{"_index":320,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["shared/order",{"_index":1135,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["shipping",{"_index":333,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["shop",{"_index":12,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AddressResponse.html":{},"interfaces/CartItemResponse.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"components/NavigationComponent.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/ProblemDetails.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shop.png",{"_index":1339,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["shop/api",{"_index":61,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductDataService.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{}}}],["shop/auth",{"_index":911,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/RouteItem.html":{},"components/UserNavigationComponent.html":{}}}],["shop/cart",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/NavigationComponent.html":{},"components/ProductDetailComponent.html":{},"components/UserNavigationComponent.html":{}}}],["shop/navigation",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["shop/order",{"_index":371,"title":{},"body":{"injectables/CartFacade.html":{}}}],["shop/order').then(m",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shop/product",{"_index":871,"title":{},"body":{"components/NavigationComponent.html":{}}}],["shop/product').then(m",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shop/shared",{"_index":482,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["shop/user",{"_index":486,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/UserNavigationComponent.html":{}}}],["shopping",{"_index":98,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["shoppingsession",{"_index":88,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["shoppingsession.id",{"_index":93,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["shoppingsessionapi",{"_index":59,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shoppingsessionid",{"_index":36,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["shoppingsessionresponse",{"_index":1537,"title":{"interfaces/ShoppingSessionResponse.html":{}},"body":{"interfaces/ShoppingSessionResponse.html":{},"coverage.html":{}}}],["shouldattach",{"_index":949,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["shoulddetach",{"_index":950,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["shouldreuseroute",{"_index":951,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["shouldreuseroute(future",{"_index":957,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["showcart",{"_index":37,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"miscellaneous/variables.html":{}}}],["showinmenu",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showshippinginformation",{"_index":451,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["sign",{"_index":1585,"title":{},"body":{"components/UserNavigationComponent.html":{},"index.html":{}}}],["signal",{"_index":353,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"injectables/OrderFacade.html":{},"injectables/ProductFacade.html":{},"injectables/UserFacade.html":{}}}],["signal('products",{"_index":865,"title":{},"body":{"components/NavigationComponent.html":{}}}],["signal(false",{"_index":863,"title":{},"body":{"components/NavigationComponent.html":{}}}],["signal(window.innerwidth",{"_index":477,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["signalstore",{"_index":42,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["silent",{"_index":812,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["silentcheckssoredirecturi",{"_index":810,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["simple",{"_index":685,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/typealiases.html":{}}}],["simplify",{"_index":1673,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":1904,"title":{},"body":{"index.html":{}}}],["size",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skipself",{"_index":144,"title":{},"body":{"modules/ApiModule.html":{}}}],["sku",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["skus",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1220,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["small",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":2190,"title":{},"body":{"license.html":{}}}],["sonar",{"_index":1660,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sonarcloud",{"_index":2132,"title":{},"body":{"index.html":{}}}],["sonarqube",{"_index":2080,"title":{},"body":{"index.html":{}}}],["sonarqube/sonarcloud",{"_index":2133,"title":{},"body":{"index.html":{}}}],["sort((a",{"_index":939,"title":{},"body":{"injectables/NavigationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"components/AppComponent.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"interfaces/CartItemResponse.html":{},"components/CartItemsComponent.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["sourcemap",{"_index":2130,"title":{},"body":{"index.html":{}}}],["sourcemaps",{"_index":2025,"title":{},"body":{"index.html":{}}}],["spacedelimited",{"_index":1235,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["spec",{"_index":1241,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":1243,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["ssl",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["ssl/tls",{"_index":2113,"title":{},"body":{"index.html":{}}}],["sso",{"_index":809,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["sso.html",{"_index":813,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["ssv",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1864,"title":{},"body":{"index.html":{}}}],["staged",{"_index":1943,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["standard",{"_index":568,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["standarddataformat",{"_index":1249,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standarddatatype",{"_index":1244,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standardize",{"_index":1936,"title":{},"body":{"index.html":{}}}],["standardparamstyle",{"_index":1233,"title":{},"body":{"interfaces/Param.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["standardparamstyles",{"_index":2257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["standardparamstyle}s",{"_index":1238,"title":{},"body":{"interfaces/Param.html":{}}}],["start",{"_index":2010,"title":{},"body":{"index.html":{}}}],["started",{"_index":1591,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":526,"title":{},"body":{"components/CheckoutComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["state.user",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state/app.store",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["state/cart.store",{"_index":369,"title":{},"body":{"injectables/CartFacade.html":{}}}],["state/order.store",{"_index":1172,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["state/product.store",{"_index":1488,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["state/user.store",{"_index":1558,"title":{},"body":{"injectables/UserFacade.html":{}}}],["statements",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":523,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["static",{"_index":132,"title":{},"body":{"modules/ApiModule.html":{},"dependencies.html":{}}}],["status",{"_index":780,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/OrderResponse.html":{},"components/OrderStatusComponent.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["status'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["status.component",{"_index":1137,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["status.component.html",{"_index":1205,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["status.component.scss",{"_index":1206,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["status.component.ts",{"_index":1204,"title":{},"body":{"components/OrderStatusComponent.html":{},"coverage.html":{}}}],["status.component.ts:19",{"_index":1208,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["status.ts",{"_index":1856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status/order",{"_index":1136,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"coverage.html":{}}}],["steps",{"_index":1993,"title":{},"body":{"index.html":{}}}],["store",{"_index":952,"title":{},"body":{"classes/NoReuseStrategy.html":{},"injectables/ProductFacade.html":{},"miscellaneous/variables.html":{}}}],["store.entities().find(item",{"_index":113,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["store.entities().reduce((acc",{"_index":74,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["store.entities().sort((a",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.entitymap()[id",{"_index":111,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["store.shoppingsessionid",{"_index":82,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":2127,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":1887,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":284,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/NavigationService.html":{},"injectables/PermissionService.html":{}}}],["strategy.ts",{"_index":946,"title":{},"body":{"classes/NoReuseStrategy.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["strategy.ts:12",{"_index":955,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:16",{"_index":953,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:20",{"_index":959,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:4",{"_index":956,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["strategy.ts:8",{"_index":961,"title":{},"body":{"classes/NoReuseStrategy.html":{}}}],["street",{"_index":124,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":126,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"interfaces/CartItemResponse.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoringConfig.html":{},"components/NavigationComponent.html":{},"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"interfaces/OrderItemResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"miscellaneous/typealiases.html":{}}}],["structure",{"_index":1886,"title":{},"body":{"index.html":{}}}],["studio",{"_index":2056,"title":{},"body":{"index.html":{}}}],["studioaccess",{"_index":2057,"title":{},"body":{"index.html":{}}}],["style",{"_index":686,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":578,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["styleurl",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["styling",{"_index":1608,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["subgraph",{"_index":2138,"title":{},"body":{"index.html":{}}}],["subitems",{"_index":902,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["subject",{"_index":2209,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2202,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2215,"title":{},"body":{"license.html":{}}}],["success",{"_index":2143,"title":{},"body":{"index.html":{}}}],["successful",{"_index":2087,"title":{},"body":{"index.html":{}}}],["such",{"_index":570,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["summary",{"_index":531,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["super(label",{"_index":916,"title":{},"body":{"classes/NavigationItem.html":{},"classes/RouteItem.html":{}}}],["swagger",{"_index":2013,"title":{},"body":{"index.html":{}}}],["system",{"_index":1953,"title":{},"body":{"index.html":{}}}],["t",{"_index":669,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["t]+[+]json",{"_index":670,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["tab",{"_index":2044,"title":{},"body":{"index.html":{}}}],["table",{"_index":1790,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["table.columns",{"_index":1312,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["table.columns.ts",{"_index":1775,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2095,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":1920,"title":{},"body":{"index.html":{}}}],["takes",{"_index":584,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["taxes",{"_index":334,"title":{},"body":{"components/CartComponent.html":{}}}],["tb",{"_index":2137,"title":{},"body":{"index.html":{}}}],["tech",{"_index":1912,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":1874,"title":{},"body":{"index.html":{}}}],["template",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["temporary",{"_index":2047,"title":{},"body":{"index.html":{}}}],["terms",{"_index":1309,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["terms.ts",{"_index":1773,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["terraform",{"_index":1956,"title":{},"body":{"index.html":{}}}],["test",{"_index":2068,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1892,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2066,"title":{},"body":{"index.html":{}}}],["testto",{"_index":2067,"title":{},"body":{"index.html":{}}}],["text",{"_index":760,"title":{},"body":{"components/FormErrorComponent.html":{},"injectables/OrderApi.html":{},"components/OrderStatusComponent.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["text/json",{"_index":1044,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["text/plain",{"_index":1043,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["that's",{"_index":694,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.#appstore.initialized",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["this.#authfacade.haspermission(strategy",{"_index":934,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.#authfacade.login",{"_index":1578,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#authfacade.logout",{"_index":1581,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#authfacade.register",{"_index":1580,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#cartfacade.additem(id",{"_index":1468,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#cartfacade.checkout",{"_index":488,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#cartfacade.getall",{"_index":312,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.#cartfacade.gethasshoppingsession",{"_index":1464,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#cartfacade.getitemcount",{"_index":404,"title":{},"body":{"components/CartIconComponent.html":{}}}],["this.#cartfacade.getshowcart",{"_index":314,"title":{},"body":{"components/CartComponent.html":{}}}],["this.#cartfacade.gettotalprice",{"_index":316,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.#cartfacade.loadshoppingsession",{"_index":1579,"title":{},"body":{"components/UserNavigationComponent.html":{}}}],["this.#cartfacade.removeitem(id",{"_index":327,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.#cartfacade.setshowcart(false",{"_index":328,"title":{},"body":{"components/CartComponent.html":{}}}],["this.#cartfacade.setshowcart(true",{"_index":406,"title":{},"body":{"components/CartIconComponent.html":{}}}],["this.#cartstore.create",{"_index":379,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.delete(id",{"_index":382,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.entities",{"_index":372,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.getitembyid(id",{"_index":381,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.getitembyproductid(productid",{"_index":375,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.hasshoppingsession",{"_index":384,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.itemcount",{"_index":374,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.loadshoppingsession",{"_index":386,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.setshowcart(showcart",{"_index":385,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.showcart",{"_index":383,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.totalprice",{"_index":373,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#cartstore.update(id",{"_index":380,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#fb.control",{"_index":498,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.apartment",{"_index":509,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.city",{"_index":510,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.country",{"_index":507,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.region",{"_index":511,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.street",{"_index":508,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.address?.zip",{"_index":512,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.control(this.user()?.phone",{"_index":506,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#fb.group",{"_index":497,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#keycloakservice.authenticated",{"_index":290,"title":{},"body":{"injectables/AuthFacade.html":{},"injectables/PermissionService.html":{}}}],["this.#keycloakservice.init",{"_index":286,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.login",{"_index":287,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.logout",{"_index":288,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.register",{"_index":289,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#keycloakservice.token",{"_index":293,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#navigationservice.getfiltereditems(navigationtype.route",{"_index":860,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.#orderfacade.add(res",{"_index":390,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.#orderfacade.fetchall",{"_index":1194,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.#orderfacade.fetchbyid(this.#activatedroute.snapshot.params['id",{"_index":1138,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["this.#orderfacade.find(this.#activatedroute.snapshot.params['id",{"_index":1129,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["this.#orderfacade.getsortedbystatusanddate",{"_index":1191,"title":{},"body":{"components/OrderListComponent.html":{}}}],["this.#orderstore.create(order",{"_index":1175,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.entities",{"_index":1177,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.fetchbyid(id",{"_index":1174,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.getbyid(id",{"_index":1176,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.getsortedbystatusanddate",{"_index":1178,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#orderstore.load",{"_index":1173,"title":{},"body":{"injectables/OrderFacade.html":{}}}],["this.#permissionservice.haspermission(permissionstrategy",{"_index":292,"title":{},"body":{"injectables/AuthFacade.html":{}}}],["this.#printinvoiceservice.generatepdf(order",{"_index":1141,"title":{},"body":{"components/OrderDetailComponent.html":{}}}],["this.#productfacade.fetchall",{"_index":1497,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.#productfacade.fetchbyid(this.#activatedroute.snapshot.params['id",{"_index":1467,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#productfacade.getbyid(this.#activatedroute.snapshot.params['id",{"_index":1465,"title":{},"body":{"components/ProductDetailComponent.html":{}}}],["this.#productfacade.getfilter",{"_index":1518,"title":{},"body":{"components/ProductSearchComponent.html":{}}}],["this.#productfacade.getfiltered",{"_index":1496,"title":{},"body":{"components/ProductListComponent.html":{}}}],["this.#productfacade.setfilter",{"_index":879,"title":{},"body":{"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{}}}],["this.#router.navigatebyurl('/products",{"_index":489,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavigationComponent.html":{},"components/ProductSearchComponent.html":{}}}],["this.#store.fetchbyid(id",{"_index":1490,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.filter",{"_index":1492,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.filteredentities",{"_index":1491,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.getbyid(id",{"_index":1493,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.load",{"_index":1489,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#store.updatefilter(filter",{"_index":1494,"title":{},"body":{"injectables/ProductFacade.html":{}}}],["this.#userfacade.getcurrentuser",{"_index":480,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/UserNavigationComponent.html":{}}}],["this.#userfacade.updateuseraddress(address.value",{"_index":493,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#userfacade.updateuserphone",{"_index":495,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.#userstore.fetchcurrentuser",{"_index":1559,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.#userstore.updateuseraddress(address",{"_index":1561,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.#userstore.updateuserphone(phone",{"_index":1562,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.#userstore.user",{"_index":1560,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.accesstoken",{"_index":641,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.addcompanyinformation(doc",{"_index":1323,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addcustomerinformation(doc",{"_index":1325,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addfooter(doc",{"_index":1321,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addinvoicedetails(doc",{"_index":1324,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addline(doc",{"_index":1372,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addlogo(doc",{"_index":1322,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addpage(doc",{"_index":1389,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtablefooter(doc",{"_index":1328,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtableheader(doc",{"_index":1326,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtableitems(doc",{"_index":1327,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["this.addtohttpparamsrecursive(httpparams",{"_index":1031,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.apikeys",{"_index":635,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.basepath",{"_index":643,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.checkoutform().controls",{"_index":490,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.checkoutform().dirty",{"_index":517,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.checkoutform().valid",{"_index":518,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.config.sentry",{"_index":839,"title":{},"body":{"injectables/MonitoringFacade.html":{}}}],["this.configuration",{"_index":1024,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.basepath",{"_index":1025,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.basepath}${localvarpath",{"_index":1066,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.encoder",{"_index":1029,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.isjsonmime(localvarhttpheaderacceptselected",{"_index":1062,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.selectheaderaccept(httpheaderaccepts",{"_index":1053,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.configuration.withcredentials",{"_index":1068,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.createcheckoutform",{"_index":469,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.credentials",{"_index":653,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.credentials['bearer",{"_index":656,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.credentials[key",{"_index":674,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.defaultencodeparam(param",{"_index":651,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.defaultheaders",{"_index":1048,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.encodeparam",{"_index":650,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.encoder",{"_index":647,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.getcheckoutenabled",{"_index":471,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.getupdateenabled",{"_index":473,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.httpclient.request('get",{"_index":1065,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["this.isjsonmime(x",{"_index":661,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.items().length",{"_index":310,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.keycloak.authenticated",{"_index":806,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.init",{"_index":807,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.login",{"_index":814,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.logout",{"_index":815,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.register",{"_index":817,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.keycloak.token",{"_index":805,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["this.loadshoppingsession",{"_index":102,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/CartFacade.html":{},"miscellaneous/variables.html":{}}}],["this.menuitems",{"_index":935,"title":{},"body":{"injectables/NavigationService.html":{}}}],["this.mobilemenuopen.set(false",{"_index":878,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.password",{"_index":639,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.permissionstrategies[permissionstrategy",{"_index":1262,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.status",{"_index":1225,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["this.updateitem(item.id",{"_index":376,"title":{},"body":{"injectables/CartFacade.html":{}}}],["this.user()?.address",{"_index":515,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.user()?.email",{"_index":504,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.user()?.firstname",{"_index":499,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.user()?.lastname",{"_index":503,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.username",{"_index":637,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["this.withcredentials",{"_index":645,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["throttler",{"_index":1924,"title":{},"body":{"index.html":{}}}],["throw",{"_index":95,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":1503,"title":{},"body":{"interfaces/ProductResponse.html":{}}}],["time",{"_index":688,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["time'},{'name",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["time.component.html",{"_index":731,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time.component.scss",{"_index":732,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time.component.ts",{"_index":730,"title":{},"body":{"components/DateTimeComponent.html":{},"coverage.html":{}}}],["time.component.ts:16",{"_index":737,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time.component.ts:20",{"_index":742,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time.component.ts:24",{"_index":744,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["time/date",{"_index":729,"title":{},"body":{"components/DateTimeComponent.html":{},"coverage.html":{}}}],["timezone",{"_index":735,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["tiny",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":781,"title":{},"body":{"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ProblemDetails.html":{},"interfaces/ValidationProblemDetails.html":{}}}],["titlecase",{"_index":883,"title":{},"body":{"components/NavigationComponent.html":{},"components/OrderStatusComponent.html":{}}}],["token",{"_index":789,"title":{},"body":{"injectables/KeycloakService.html":{},"injectables/OrderApi.html":{},"changelog.html":{},"index.html":{}}}],["tokens",{"_index":1988,"title":{},"body":{"index.html":{}}}],["toolkit",{"_index":51,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["tools",{"_index":1910,"title":{},"body":{"index.html":{}}}],["top",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":2237,"title":{},"body":{"license.html":{}}}],["total",{"_index":331,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{}}}],["totalprice",{"_index":73,"title":{},"body":{"interfaces/AdditionalState.html":{},"components/CartComponent.html":{},"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":423,"title":{},"body":{"components/CartItemsComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/ProductListComponent.html":{}}}],["tracking",{"_index":2110,"title":{},"body":{"index.html":{}}}],["transfercache",{"_index":1046,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["transform",{"_index":1575,"title":{},"body":{"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["transition(':enter",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':leave",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(0",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["trigger",{"_index":2088,"title":{},"body":{"index.html":{}}}],["trigger('animatebackdrop",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger('animateslideover",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggers",{"_index":2097,"title":{},"body":{"index.html":{}}}],["true",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"injectables/PrintInvoiceService.html":{},"injectables/ProductApi.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/variables.html":{}}}],["trusteddomain",{"_index":826,"title":{},"body":{"interfaces/MonitoringConfig.html":{}}}],["try",{"_index":387,"title":{},"body":{"injectables/CartFacade.html":{},"components/CheckoutComponent.html":{}}}],["ts",{"_index":1012,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["tslib",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["tsv",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":29,"title":{},"body":{"interfaces/AddCartItemRequest.html":{},"interfaces/AdditionalState.html":{},"interfaces/AddressResponse.html":{},"modules/ApiModule.html":{},"interfaces/AuthConfig.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"interfaces/CartItemResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"classes/CustomHttpParameterCodec.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"interfaces/GetOrderByIdRequest.html":{},"interfaces/GetProductByIdRequest.html":{},"interfaces/HttpValidationProblemDetails.html":{},"interfaces/ImageResponse.html":{},"injectables/KeycloakService.html":{},"interfaces/MonitoredUser.html":{},"interfaces/MonitoringConfig.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"interfaces/NavigationConfig.html":{},"classes/NavigationItem.html":{},"injectables/NavigationService.html":{},"classes/NoReuseStrategy.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"interfaces/OrderItemResponse.html":{},"components/OrderListComponent.html":{},"interfaces/OrderListResponse.html":{},"interfaces/OrderResponse.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/PrintInvoiceService.html":{},"interfaces/ProblemDetails.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"interfaces/ProductListResponse.html":{},"interfaces/ProductResponse.html":{},"components/ProductSearchComponent.html":{},"interfaces/RemoveCartItemRequest.html":{},"interfaces/Request.html":{},"classes/RouteItem.html":{},"interfaces/ShoppingSessionResponse.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"interfaces/UpdateCartItemQuantityResponse.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"interfaces/UserPhoneResponse.html":{},"interfaces/UserResponse.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":1854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2244,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":657,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["types",{"_index":625,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["types/classes",{"_index":1248,"title":{},"body":{"interfaces/Param.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":682,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["ui",{"_index":1889,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":109,"title":{},"body":{"interfaces/AdditionalState.html":{},"injectables/AuthFacade.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/KeycloakService.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"interfaces/Param.html":{},"injectables/ProductApi.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2176,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1933,"title":{},"body":{"index.html":{}}}],["united",{"_index":522,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["unitprice",{"_index":412,"title":{},"body":{"interfaces/CartItemResponse.html":{},"interfaces/OrderItemResponse.html":{}}}],["unknown",{"_index":291,"title":{},"body":{"injectables/AuthFacade.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{}}}],["up",{"_index":1976,"title":{},"body":{"index.html":{}}}],["update",{"_index":530,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"changelog.html":{}}}],["update(entity",{"_index":1095,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["update(id",{"_index":105,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["updateall",{"_index":1084,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["updateall(entity",{"_index":1097,"title":{},"body":{"injectables/OrderDataService.html":{},"injectables/ProductDataService.html":{}}}],["updatecartitemquantityrequest",{"_index":60,"title":{"interfaces/UpdateCartItemQuantityRequest.html":{}},"body":{"interfaces/AdditionalState.html":{},"interfaces/UpdateCartItemQuantityRequest.html":{},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatecartitemquantityrequestwrapper",{"_index":1540,"title":{"interfaces/UpdateCartItemQuantityRequestWrapper.html":{}},"body":{"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{}}}],["updatecartitemquantityresponse",{"_index":1542,"title":{"interfaces/UpdateCartItemQuantityResponse.html":{}},"body":{"interfaces/UpdateCartItemQuantityResponse.html":{},"coverage.html":{}}}],["updateitem",{"_index":348,"title":{},"body":{"injectables/CartFacade.html":{}}}],["updateitem(id",{"_index":361,"title":{},"body":{"injectables/CartFacade.html":{}}}],["updates",{"_index":2090,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":455,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["updateuseraddress",{"_index":1548,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuseraddress(address",{"_index":1552,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuseraddress(update",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuseraddressrequest",{"_index":487,"title":{"interfaces/UpdateUserAddressRequest.html":{}},"body":{"components/CheckoutComponent.html":{},"interfaces/UpdateUserAddressRequest.html":{},"injectables/UserFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateuserphone",{"_index":1549,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuserphone(phone",{"_index":1554,"title":{},"body":{"injectables/UserFacade.html":{}}}],["updateuserphone(update",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateuserphonerequest",{"_index":1543,"title":{"interfaces/UpdateUserPhoneRequest.html":{}},"body":{"interfaces/UpdateUserPhoneRequest.html":{},"injectables/UserFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updating",{"_index":1615,"title":{},"body":{"changelog.html":{}}}],["uploaded",{"_index":2109,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":2131,"title":{},"body":{"index.html":{}}}],["uri",{"_index":786,"title":{},"body":{"interfaces/ImageResponse.html":{}}}],["url",{"_index":250,"title":{},"body":{"interfaces/AuthConfig.html":{}}}],["use",{"_index":553,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":2305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":565,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{}}}],["usefactory",{"_index":154,"title":{},"body":{"modules/ApiModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/OrderApi.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"interfaces/Param.html":{},"injectables/PrintInvoiceService.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"interfaces/UpdateUserAddressRequest.html":{},"interfaces/UpdateUserPhoneRequest.html":{},"components/UserNavigationComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user()?.address?.apartment",{"_index":1146,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.city",{"_index":1148,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.country",{"_index":1150,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.region",{"_index":1149,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.street",{"_index":1145,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.address?.zip",{"_index":1147,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.firstname",{"_index":1143,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user()?.lastname",{"_index":1144,"title":{},"body":{"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{}}}],["user.address?.apartment",{"_index":1366,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["user.address?.zip",{"_index":1368,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["user.lastname",{"_index":1364,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["user.ts",{"_index":820,"title":{},"body":{"interfaces/MonitoredUser.html":{},"coverage.html":{}}}],["user?.id",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userapi",{"_index":1725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":447,"title":{"injectables/UserFacade.html":{}},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade.fetchcurrentuser",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":1201,"title":{},"body":{"interfaces/OrderResponse.html":{},"interfaces/ShoppingSessionResponse.html":{}}}],["username",{"_index":541,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"index.html":{}}}],["usernavigationcomponent",{"_index":239,"title":{"components/UserNavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{},"coverage.html":{}}}],["userphoneresponse",{"_index":1587,"title":{"interfaces/UserPhoneResponse.html":{}},"body":{"interfaces/UserPhoneResponse.html":{},"coverage.html":{}}}],["userresponse",{"_index":1121,"title":{"interfaces/UserResponse.html":{}},"body":{"components/OrderDetailComponent.html":{},"injectables/PrintInvoiceService.html":{},"injectables/UserFacade.html":{},"interfaces/UserResponse.html":{},"coverage.html":{}}}],["users",{"_index":2053,"title":{},"body":{"index.html":{}}}],["userstate",{"_index":1788,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["userstore",{"_index":1545,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":618,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["usevalue",{"_index":896,"title":{},"body":{"interfaces/NavigationConfig.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":1871,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":1906,"title":{},"body":{"index.html":{}}}],["v",{"_index":719,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["validate",{"_index":1987,"title":{},"body":{"index.html":{}}}],["validation",{"_index":755,"title":{},"body":{"components/FormErrorComponent.html":{},"interfaces/HttpValidationProblemDetails.html":{},"coverage.html":{}}}],["validationerrors",{"_index":759,"title":{},"body":{"components/FormErrorComponent.html":{}}}],["validationproblemdetails",{"_index":1440,"title":{"interfaces/ValidationProblemDetails.html":{}},"body":{"injectables/ProductApi.html":{},"interfaces/ValidationProblemDetails.html":{},"coverage.html":{}}}],["validator",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["validators",{"_index":484,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.email",{"_index":505,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.required",{"_index":501,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["value",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthFacade.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"injectables/KeycloakService.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"injectables/NavigationService.html":{},"injectables/OrderApi.html":{},"injectables/OrderDataService.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"interfaces/Param.html":{},"injectables/PermissionService.html":{},"injectables/ProductApi.html":{},"injectables/ProductDataService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{},"injectables/UserFacade.html":{},"components/UserNavigationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value.some(item",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value.tolowercase().includes(filtervalue.tolowercase",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value[k",{"_index":1040,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["values",{"_index":2021,"title":{},"body":{"index.html":{}}}],["var",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CartComponent.html":{},"components/CartIconComponent.html":{},"components/CartItemsComponent.html":{},"components/CheckoutComponent.html":{},"components/DateTimeComponent.html":{},"components/FormErrorComponent.html":{},"components/NavigationComponent.html":{},"components/OrderDetailComponent.html":{},"components/OrderListComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"components/UserNavigationComponent.html":{}}}],["variable",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1022,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":575,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["version",{"_index":2089,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versioning",{"_index":2086,"title":{},"body":{"index.html":{}}}],["versions",{"_index":683,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["via",{"_index":2035,"title":{},"body":{"index.html":{}}}],["vietnam",{"_index":525,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["view",{"_index":407,"title":{},"body":{"components/CartIconComponent.html":{},"changelog.html":{}}}],["visual",{"_index":1891,"title":{},"body":{"index.html":{}}}],["void",{"_index":116,"title":{},"body":{"interfaces/AdditionalState.html":{},"modules/ApiModule.html":{},"components/CartComponent.html":{},"injectables/CartFacade.html":{},"components/CartIconComponent.html":{},"components/CheckoutComponent.html":{},"injectables/MonitoringFacade.html":{},"components/NavigationComponent.html":{},"classes/NoReuseStrategy.html":{},"components/OrderDetailComponent.html":{},"injectables/OrderFacade.html":{},"components/OrderListComponent.html":{},"injectables/PrintInvoiceService.html":{},"components/ProductDetailComponent.html":{},"injectables/ProductFacade.html":{},"components/ProductListComponent.html":{},"components/ProductSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["vpc",{"_index":2125,"title":{},"body":{"index.html":{}}}],["vx.x.x",{"_index":2154,"title":{},"body":{"index.html":{}}}],["w",{"_index":1216,"title":{},"body":{"components/OrderStatusComponent.html":{}}}],["wandling",{"_index":2181,"title":{},"body":{"license.html":{}}}],["wandling/demo",{"_index":1880,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2222,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2218,"title":{},"body":{"license.html":{}}}],["web",{"_index":1873,"title":{},"body":{"index.html":{}}}],["whether",{"_index":985,"title":{},"body":{"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"license.html":{}}}],["white",{"_index":876,"title":{},"body":{"components/NavigationComponent.html":{},"components/OrderStatusComponent.html":{},"components/ProductDetailComponent.html":{},"components/ProductListComponent.html":{}}}],["width",{"_index":1335,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["window.location.origin",{"_index":811,"title":{},"body":{"injectables/KeycloakService.html":{}}}],["window:resize",{"_index":877,"title":{},"body":{"components/NavigationComponent.html":{}}}],["withcallstate",{"_index":47,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withcomputed",{"_index":43,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withcomputed(store",{"_index":72,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withconfiguration",{"_index":1715,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["withconfiguration(configurationparameters",{"_index":1862,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withcredentials",{"_index":542,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{}}}],["withdataservice",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withdevtools",{"_index":48,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["withdevtools('cart",{"_index":71,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withdevtools('currentuser",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withdevtools('orders",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withdevtools('products",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withentities",{"_index":56,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withhooks",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([authinterceptor",{"_index":2292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withmethods",{"_index":44,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["withmethods((store",{"_index":83,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":2194,"title":{},"body":{"license.html":{}}}],["withrouterconfig",{"_index":2294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withstate",{"_index":45,"title":{},"body":{"interfaces/AdditionalState.html":{}}}],["withstate(initialstate",{"_index":70,"title":{},"body":{"interfaces/AdditionalState.html":{},"miscellaneous/variables.html":{}}}],["wizard",{"_index":2022,"title":{},"body":{"index.html":{}}}],["workaround",{"_index":707,"title":{},"body":{"classes/CustomHttpParameterCodec.html":{}}}],["workflow",{"_index":1699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["works",{"_index":684,"title":{},"body":{"classes/Configuration.html":{},"interfaces/ConfigurationParameters.html":{}}}],["wrapper.ts",{"_index":1541,"title":{},"body":{"interfaces/UpdateCartItemQuantityRequestWrapper.html":{},"coverage.html":{}}}],["x",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xcenter",{"_index":1398,"title":{},"body":{"injectables/PrintInvoiceService.html":{}}}],["xs",{"_index":761,"title":{},"body":{"components/FormErrorComponent.html":{},"components/OrderStatusComponent.html":{}}}],["y",{"_index":1401,"title":{},"body":{"injectables/PrintInvoiceService.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1968,"title":{},"body":{"index.html":{}}}],["yes",{"_index":906,"title":{},"body":{"classes/NavigationItem.html":{},"injectables/OrderApi.html":{},"injectables/ProductApi.html":{},"components/ProductSearchComponent.html":{},"classes/RouteItem.html":{}}}],["yyyy",{"_index":741,"title":{},"body":{"components/DateTimeComponent.html":{},"injectables/PrintInvoiceService.html":{}}}],["zip",{"_index":125,"title":{},"body":{"interfaces/AddressResponse.html":{},"interfaces/CheckoutAddressForm.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutForm.html":{},"interfaces/UpdateUserAddressRequest.html":{}}}],["zipcode",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2242,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddCartItemRequest.html":{"url":"interfaces/AddCartItemRequest.html","title":"interface - AddCartItemRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddCartItemRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/add-cart-item-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            productId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddCartItemRequest {\n  productId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdditionalState.html":{"url":"interfaces/AdditionalState.html","title":"interface - AdditionalState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdditionalState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/+state/cart.store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            shoppingSessionId\n                                        \n                                \n                                \n                                        \n                                            showCart\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        shoppingSessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shoppingSessionId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCart:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { patchState, signalStore, withComputed, withMethods, withState } from '@ngrx/signals';\nimport { withCallState, withDevtools } from '@angular-architects/ngrx-toolkit';\nimport { computed, inject } from '@angular/core';\nimport { setAllEntities, withEntities } from '@ngrx/signals/entities';\nimport {\n  AddCartItemRequest,\n  CartItemResponse,\n  ShoppingSessionApi,\n  UpdateCartItemQuantityRequest,\n} from '@demo-shop/api';\nimport { firstValueFrom } from 'rxjs';\n\ninterface AdditionalState {\n  showCart: boolean;\n  shoppingSessionId: number | null;\n}\n\nconst initialState: AdditionalState = { showCart: false, shoppingSessionId: null };\n\nexport const CartStore = signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withCallState(),\n  withDevtools('cart'),\n  withEntities(),\n  withComputed(store => ({\n    totalPrice: computed(() => store.entities().reduce((acc, curr) => acc + curr.totalPrice, 0)),\n    itemCount: computed(() => store.entities().reduce((acc, curr) => acc + curr.quantity, 0)),\n    hasShoppingSession: computed(() => !!store.shoppingSessionId()),\n  })),\n  withMethods((store, shoppingSessionApi = inject(ShoppingSessionApi)) => ({\n    async loadShoppingSession(): Promise {\n      const shoppingSession = await firstValueFrom(shoppingSessionApi.resolveCurrentShoppingSession());\n\n      patchState(store, setAllEntities(shoppingSession.items), { shoppingSessionId: shoppingSession.id });\n    },\n    async create(dto: AddCartItemRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.addCartItem(dto));\n      await this.loadShoppingSession();\n    },\n    async delete(id: number): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.removeCartItem(id));\n      await this.loadShoppingSession();\n    },\n    async update(id: number, entity: UpdateCartItemQuantityRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.updateCartItemQuantity(id, entity));\n      await this.loadShoppingSession();\n    },\n    getItemById(id: number): CartItemResponse | undefined {\n      return store.entityMap()[id];\n    },\n    getItemByProductId(productId: number): CartItemResponse | undefined {\n      return store.entities().find(item => item.productId === productId);\n    },\n    setShowCart(showCart: boolean): void {\n      patchState(store, { showCart });\n    },\n  }))\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddressResponse.html":{"url":"interfaces/AddressResponse.html","title":"interface - AddressResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddressResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/address-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartment\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            zip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddressResponse {\n  street: string;\n  apartment: string;\n  city: string;\n  zip: string;\n  region?: string | null;\n  country: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiModule.html":{"url":"modules/ApiModule.html","title":"module - ApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(configurationFactory: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                configurationFactory\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n@NgModule({\n  imports: [],\n  declarations: [],\n  exports: [],\n  providers: [],\n})\nexport class ApiModule {\n  public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n    return {\n      ngModule: ApiModule,\n      providers: [{ provide: Configuration, useFactory: configurationFactory }],\n    };\n  }\n\n  constructor(@Optional() @SkipSelf() parentModule: ApiModule, @Optional() http: HttpClient) {\n    if (parentModule) {\n      throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n    }\n    if (!http) {\n      throw new Error(\n        'You need to import the HttpClientModule in your AppModule! \\n' +\n          'See also https://github.com/angular/angular/issues/20575'\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    apps/frontend/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                NavigationComponent\n                                CartComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #appStore\n                            \n                            \n                                    Readonly\n                                initialized\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #appStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AppStore)\n                    \n                \n                    \n                        \n                                Defined in apps/frontend/src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#appStore.initialized\n                    \n                \n                    \n                        \n                                Defined in apps/frontend/src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NavigationComponent } from '@demo-shop/navigation';\nimport { CartComponent } from '@demo-shop/cart';\nimport { AppStore } from './+state/app.store';\n\n@Component({\n  standalone: true,\n  imports: [RouterModule, NavigationComponent, CartComponent],\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  readonly #appStore = inject(AppStore);\n  readonly initialized = this.#appStore.initialized;\n}\n\n    \n\n    \n        @if (initialized()) {\n\n\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (initialized()) {}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfig.html":{"url":"interfaces/AuthConfig.html","title":"interface - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/models/auth-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            keycloak\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keycloak\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keycloak:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface AuthConfig {\n  keycloak: {\n    url: string;\n    realm: string;\n    clientId: string;\n  };\n}\n\nexport const AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthFacade.html":{"url":"injectables/AuthFacade.html","title":"injectable - AuthFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/auth.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #keycloakService\n                            \n                            \n                                    Readonly\n                                    Private\n                                #permissionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authorize\n                            \n                            \n                                getToken\n                            \n                            \n                                hasPermission\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        authorize\n                        \n                    \n                \n            \n            \n                \n                        \n                    authorize()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(permissionStrategy: PermissionStrategy, ...args: [])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissionStrategy\n                                            \n                                                            PermissionStrategy\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/auth.facade.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #keycloakService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(KeycloakService)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/auth.facade.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #permissionService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PermissionService)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/auth.facade.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { KeycloakService } from './services/keycloak.service';\nimport { PermissionStrategy } from './enums/permission-strategy';\nimport { PermissionService } from './services/permission.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthFacade {\n  readonly #keycloakService = inject(KeycloakService);\n  readonly #permissionService = inject(PermissionService);\n\n  async authorize(): Promise {\n    return await this.#keycloakService.init();\n  }\n\n  async login(): Promise {\n    await this.#keycloakService.login();\n  }\n\n  async logout(): Promise {\n    await this.#keycloakService.logout();\n  }\n\n  async register(): Promise {\n    await this.#keycloakService.register();\n  }\n\n  isAuthenticated(): boolean {\n    return this.#keycloakService.authenticated;\n  }\n\n  hasPermission(permissionStrategy: PermissionStrategy, ...args: unknown[]): boolean {\n    return this.#permissionService.hasPermission(permissionStrategy, ...args);\n  }\n\n  getToken(): string | undefined {\n    return this.#keycloakService.token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/cart/cart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-cart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            RouterLink\n                                CartItemsComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                checkoutButtonEnabled\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Readonly\n                                showCart\n                            \n                            \n                                    Readonly\n                                totalPrice\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCart\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCart\n                        \n                    \n                \n            \n            \n                \ncloseCart()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/cart/cart.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/cart/cart.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        checkoutButtonEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.items().length > 0)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getAll()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getShowCart()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getTotalPrice()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart/cart.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { CartFacade } from '../../cart.facade';\nimport { RouterLink } from '@angular/router';\nimport { CartItemsComponent } from '../shared/cart-items/cart-items.component';\nimport { animateBackdrop, animateSlideOver } from './cart.animations';\n\n@Component({\n  selector: 'lib-cart',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, RouterLink, CartItemsComponent],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [animateBackdrop, animateSlideOver],\n})\nexport class CartComponent {\n  readonly #cartFacade = inject(CartFacade);\n  readonly items = this.#cartFacade.getAll();\n  readonly checkoutButtonEnabled = computed(() => this.items().length > 0);\n  readonly totalPrice = this.#cartFacade.getTotalPrice();\n  readonly showCart = this.#cartFacade.getShowCart();\n\n  removeItem(id: number): void {\n    this.#cartFacade.removeItem(id);\n  }\n\n  closeCart(): void {\n    this.#cartFacade.setShowCart(false);\n  }\n}\n\n    \n\n    \n        @if (showCart()) {\n\n  \n  \n    \n  \n\n\n  \n    \n      \n        \n          Shopping cart\n          \n            \n              \n              Close panel\n              \n                \n              \n            \n          \n        \n\n        \n      \n\n      \n        \n          Total\n          {{ totalPrice() | currency }}\n        \n        Shipping and taxes calculated at checkout.\n        \n          \n            Checkout\n          \n        \n        \n          \n            or\n            \n              Continue Shopping\n               &rarr;\n            \n          \n        \n      \n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (showCart()) {                                        Shopping cart                                                  Close panel                                                                                                                Total          {{ totalPrice() | currency }}                Shipping and taxes calculated at checkout.                              Checkout                                                or                          Continue Shopping               →                                          }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartFacade.html":{"url":"injectables/CartFacade.html","title":"injectable - CartFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/cart.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartStore\n                            \n                            \n                                    Readonly\n                                    Private\n                                #orderFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #shoppingSessionApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                getAll\n                            \n                            \n                                getHasShoppingSession\n                            \n                            \n                                getItemCount\n                            \n                            \n                                getShowCart\n                            \n                            \n                                getTotalPrice\n                            \n                            \n                                    Async\n                                loadShoppingSession\n                            \n                            \n                                removeItem\n                            \n                            \n                                setShowCart\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(productId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHasShoppingSession\n                        \n                    \n                \n            \n            \n                \ngetHasShoppingSession()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemCount\n                        \n                    \n                \n            \n            \n                \ngetItemCount()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShowCart\n                        \n                    \n                \n            \n            \n                \ngetShowCart()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPrice\n                        \n                    \n                \n            \n            \n                \ngetTotalPrice()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadShoppingSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadShoppingSession()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setShowCart\n                        \n                    \n                \n            \n            \n                \nsetShowCart(showCart: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                showCart\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItem\n                        \n                    \n                \n            \n            \n                \nupdateItem(id: number, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/cart.facade.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartStore)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/cart.facade.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/cart.facade.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #shoppingSessionApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ShoppingSessionApi)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/cart.facade.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { CartStore } from './+state/cart.store';\nimport { CartItemResponse, OrderResponse, ShoppingSessionApi } from '@demo-shop/api';\nimport { firstValueFrom } from 'rxjs';\nimport { OrderFacade } from '@demo-shop/order';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartFacade {\n  readonly #cartStore = inject(CartStore);\n  readonly #shoppingSessionApi = inject(ShoppingSessionApi);\n  readonly #orderFacade = inject(OrderFacade);\n\n  getAll(): Signal {\n    return this.#cartStore.entities;\n  }\n\n  getTotalPrice(): Signal {\n    return this.#cartStore.totalPrice;\n  }\n\n  getItemCount(): Signal {\n    return this.#cartStore.itemCount;\n  }\n\n  addItem(productId: number): void {\n    const item = this.#cartStore.getItemByProductId(productId);\n\n    if (item) {\n      this.updateItem(item.id, item.quantity + 1);\n    } else {\n      this.#cartStore.create({\n        productId,\n      });\n    }\n  }\n\n  updateItem(id: number, quantity: number): void {\n    this.#cartStore.update(id, { quantity });\n  }\n\n  removeItem(id: number): void {\n    const item = this.#cartStore.getItemById(id);\n\n    if (item && item.quantity > 1) {\n      this.updateItem(item.id, item.quantity - 1);\n    } else {\n      this.#cartStore.delete(id);\n    }\n  }\n\n  getShowCart(): Signal {\n    return this.#cartStore.showCart;\n  }\n\n  getHasShoppingSession(): Signal {\n    return this.#cartStore.hasShoppingSession;\n  }\n\n  setShowCart(showCart: boolean): void {\n    this.#cartStore.setShowCart(showCart);\n  }\n\n  async loadShoppingSession(): Promise {\n    await this.#cartStore.loadShoppingSession();\n  }\n\n  async checkout(): Promise {\n    try {\n      const res = await firstValueFrom(this.#shoppingSessionApi.checkout());\n      this.#orderFacade.add(res);\n\n      await this.loadShoppingSession();\n    } catch (err: any) {\n      console.error(err);\n      throw new Error(err.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartIconComponent.html":{"url":"components/CartIconComponent.html","title":"component - CartIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/cart-icon/cart-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-cart-icon\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart-icon.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                itemsInCart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showCart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showCart\n                        \n                    \n                \n            \n            \n                \nshowCart()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/cart-icon/cart-icon.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart-icon/cart-icon.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemsInCart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getItemCount()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/cart-icon/cart-icon.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartFacade } from '../../cart.facade';\n\n@Component({\n  selector: 'lib-cart-icon',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './cart-icon.component.html',\n  styleUrl: './cart-icon.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartIconComponent {\n  readonly #cartFacade = inject(CartFacade);\n  readonly itemsInCart = this.#cartFacade.getItemCount();\n\n  showCart(): void {\n    this.#cartFacade.setShowCart(true);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{ itemsInCart() }}\n    items in cart, view bag\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ itemsInCart() }}    items in cart, view bag  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItemResponse.html":{"url":"interfaces/CartItemResponse.html","title":"interface - CartItemResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItemResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/cart-item-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                                \n                                        \n                                            productThumbnail\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                                \n                                        \n                                            unitPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productThumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productThumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unitPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CartItemResponse {\n  id: number;\n  productId: number;\n  productName: string;\n  productThumbnail: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartItemsComponent.html":{"url":"components/CartItemsComponent.html","title":"component - CartItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-cart-items\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart-items.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart-items.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        removeItem\n                    \n                \n                        \n                            \n                                    Defined in libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, output } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { CartItemResponse } from '@demo-shop/api';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'lib-cart-items',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, RouterLink],\n  templateUrl: './cart-items.component.html',\n  styleUrl: './cart-items.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemsComponent {\n  readonly items = input.required();\n\n  removeItem = output();\n}\n\n    \n\n    \n        \n  \n    \n      @for (item of items(); track item.id) {\n      \n        \n          \n        \n\n        \n          \n            \n              \n                {{ item.productName }}\n              \n              {{ item.totalPrice | currency }}\n            \n          \n          \n            Qty {{ item.quantity }}\n\n            \n              \n                Remove\n              \n            \n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @for (item of items(); track item.id) {                                                                                            {{ item.productName }}                            {{ item.totalPrice | currency }}                                            Qty {{ item.quantity }}                                          Remove                                                        }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckoutAddressForm.html":{"url":"interfaces/CheckoutAddressForm.html","title":"interface - CheckoutAddressForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CheckoutAddressForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/models/checkout-form.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartment\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            zip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartment:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CheckoutForm {\n  firstname: FormControl;\n  lastname: FormControl;\n  email: FormControl;\n  phone?: FormControl;\n  address: FormGroup;\n}\n\nexport interface CheckoutAddressForm {\n  country: FormControl;\n  street: FormControl;\n  apartment: FormControl;\n  city: FormControl;\n  region: FormControl;\n  zip: FormControl;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/cart/src/lib/components/checkout/checkout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-checkout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                CartItemsComponent\n                            ReactiveFormsModule\n                                FormErrorComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./checkout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #fb\n                            \n                            \n                                    Readonly\n                                    Private\n                                #router\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                checkoutForm\n                            \n                            \n                                    Readonly\n                                isCheckoutEnabled\n                            \n                            \n                                    Readonly\n                                isUpdateEnabled\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                showShippingInformation\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                createCheckOutForm\n                            \n                            \n                                getCheckoutEnabled\n                            \n                            \n                                getUpdateEnabled\n                            \n                            \n                                removeItem\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCheckOutForm\n                        \n                    \n                \n            \n            \n                \ncreateCheckOutForm()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCheckoutEnabled\n                        \n                    \n                \n            \n            \n                \ngetCheckoutEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdateEnabled\n                        \n                    \n                \n            \n            \n                \ngetUpdateEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        checkoutForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.createCheckOutForm()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isCheckoutEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getCheckoutEnabled()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isUpdateEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.getUpdateEnabled()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getAll()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getTotalPrice()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        showShippingInformation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(window.innerWidth >= 768)\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/cart/src/lib/components/checkout/checkout.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, inject, signal, Signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartFacade } from '../../cart.facade';\nimport { FormErrorComponent } from '@demo-shop/shared';\nimport { CartItemsComponent } from '../shared/cart-items/cart-items.component';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CheckoutAddressForm, CheckoutForm } from '../../models/checkout-form';\nimport { UserFacade } from '@demo-shop/user';\nimport { Router } from '@angular/router';\nimport { UpdateUserAddressRequest } from '@demo-shop/api';\n\n@Component({\n  selector: 'lib-checkout',\n  standalone: true,\n  imports: [CommonModule, CartItemsComponent, ReactiveFormsModule, FormErrorComponent],\n  templateUrl: './checkout.component.html',\n  styleUrl: './checkout.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutComponent {\n  readonly checkoutForm = this.createCheckOutForm();\n  readonly isUpdateEnabled = this.getUpdateEnabled();\n  readonly isCheckoutEnabled = this.getCheckoutEnabled();\n  readonly #cartFacade = inject(CartFacade);\n  readonly items = this.#cartFacade.getAll();\n  readonly price = this.#cartFacade.getTotalPrice();\n  readonly #userFacade = inject(UserFacade);\n  readonly user = this.#userFacade.getCurrentUser();\n  readonly #fb = inject(FormBuilder);\n  readonly #router = inject(Router);\n  readonly showShippingInformation = signal(window.innerWidth >= 768);\n\n  removeItem(id: number): void {\n    this.#cartFacade.removeItem(id);\n  }\n\n  async checkout(): Promise {\n    try {\n      await this.#cartFacade.checkout();\n      this.#router.navigateByUrl('/products');\n    } catch (err: any) {\n      throw new Error(err.message);\n    }\n  }\n\n  async updateUser(): Promise {\n    const { address, phone } = this.checkoutForm().controls;\n    if (address.dirty && address.valid) {\n      await this.#userFacade.updateUserAddress(address.value as UpdateUserAddressRequest);\n    }\n\n    if (phone?.dirty) {\n      await this.#userFacade.updateUserPhone({ phone: phone.value });\n    }\n  }\n\n  createCheckOutForm(): Signal> {\n    return computed(() =>\n      this.#fb.group({\n        firstname: this.#fb.control(\n          {\n            value: this.user()?.firstname ?? '',\n            disabled: true,\n          },\n          { validators: Validators.required, nonNullable: true }\n        ),\n        lastname: this.#fb.control(\n          {\n            value: this.user()?.lastname ?? '',\n            disabled: true,\n          },\n          { validators: Validators.required, nonNullable: true }\n        ),\n        email: this.#fb.control(\n          { value: this.user()?.email ?? '', disabled: true },\n          {\n            validators: [Validators.required, Validators.email],\n            nonNullable: true,\n          }\n        ),\n        phone: this.#fb.control(this.user()?.phone ?? ''),\n        address: this.#fb.group(\n          {\n            country: this.#fb.control(this.user()?.address?.country ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            street: this.#fb.control(this.user()?.address?.street ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            apartment: this.#fb.control(this.user()?.address?.apartment ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            city: this.#fb.control(this.user()?.address?.city ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n            region: this.#fb.control(this.user()?.address?.region ?? ''),\n            zip: this.#fb.control(this.user()?.address?.zip ?? '', {\n              validators: Validators.required,\n              nonNullable: true,\n            }),\n          },\n          { validators: Validators.required }\n        ),\n      })\n    );\n  }\n\n  getCheckoutEnabled(): Signal {\n    return computed(() => {\n      const hasShoppingItems = this.items().length > 0;\n      const hasUserAddress = !!this.user()?.address;\n      const hasUserDataChanges = this.checkoutForm().dirty;\n\n      return hasShoppingItems && hasUserAddress && !hasUserDataChanges;\n    });\n  }\n\n  getUpdateEnabled(): Signal {\n    return computed(() => this.checkoutForm().valid && this.checkoutForm().dirty);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Shipping information\n            \n              \n            \n          \n          \n            \n              \n                First name\n              \n              \n                \n              \n              \n            \n\n            \n              \n                Last name\n              \n              \n                \n                \n              \n            \n\n            \n              \n                Email address\n              \n              \n                \n              \n              \n            \n\n            \n              Phone\n              \n                \n              \n            \n\n            \n              \n                Country\n                \n                  \n                    United States\n                    Austria\n                    Vietnam\n                  \n                \n                \n              \n\n              \n                Street\n                \n                  \n                \n              \n\n              \n                \n                  Apartment\n                \n                \n                  \n                \n                \n              \n\n              \n                City\n                \n                  \n                \n                \n              \n\n              \n                State / Province\n                \n                  \n                \n              \n\n              \n                \n                  ZIP / Postal code\n                \n                \n                  \n                \n                \n              \n            \n\n            \n              Update\n            \n          \n        \n      \n    \n\n    \n      Order Summary\n      \n      \n        \n          Total{{ price() | currency }}\n        \n      \n\n      \n        \n          \n            Checkout\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Shipping information                                                                                                    First name                                                                                                                              Last name                                                                                                                                Email address                                                                                                              Phone                                                                                                  Country                                                      United States                    Austria                    Vietnam                                                                                              Street                                                                                                                Apartment                                                                                                                              City                                                                                                              State / Province                                                                                                                ZIP / Postal code                                                                                                                                      Update                                                  Order Summary                              Total{{ price() | currency }}                                                  Checkout                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckoutForm.html":{"url":"interfaces/CheckoutForm.html","title":"interface - CheckoutForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CheckoutForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/cart/src/lib/models/checkout-form.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         FormGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     FormControl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FormControl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormControl, FormGroup } from '@angular/forms';\n\nexport interface CheckoutForm {\n  firstname: FormControl;\n  lastname: FormControl;\n  email: FormControl;\n  phone?: FormControl;\n  address: FormGroup;\n}\n\nexport interface CheckoutAddressForm {\n  country: FormControl;\n  street: FormControl;\n  apartment: FormControl;\n  city: FormControl;\n  region: FormControl;\n  zip: FormControl;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Configuration.html":{"url":"classes/Configuration.html","title":"class - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/configuration.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                accessToken\n                            \n                            \n                                    Optional\n                                apiKeys\n                            \n                            \n                                    Optional\n                                basePath\n                            \n                            \n                                credentials\n                            \n                            \n                                encodeParam\n                            \n                            \n                                    Optional\n                                encoder\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultEncodeParam\n                            \n                            \n                                    Public\n                                isJsonMime\n                            \n                            \n                                    Public\n                                lookupCredential\n                            \n                            \n                                    Public\n                                selectHeaderAccept\n                            \n                            \n                                    Public\n                                selectHeaderContentType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configurationParameters: ConfigurationParameters)\n                    \n                \n                        \n                            \n                                Defined in libs/api/configuration.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurationParameters\n                                                  \n                                                        \n                                                                        ConfigurationParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        accessToken\n                        \n                    \n                \n            \n            \n                \n                    Since 5.0. Use credentials instead\n                \n            \n                \n                    \n                        Type :     string | \n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:47\n                        \n                    \n\n            \n                \n                     @deprecated Since 5.0. Use credentials instead\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        apiKeys\n                        \n                    \n                \n            \n            \n                \n                    Since 5.0. Use credentials instead\n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:41\n                        \n                    \n\n            \n                \n                     @deprecated Since 5.0. Use credentials instead\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:67\n                        \n                    \n\n            \n                \n                    The keys are the names in the securitySchemes section of the OpenAPI\ndocument. They should map to the value used for authentication\nminus any standard prefixes such as 'Basic' or 'Bearer'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:61\n                        \n                    \n\n            \n                \n                    Encoding of various path parameter\nstyles.\n\nSee README.md for more details\n\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:53\n                        \n                    \n\n            \n                \n                    Takes care of encoding query- and form-parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        withCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/configuration.ts:49\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultEncodeParam\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultEncodeParam(param: Param)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            Param\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isJsonMime\n                        \n                    \n                \n            \n            \n                \n                        \n                    isJsonMime(mime: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:144\n                        \n                    \n\n\n            \n                \n                        Check if the given MIME is a JSON MIME.\nJSON MIME examples:\n  application/json\n  application/json; charset=UTF8\n  APPLICATION/JSON\n  application/vnd.company+json\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMIME (Multipurpose Internet Mail Extensions)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the given MIME is JSON, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lookupCredential\n                        \n                    \n                \n            \n            \n                \n                        \n                    lookupCredential(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectHeaderAccept\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectHeaderAccept(accepts: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:122\n                        \n                    \n\n\n            \n                \n                        Select the correct accept content-type to use for a request.\nUses Configuration to determine the correct accept content-type.\nIf no content type is found return the first found type if the contentTypes is not empty\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accepts\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe array of content types that are available for selection.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                the selected content-type or undefined if no selection could be made.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectHeaderContentType\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectHeaderContentType(contentTypes: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/configuration.ts:103\n                        \n                    \n\n\n            \n                \n                        Select the correct content-type to use for a request.\nUses Configuration to determine the correct content-type.\nIf no content type is found return the first found type if the contentTypes is not empty\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                contentTypes\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nthe array of content types that are available for selection\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                the selected content-type or undefined if no selection could be made.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\nimport { Param } from './param';\n\nexport interface ConfigurationParameters {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Override the default method for encoding path parameters in various\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam?: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials?: { [key: string]: string | (() => string | undefined) };\n}\n\nexport class Configuration {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Encoding of various path parameter\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials: { [key: string]: string | (() => string | undefined) };\n\n  constructor(configurationParameters: ConfigurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n    if (configurationParameters.encodeParam) {\n      this.encodeParam = configurationParameters.encodeParam;\n    } else {\n      this.encodeParam = param => this.defaultEncodeParam(param);\n    }\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n\n    // init default Bearer credential\n    if (!this.credentials['Bearer']) {\n      this.credentials['Bearer'] = () => {\n        return typeof this.accessToken === 'function' ? this.accessToken() : this.accessToken;\n      };\n    }\n  }\n\n  /**\n   * Select the correct content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param contentTypes - the array of content types that are available for selection\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n    return type;\n  }\n\n  /**\n   * Select the correct accept content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param accepts - the array of content types that are available for selection.\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderAccept(accepts: string[]): string | undefined {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return accepts[0];\n    }\n    return type;\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  public isJsonMime(mime: string): boolean {\n    const jsonMime: RegExp = new RegExp('^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  public lookupCredential(key: string): string | undefined {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n  private defaultEncodeParam(param: Param): string {\n    // This implementation exists as fallback for missing configuration\n    // and for backwards compatibility to older typescript-angular generator versions.\n    // It only works for the 'simple' parameter style.\n    // Date-handling only works for the 'date-time' format.\n    // All other styles and Date-formats are probably handled incorrectly.\n    //\n    // But: if that's all you need (i.e.: the most common use-case): no need for customization!\n\n    const value =\n      param.dataFormat === 'date-time' && param.value instanceof Date\n        ? (param.value as Date).toISOString()\n        : param.value;\n\n    return encodeURIComponent(String(value));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigurationParameters.html":{"url":"interfaces/ConfigurationParameters.html","title":"interface - ConfigurationParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigurationParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/configuration.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apiKeys\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            basePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            credentials\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            encodeParam\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            encoder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Since 5.0. Use credentials instead\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     @deprecated Since 5.0. Use credentials instead\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Since 5.0. Use credentials instead\n                                    \n                                \n                                \n                                    \n                                        apiKeys:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                     @deprecated Since 5.0. Use credentials instead\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        basePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        basePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The keys are the names in the securitySchemes section of the OpenAPI\ndocument. They should map to the value used for authentication\nminus any standard prefixes such as 'Basic' or 'Bearer'.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encodeParam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encodeParam:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Override the default method for encoding path parameters in various\nstyles.\n\nSee README.md for more details\n\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encoder:         HttpParameterCodec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpParameterCodec\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Takes care of encoding query- and form-parameters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\nimport { Param } from './param';\n\nexport interface ConfigurationParameters {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Override the default method for encoding path parameters in various\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam?: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials?: { [key: string]: string | (() => string | undefined) };\n}\n\nexport class Configuration {\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  apiKeys?: { [key: string]: string };\n  username?: string;\n  password?: string;\n  /**\n   *  @deprecated Since 5.0. Use credentials instead\n   */\n  accessToken?: string | (() => string);\n  basePath?: string;\n  withCredentials?: boolean;\n  /**\n   * Takes care of encoding query- and form-parameters.\n   */\n  encoder?: HttpParameterCodec;\n  /**\n   * Encoding of various path parameter\n   * styles.\n   * \n   * See {@link README.md} for more details\n   * \n   */\n  encodeParam: (param: Param) => string;\n  /**\n   * The keys are the names in the securitySchemes section of the OpenAPI\n   * document. They should map to the value used for authentication\n   * minus any standard prefixes such as 'Basic' or 'Bearer'.\n   */\n  credentials: { [key: string]: string | (() => string | undefined) };\n\n  constructor(configurationParameters: ConfigurationParameters = {}) {\n    this.apiKeys = configurationParameters.apiKeys;\n    this.username = configurationParameters.username;\n    this.password = configurationParameters.password;\n    this.accessToken = configurationParameters.accessToken;\n    this.basePath = configurationParameters.basePath;\n    this.withCredentials = configurationParameters.withCredentials;\n    this.encoder = configurationParameters.encoder;\n    if (configurationParameters.encodeParam) {\n      this.encodeParam = configurationParameters.encodeParam;\n    } else {\n      this.encodeParam = param => this.defaultEncodeParam(param);\n    }\n    if (configurationParameters.credentials) {\n      this.credentials = configurationParameters.credentials;\n    } else {\n      this.credentials = {};\n    }\n\n    // init default Bearer credential\n    if (!this.credentials['Bearer']) {\n      this.credentials['Bearer'] = () => {\n        return typeof this.accessToken === 'function' ? this.accessToken() : this.accessToken;\n      };\n    }\n  }\n\n  /**\n   * Select the correct content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param contentTypes - the array of content types that are available for selection\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderContentType(contentTypes: string[]): string | undefined {\n    if (contentTypes.length === 0) {\n      return undefined;\n    }\n\n    const type = contentTypes.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return contentTypes[0];\n    }\n    return type;\n  }\n\n  /**\n   * Select the correct accept content-type to use for a request.\n   * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n   * If no content type is found return the first found type if the contentTypes is not empty\n   * @param accepts - the array of content types that are available for selection.\n   * @returns the selected content-type or undefined if no selection could be made.\n   */\n  public selectHeaderAccept(accepts: string[]): string | undefined {\n    if (accepts.length === 0) {\n      return undefined;\n    }\n\n    const type = accepts.find((x: string) => this.isJsonMime(x));\n    if (type === undefined) {\n      return accepts[0];\n    }\n    return type;\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  public isJsonMime(mime: string): boolean {\n    const jsonMime: RegExp = new RegExp('^(application/json|[^;/ \\t]+/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n    return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n  }\n\n  public lookupCredential(key: string): string | undefined {\n    const value = this.credentials[key];\n    return typeof value === 'function' ? value() : value;\n  }\n\n  private defaultEncodeParam(param: Param): string {\n    // This implementation exists as fallback for missing configuration\n    // and for backwards compatibility to older typescript-angular generator versions.\n    // It only works for the 'simple' parameter style.\n    // Date-handling only works for the 'date-time' format.\n    // All other styles and Date-formats are probably handled incorrectly.\n    //\n    // But: if that's all you need (i.e.: the most common use-case): no need for customization!\n\n    const value =\n      param.dataFormat === 'date-time' && param.value instanceof Date\n        ? (param.value as Date).toISOString()\n        : param.value;\n\n    return encodeURIComponent(String(value));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomHttpParameterCodec.html":{"url":"classes/CustomHttpParameterCodec.html","title":"class - CustomHttpParameterCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomHttpParameterCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/encoder.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom HttpParameterCodec\nWorkaround for https://github.com/angular/angular/issues/18261\n\n            \n\n\n            \n                Implements\n            \n            \n                            HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeKey\n                        \n                    \n                \n            \n            \n                \ndecodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeValue\n                        \n                    \n                \n            \n            \n                \ndecodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeKey\n                        \n                    \n                \n            \n            \n                \nencodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeValue\n                        \n                    \n                \n            \n            \n                \nencodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/encoder.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n  decodeValue(v: string): string {\n    return decodeURIComponent(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateTimeComponent.html":{"url":"components/DateTimeComponent.html","title":"component - DateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/shared/src/lib/components/date-time/date-time.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-date-time\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./date-time.component.html\n            \n\n\n\n            \n                styleUrl\n                ./date-time.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                dateTime\n                            \n                            \n                                    Readonly\n                                pattern\n                            \n                            \n                                    Readonly\n                                timezone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/date-time/date-time.component.ts:16\n                        \n                    \n\n            \n                \n                    Date to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pattern\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input('MMM dd, YYYY')\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/date-time/date-time.component.ts:20\n                        \n                    \n\n            \n                \n                    Pattern used to format date\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        timezone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input('UTC')\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/date-time/date-time.component.ts:24\n                        \n                    \n\n            \n                \n                    Timezone used to display date\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, InputSignal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'lib-date-time',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './date-time.component.html',\n  styleUrl: './date-time.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DateTimeComponent {\n  /**\n   * Date to display\n   */\n  readonly dateTime: InputSignal = input.required();\n  /**\n   * Pattern used to format date\n   */\n  readonly pattern: InputSignal = input('MMM dd, YYYY');\n  /**\n   * Timezone used to display date\n   */\n  readonly timezone: InputSignal = input('UTC');\n}\n\n    \n\n    \n        \n  {{ dateTime() | date : pattern() : timezone() }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ dateTime() | date : pattern() : timezone() }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormErrorComponent.html":{"url":"components/FormErrorComponent.html","title":"component - FormErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/shared/src/lib/components/form-error/form-error.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-form-error\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./form-error.component.html\n            \n\n\n\n            \n                styleUrl\n                ./form-error.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                errors\n                            \n                            \n                                    Readonly\n                                fieldName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        errors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input.required()\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/form-error/form-error.component.ts:24\n                        \n                    \n\n            \n                \n                    Set of validation errors\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        fieldName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : input('Field')\n                    \n                \n                    \n                        \n                                Defined in libs/shared/src/lib/components/form-error/form-error.component.ts:20\n                        \n                    \n\n            \n                \n                    Name of form field\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, InputSignal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValidationErrors } from '@angular/forms';\n\n@Component({\n  selector: 'lib-form-error',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './form-error.component.html',\n  styleUrl: './form-error.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'text-xs text-red-600',\n  },\n})\nexport class FormErrorComponent {\n  /**\n   * Name of form field\n   */\n  readonly fieldName: InputSignal = input('Field');\n  /**\n   * Set of validation errors\n   */\n  readonly errors: InputSignal = input.required();\n}\n\n    \n\n    \n        @if (errors()?.['required']) {\n  {{ fieldName() }} is required\n}\n\n@if (errors()?.['email']) {\n  Email invalid\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (errors()?.[\\'required\\']) {  {{ fieldName() }} is required}@if (errors()?.[\\'email\\']) {  Email invalid}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetOrderByIdRequest.html":{"url":"interfaces/GetOrderByIdRequest.html","title":"interface - GetOrderByIdRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetOrderByIdRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/get-order-by-id-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetOrderByIdRequest {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetProductByIdRequest.html":{"url":"interfaces/GetProductByIdRequest.html","title":"interface - GetProductByIdRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetProductByIdRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/get-product-by-id-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetProductByIdRequest {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpValidationProblemDetails.html":{"url":"interfaces/HttpValidationProblemDetails.html","title":"interface - HttpValidationProblemDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpValidationProblemDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/http-validation-problem-details.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any | any\n\n                    \n                \n                        \n                            \n                                Defined in libs/api/model/http-validation-problem-details.ts:11\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpValidationProblemDetails {\n  [key: string]: any | any;\n\n  errors?: { [key: string]: Array };\n  type?: string | null;\n  title?: string | null;\n  status?: number | null;\n  detail?: string | null;\n  instance?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageResponse.html":{"url":"interfaces/ImageResponse.html","title":"interface - ImageResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/image-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageResponse {\n  name: string;\n  uri: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeycloakService.html":{"url":"injectables/KeycloakService.html","title":"injectable - KeycloakService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeycloakService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/services/keycloak.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                authConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                keycloak\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                init\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                                \n                                    authenticated\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/keycloak.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        authConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AUTH_CONFIG)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/keycloak.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        keycloak\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Keycloak\n\n                    \n                \n                \n                    \n                        Default value : new Keycloak(this.authConfig.keycloak)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/keycloak.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in libs/auth/src/lib/services/keycloak.service.ts:11\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authenticated\n                    \n                \n\n                \n                    \n                        getauthenticated()\n                    \n                \n                            \n                                \n                                    Defined in libs/auth/src/lib/services/keycloak.service.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport Keycloak from 'keycloak-js';\nimport { AUTH_CONFIG } from '../models/auth-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeycloakService {\n  readonly authConfig = inject(AUTH_CONFIG);\n\n  get token(): string | undefined {\n    return this.keycloak.token;\n  }\n\n  get authenticated(): boolean {\n    return this.keycloak.authenticated === true;\n  }\n\n  private readonly keycloak: Keycloak = new Keycloak(this.authConfig.keycloak);\n\n  async init(): Promise {\n    return await this.keycloak.init({\n      onLoad: 'check-sso',\n      silentCheckSsoRedirectUri: window.location.origin + '/silent-check-sso.html',\n    });\n  }\n\n  login(): Promise {\n    return this.keycloak.login();\n  }\n\n  logout(): Promise {\n    return this.keycloak.logout({ redirectUri: window.location.origin });\n  }\n\n  register(): Promise {\n    return this.keycloak.register();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitoredUser.html":{"url":"interfaces/MonitoredUser.html","title":"interface - MonitoredUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MonitoredUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/monitoring/src/lib/models/monitored-user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MonitoredUser {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitoringConfig.html":{"url":"interfaces/MonitoringConfig.html","title":"interface - MonitoringConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MonitoringConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/monitoring/src/lib/models/monitoring-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sentry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sentry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sentry:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface MonitoringConfig {\n  sentry: {\n    enabled: boolean;\n    dsn: string;\n    trustedDomain: string;\n  };\n}\n\nexport const MONITORING_CONFIG = new InjectionToken('MONITORING_CONFIG');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonitoringFacade.html":{"url":"injectables/MonitoringFacade.html","title":"injectable - MonitoringFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MonitoringFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/monitoring/src/lib/monitoring.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setUser\n                        \n                    \n                \n            \n            \n                \nsetUser(user: MonitoredUser)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/monitoring/src/lib/monitoring.facade.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            MonitoredUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MONITORING_CONFIG)\n                    \n                \n                    \n                        \n                                Defined in libs/monitoring/src/lib/monitoring.facade.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { MonitoredUser } from './models/monitored-user';\nimport * as Sentry from '@sentry/angular';\nimport { MONITORING_CONFIG } from './models/monitoring-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MonitoringFacade {\n  readonly config = inject(MONITORING_CONFIG);\n\n  setUser(user: MonitoredUser): void {\n    const { enabled, dsn } = this.config.sentry;\n\n    if (!enabled || !dsn) {\n      return;\n    }\n\n    Sentry.setUser({\n      ...user,\n      ip_address: 'none',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/navigation/src/lib/components/navigation/navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            NgOptimizedImage\n                                ProductSearchComponent\n                                UserNavigationComponent\n                                CartIconComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navigation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #navigationService\n                            \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #router\n                            \n                            \n                                    Readonly\n                                menuItems\n                            \n                            \n                                    Readonly\n                                mobileMenuOpen\n                            \n                            \n                                    Readonly\n                                selectedMenuItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setProductCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setProductCategory\n                        \n                    \n                \n            \n            \n                \nsetProductCategory(category: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #navigationService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NavigationService)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#navigationService.getFilteredItems(NavigationType.ROUTE) as RouteItem[]\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        mobileMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedMenuItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('products')\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/navigation.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, signal } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { Router, RouterLink } from '@angular/router';\nimport { NavigationService } from '../../services/navigation.service';\nimport { NavigationType } from '../../enums/navigation-type';\nimport { RouteItem } from '../../models/navigation-item';\nimport { ProductFacade, ProductSearchComponent } from '@demo-shop/product';\nimport { animateBackdrop, animateSlideOver } from './navigation.animations';\nimport { UserNavigationComponent } from './user-navigation/user-navigation.component';\nimport { CartIconComponent } from '@demo-shop/cart';\n\n@Component({\n  selector: 'lib-navigation',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterLink,\n    NgOptimizedImage,\n    ProductSearchComponent,\n    UserNavigationComponent,\n    CartIconComponent,\n  ],\n  templateUrl: './navigation.component.html',\n  styleUrl: './navigation.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [animateBackdrop, animateSlideOver],\n  host: {\n    class: 'bg-white',\n    '(window:resize)': 'this.mobileMenuOpen.set(false);',\n  },\n})\nexport class NavigationComponent {\n  readonly mobileMenuOpen = signal(false);\n  readonly selectedMenuItem = signal('products');\n\n  readonly #productFacade = inject(ProductFacade);\n  readonly #router = inject(Router);\n  readonly #navigationService = inject(NavigationService);\n\n  readonly menuItems = this.#navigationService.getFilteredItems(NavigationType.ROUTE) as RouteItem[];\n\n  setProductCategory(category: string): void {\n    this.#productFacade.setFilter({\n      categories: category,\n    });\n\n    this.#router.navigateByUrl('/products');\n  }\n}\n\n    \n\n    \n        @if (mobileMenuOpen()) {\n\n  \n\n\n  \n    \n      \n      Close menu\n      \n        \n      \n    \n  \n\n  \n    @for (item of menuItems; track $index) {\n    \n      \n        {{ item.label | titlecase }}\n      \n    \n    }\n  \n\n  \n\n}\n\n\n  \n    \n      \n        \n          \n          Open menu\n          \n            \n          \n        \n\n        \n        \n          \n            Demo Shop\n            \n          \n        \n\n        \n          \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (mobileMenuOpen()) {                    Close menu                                @for (item of menuItems; track $index) {                  {{ item.label | titlecase }}              }    }                                        Open menu                                                                              Demo Shop                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavigationConfig.html":{"url":"interfaces/NavigationConfig.html","title":"interface - NavigationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NavigationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/util/provide-navigation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            routes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:     Routes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Routes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EnvironmentProviders, InjectionToken, makeEnvironmentProviders } from '@angular/core';\nimport { Routes } from '@angular/router';\n\nexport interface NavigationConfig {\n  routes: Routes;\n}\n\nexport const NAVIGATION_CONFIG = new InjectionToken('NAVIGATION_CONFIG');\n\n\nexport const provideNavigation = (config: { routes: Routes }): EnvironmentProviders => {\n  const routes = config.routes.filter(route => route.data?.['showInMenu']);\n\n  return makeEnvironmentProviders([\n    { provide: NAVIGATION_CONFIG, useValue: { routes } },\n  ]);\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationItem.html":{"url":"classes/NavigationItem.html","title":"class - NavigationItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/models/navigation-item.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                    Optional\n                                options\n                            \n                            \n                                    Public\n                                order\n                            \n                            \n                                    Public\n                                    Optional\n                                subItems\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(label: string, order: number, options?: literal type, subItems?: RouteItem[])\n                    \n                \n                        \n                            \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        subItems\n                                                  \n                                                        \n                                                                        RouteItem[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        subItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteItem[]\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationType\n\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PermissionStrategy } from '@demo-shop/auth';\nimport { NavigationType } from '../enums/navigation-type';\n\nexport abstract class NavigationItem {\n  readonly type!: NavigationType;\n\n  protected constructor(\n    public label: string,\n    public order: number,\n    public options?: {\n      permissionStrategy?: PermissionStrategy;\n    },\n    public subItems?: RouteItem[]\n  ) {}\n}\n\nexport class RouteItem extends NavigationItem {\n  override readonly type: NavigationType = NavigationType.ROUTE;\n\n  constructor(\n    label: string,\n    order: number,\n    public override options: {\n      route: string;\n      permissionStrategy?: PermissionStrategy;\n      query?: string;\n    },\n    subItems?: RouteItem[]\n  ) {\n    super(label, order, options, subItems);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigationService.html":{"url":"injectables/NavigationService.html","title":"injectable - NavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/services/navigation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #authFacade\n                            \n                            \n                                    Private\n                                    Readonly\n                                menuItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilteredItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilteredItems\n                        \n                    \n                \n            \n            \n                \ngetFilteredItems(type: NavigationType)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/services/navigation.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            NavigationType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         NavigationItem[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #authFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/services/navigation.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new RouteItem('products', 101, {\n      route: 'products',\n    }),\n    new RouteItem('orders', 102, {\n      route: 'orders',\n      permissionStrategy: PermissionStrategy.AUTHENTICATED,\n    }),\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/services/navigation.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { AuthFacade, PermissionStrategy } from '@demo-shop/auth';\nimport { NavigationItem, RouteItem } from '../models/navigation-item';\nimport { NavigationType } from '../enums/navigation-type';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  readonly #authFacade = inject(AuthFacade);\n\n  private readonly menuItems: NavigationItem[] = [\n    new RouteItem('products', 101, {\n      route: 'products',\n    }),\n    new RouteItem('orders', 102, {\n      route: 'orders',\n      permissionStrategy: PermissionStrategy.AUTHENTICATED,\n    }),\n  ];\n\n  getFilteredItems(type: NavigationType): NavigationItem[] {\n    const isType = (itemType: NavigationType) => itemType === type;\n    const allowDisplay = (strategy?: PermissionStrategy) => !strategy || this.#authFacade.hasPermission(strategy);\n\n    return this.menuItems\n      .filter(item => isType(item.type) && allowDisplay(item.options?.['permissionStrategy']))\n      .sort((a, b) => a.order - b.order);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoReuseStrategy.html":{"url":"classes/NoReuseStrategy.html","title":"class - NoReuseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoReuseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/frontend/src/app/strategies/no-reuse-strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RouteReuseStrategy\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                retrieve\n                            \n                            \n                                shouldAttach\n                            \n                            \n                                shouldDetach\n                            \n                            \n                                shouldReuseRoute\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        retrieve\n                        \n                    \n                \n            \n            \n                \nretrieve()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DetachedRouteHandle | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldAttach\n                        \n                    \n                \n            \n            \n                \nshouldAttach()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldDetach\n                        \n                    \n                \n            \n            \n                \nshouldDetach()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldReuseRoute\n                        \n                    \n                \n            \n            \n                \nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                future\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                curr\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/frontend/src/app/strategies/no-reuse-strategy.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\n\nexport class NoReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(): boolean {\n    return false;\n  }\n\n  store(): void {\n    return;\n  }\n\n  shouldAttach(): boolean {\n    return false;\n  }\n\n  retrieve(): DetachedRouteHandle | null {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderApi.html":{"url":"injectables/OrderApi.html","title":"injectable - OrderApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/api/order-api.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                basePath\n                            \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                defaultHeaders\n                            \n                            \n                                    Public\n                                encoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addToHttpParams\n                            \n                            \n                                    Private\n                                addToHttpParamsRecursive\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                            \n                                    Public\n                                getOrderById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, basePath: string | string[], configuration: Configuration)\n                    \n                \n                        \n                            \n                                Defined in libs/api/api/order-api.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basePath\n                                                  \n                                                        \n                                                                    string | string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParams(httpParams: HttpParams, value: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParamsRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:110\n                        \n                    \n\n\n            \n                \n                        Get all orders\nGet all orders of current user based on identity extracted from bearer token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:198\n                        \n                    \n\n\n            \n                \n                        Get order by id\nGet order by id of current user based on identity extracted from bearer token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:218\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: number, observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/order-api.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost'\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Configuration()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/order-api.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { AddCartItem401Response } from '../model/add-cart-item401-response';\n// @ts-ignore\nimport { OrderListResponse } from '../model/order-list-response';\n// @ts-ignore\nimport { OrderResponse } from '../model/order-response';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderApi {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: Configuration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(elem => (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key)));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, (value as Date).toISOString().substring(0, 10));\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          k => (httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * Get all orders\n   * Get all orders of current user based on identity extracted from bearer token\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getAllOrdersOfCurrentUser(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getAllOrdersOfCurrentUser(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllOrdersOfCurrentUser(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllOrdersOfCurrentUser(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/orders`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n\n  /**\n   * Get order by id\n   * Get order by id of current user based on identity extracted from bearer token\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getOrderById(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getOrderById(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getOrderById(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getOrderById(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    if (id === null || id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getOrderById.');\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/orders/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'number',\n      dataFormat: 'int32',\n    })}`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderDataService.html":{"url":"injectables/OrderDataService.html","title":"injectable - OrderDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/order/src/lib/services/order-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #orderApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                loadById\n                            \n                            \n                                update\n                            \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(entity: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(entity: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(filter: OrderFilter)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            OrderFilter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadById\n                        \n                    \n                \n            \n            \n                \nloadById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(entity: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAll\n                        \n                    \n                \n            \n            \n                \nupdateAll(entity: OrderResponse[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/order-data.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            OrderResponse[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderApi)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/services/order-data.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { DataService } from '@angular-architects/ngrx-toolkit';\nimport { firstValueFrom } from 'rxjs';\nimport { OrderFilter } from '../models/order-filter';\nimport { OrderApi, OrderResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDataService implements DataService {\n  readonly #orderApi = inject(OrderApi);\n\n  async load(filter: OrderFilter): Promise {\n    const res = await firstValueFrom(this.#orderApi.getAllOrdersOfCurrentUser());\n\n    return res?.items ?? [];\n  }\n\n  loadById(id: number): Promise {\n    return firstValueFrom(this.#orderApi.getOrderById(id));\n  }\n\n  async create(entity: OrderResponse): Promise {\n    return entity;\n  }\n\n  delete(entity: OrderResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  update(entity: OrderResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  updateAll(entity: OrderResponse[]): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailComponent.html":{"url":"components/OrderDetailComponent.html","title":"component - OrderDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/order/src/lib/components/order-detail/order-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-order-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                                OrderStatusComponent\n                                DateTimeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #activatedRoute\n                            \n                            \n                                    Readonly\n                                    Private\n                                #orderFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #printInvoiceService\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                order\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                printPdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        printPdf\n                        \n                    \n                \n            \n            \n                \nprintPdf(order: OrderResponse, user: UserResponse | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserResponse | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #printInvoiceService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PrintInvoiceService)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#orderFacade.find(this.#activatedRoute.snapshot.params['id'])\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-detail/order-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { OrderFacade } from '../../order.facade';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserFacade } from '@demo-shop/user';\nimport { PrintInvoiceService } from '../../services/print-invoice.service';\nimport { OrderResponse, UserResponse } from '@demo-shop/api';\nimport { OrderStatusComponent } from '../shared/order-status/order-status.component';\nimport { DateTimeComponent } from '@demo-shop/shared';\n\n@Component({\n  selector: 'lib-order-detail',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, OrderStatusComponent, DateTimeComponent],\n  templateUrl: './order-detail.component.html',\n  styleUrl: './order-detail.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderDetailComponent implements OnInit {\n  readonly #userFacade = inject(UserFacade);\n  readonly user = this.#userFacade.getCurrentUser();\n  readonly #orderFacade = inject(OrderFacade);\n  readonly #activatedRoute = inject(ActivatedRoute);\n  readonly order = this.#orderFacade.find(this.#activatedRoute.snapshot.params['id']);\n  readonly #printInvoiceService = inject(PrintInvoiceService);\n\n  ngOnInit(): void {\n    this.#orderFacade.fetchById(this.#activatedRoute.snapshot.params['id']);\n  }\n\n  printPdf(order: OrderResponse, user: UserResponse | undefined): void {\n    if (!user) {\n      console.error('Could not find user');\n      return;\n    }\n\n    this.#printInvoiceService.generatePdf(order, user);\n  }\n}\n\n    \n\n    \n        \n  \n    @if (user() && order()) {\n    \n      \n        \n          Order #{{ order().id }}\n          \n        \n        \n      \n\n      {{ user()?.firstname }} {{ user()?.lastname }}\n      \n        {{ user()?.address?.street }} {{ user()?.address?.apartment }}\n        {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}\n        {{ user()?.address?.country }}\n      \n    \n    \n      Print\n    \n    }\n  \n  \n    @if (order()) {\n    \n      @for (item of order().items; track item.productId) {\n      \n        \n          \n        \n        \n          \n            #{{ item.productId }} {{ item.productName }}\n            Qty {{ item.quantity }}\n          \n        \n        \n          {{ item.totalPrice | currency }}\n          \n            {{ item.unitPrice | currency }}\n          \n        \n      \n      }\n      \n        \n          \n            total\n          \n        \n        \n          {{ order().amount | currency }}\n        \n      \n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (user() && order()) {                            Order #{{ order().id }}                                      {{ user()?.firstname }} {{ user()?.lastname }}              {{ user()?.address?.street }} {{ user()?.address?.apartment }}        {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}        {{ user()?.address?.country }}                    Print        }        @if (order()) {          @for (item of order().items; track item.productId) {                                                              #{{ item.productId }} {{ item.productName }}            Qty {{ item.quantity }}                                    {{ item.totalPrice | currency }}                      {{ item.unitPrice | currency }}                              }                                    total                                    {{ order().amount | currency }}                      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderFacade.html":{"url":"injectables/OrderFacade.html","title":"injectable - OrderFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/order/src/lib/order.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #orderStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                fetchAll\n                            \n                            \n                                fetchById\n                            \n                            \n                                find\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedByStatusAndDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(order: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAll\n                        \n                    \n                \n            \n            \n                \nfetchAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchById\n                        \n                    \n                \n            \n            \n                \nfetchById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedByStatusAndDate\n                        \n                    \n                \n            \n            \n                \ngetSortedByStatusAndDate()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/order.facade.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderStore)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/order.facade.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { OrderStore } from './+state/order.store';\nimport { OrderResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderFacade {\n  readonly #orderStore = inject(OrderStore);\n\n  fetchAll(): void {\n    this.#orderStore.load();\n  }\n\n  fetchById(id: number): void {\n    this.#orderStore.fetchById(id);\n  }\n\n  add(order: OrderResponse): void {\n    this.#orderStore.create(order);\n  }\n\n  find(id: number): Signal {\n    return this.#orderStore.getById(id);\n  }\n\n  getAll(): Signal {\n    return this.#orderStore.entities;\n  }\n\n  getSortedByStatusAndDate(): Signal {\n    return this.#orderStore.getSortedByStatusAndDate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderItemResponse.html":{"url":"interfaces/OrderItemResponse.html","title":"interface - OrderItemResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderItemResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/order-item-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            productId\n                                        \n                                \n                                \n                                        \n                                            productName\n                                        \n                                \n                                \n                                        \n                                            productThumbnail\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            totalPrice\n                                        \n                                \n                                \n                                        \n                                            unitPrice\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productThumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productThumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unitPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrderItemResponse {\n  productId: number;\n  productName: string;\n  productThumbnail: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderListComponent.html":{"url":"components/OrderListComponent.html","title":"component - OrderListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/order/src/lib/components/order-list/order-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-order-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            NgOptimizedImage\n                                OrderStatusComponent\n                                DateTimeComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #orderFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                MAX_THUMBNAILS\n                            \n                            \n                                    Readonly\n                                orders\n                            \n                            \n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/components/order-list/order-list.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #orderFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrderFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        MAX_THUMBNAILS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#orderFacade.getSortedByStatusAndDate()\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/order/src/lib/components/order-list/order-list.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { OrderFacade } from '../../order.facade';\nimport { UserFacade } from '@demo-shop/user';\nimport { RouterLink } from '@angular/router';\nimport { OrderStatusComponent } from '../shared/order-status/order-status.component';\nimport { DateTimeComponent } from '@demo-shop/shared';\n\n@Component({\n  selector: 'lib-order-list',\n  standalone: true,\n  imports: [CommonModule, RouterLink, NgOptimizedImage, OrderStatusComponent, DateTimeComponent],\n  templateUrl: './order-list.component.html',\n  styleUrl: './order-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderListComponent implements OnInit {\n  readonly MAX_THUMBNAILS = 5;\n\n  readonly #userFacade = inject(UserFacade);\n  readonly user = this.#userFacade.getCurrentUser();\n  readonly #orderFacade = inject(OrderFacade);\n  readonly orders = this.#orderFacade.getSortedByStatusAndDate();\n\n  ngOnInit() {\n    this.#orderFacade.fetchAll();\n  }\n}\n\n    \n\n    \n        \n  \n    @if (user()) {\n    {{ user()?.firstname }} {{ user()?.lastname }}\n    \n      {{ user()?.address?.street }} {{ user()?.address?.apartment }}\n      {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}\n      {{ user()?.address?.country }}\n    \n    }\n  \n  \n    \n      @for (order of orders(); track order.id) {\n      \n        \n        \n          \n            Order #{{ order.id }}\n            \n              @for (item of order.items; track item.productId; let index = $index; let count = $count) { @if (index  MAX_THUMBNAILS) {\n              \n                +{{ count - MAX_THUMBNAILS + 1 }}\n              \n              } @else {\n              \n                \n              \n              } } }\n            \n          \n        \n        \n          {{ order.amount | currency }}\n          \n        \n      \n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (user()) {    {{ user()?.firstname }} {{ user()?.lastname }}          {{ user()?.address?.street }} {{ user()?.address?.apartment }}      {{ user()?.address?.zip }} {{ user()?.address?.city }}, {{ user()?.address?.region }}      {{ user()?.address?.country }}        }              @for (order of orders(); track order.id) {                                            Order #{{ order.id }}                          @for (item of order.items; track item.productId; let index = $index; let count = $count) { @if (index  MAX_THUMBNAILS) {                              +{{ count - MAX_THUMBNAILS + 1 }}                            } @else {                                                          } } }                                                {{ order.amount | currency }}                              }      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderListResponse.html":{"url":"interfaces/OrderListResponse.html","title":"interface - OrderListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/order-list-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderResponse } from './order-response';\n\nexport interface OrderListResponse {\n  items: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderResponse.html":{"url":"interfaces/OrderResponse.html","title":"interface - OrderResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/order-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         OrderStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderStatus } from './order-status';\nimport { OrderItemResponse } from './order-item-response';\n\nexport interface OrderResponse {\n  id: number;\n  userId: number;\n  items: Array;\n  amount: number;\n  status: OrderStatus;\n  created: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderStatusComponent.html":{"url":"components/OrderStatusComponent.html","title":"component - OrderStatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrderStatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/order/src/lib/components/shared/order-status/order-status.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-order-status\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./order-status.component.html\n            \n\n\n\n            \n                styleUrl\n                ./order-status.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                status\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in libs/order/src/lib/components/shared/order-status/order-status.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        status\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in libs/order/src/lib/components/shared/order-status/order-status.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrderStatus } from '@demo-shop/api';\n\n@Component({\n  selector: 'lib-order-status',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './order-status.component.html',\n  styleUrl: './order-status.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'rounded-lg px-4 py-1.5 max-w-28 text-center text-white border border-slate-300 text-xs',\n    '[class.bg-green-800]': 'this.status() === \"Completed\"',\n    '[class.bg-orange-500]': 'this.status() === \"Created\"',\n  },\n})\nexport class OrderStatusComponent {\n  readonly status = input.required();\n}\n\n    \n\n    \n        {{ status() | titlecase }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ status() | titlecase }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderStatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Param.html":{"url":"interfaces/Param.html","title":"interface - Param","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Param\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/param.ts\n        \n\n\n            \n                Description\n            \n            \n                The parameter to encode.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dataFormat\n                                        \n                                \n                                \n                                        \n                                            dataType\n                                        \n                                \n                                \n                                        \n                                            explode\n                                        \n                                \n                                \n                                        \n                                            in\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataFormat:         DataFormat | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataFormat | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataType:         DataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DataType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        explode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         ParamLocation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamLocation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         ParamStyle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParamStyle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type StandardParamStyle =\n  | 'matrix'\n  | 'label'\n  | 'form'\n  | 'simple'\n  | 'spaceDelimited'\n  | 'pipeDelimited'\n  | 'deepObject';\n\n/**\n * The OpenAPI standard {@link StandardParamStyle}s may be extended by custom styles by the user.\n */\nexport type ParamStyle = StandardParamStyle | string;\n\n/**\n * Standard parameter locations defined by OpenAPI spec\n */\nexport type ParamLocation = 'query' | 'header' | 'path' | 'cookie';\n\n/**\n * Standard types as defined in OpenAPI Specification: Data Types\n */\nexport type StandardDataType = 'integer' | 'number' | 'boolean' | 'string' | 'object' | 'array';\n\n/**\n * Standard {@link DataType}s plus your own types/classes.\n */\nexport type DataType = StandardDataType | string;\n\n/**\n * Standard formats as defined in OpenAPI Specification: Data Types\n */\nexport type StandardDataFormat =\n  | 'int32'\n  | 'int64'\n  | 'float'\n  | 'double'\n  | 'byte'\n  | 'binary'\n  | 'date'\n  | 'date-time'\n  | 'password';\n\nexport type DataFormat = StandardDataFormat | string;\n\n/**\n * The parameter to encode.\n */\nexport interface Param {\n  name: string;\n  value: unknown;\n  in: ParamLocation;\n  style: ParamStyle;\n  explode: boolean;\n  dataType: DataType;\n  dataFormat: DataFormat | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/auth/src/lib/services/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #keycloakService\n                            \n                            \n                                    Readonly\n                                permissionStrategies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(permissionStrategy: PermissionStrategy, ...args: [])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/auth/src/lib/services/permission.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                permissionStrategy\n                                            \n                                                            PermissionStrategy\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #keycloakService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(KeycloakService)\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/permission.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        permissionStrategies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n    [PermissionStrategy.AUTHENTICATED]: () => this.#keycloakService.authenticated,\n  }\n                    \n                \n                    \n                        \n                                Defined in libs/auth/src/lib/services/permission.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { KeycloakService } from './keycloak.service';\nimport { PermissionStrategy } from '../enums/permission-strategy';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionService {\n  readonly #keycloakService = inject(KeycloakService);\n  readonly permissionStrategies: { [key in PermissionStrategy]: (...args: unknown[]) => boolean } = {\n    [PermissionStrategy.AUTHENTICATED]: () => this.#keycloakService.authenticated,\n  };\n\n  hasPermission(permissionStrategy: PermissionStrategy, ...args: unknown[]): boolean {\n    const permissionStrategyFn = this.permissionStrategies[permissionStrategy];\n\n    if (!permissionStrategyFn) {\n      return false;\n    }\n\n    return permissionStrategyFn.bind(this)();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrintInvoiceService.html":{"url":"injectables/PrintInvoiceService.html","title":"injectable - PrintInvoiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrintInvoiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/order/src/lib/services/print-invoice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCompanyInformation\n                            \n                            \n                                addCustomerInformation\n                            \n                            \n                                addFooter\n                            \n                            \n                                addInvoiceDetails\n                            \n                            \n                                addLine\n                            \n                            \n                                addLogo\n                            \n                            \n                                addPage\n                            \n                            \n                                addTableFooter\n                            \n                            \n                                addTableHeader\n                            \n                            \n                                addTableItems\n                            \n                            \n                                generatePdf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCompanyInformation\n                        \n                    \n                \n            \n            \n                \naddCompanyInformation(doc: jsPDF, options: DrawOptions, companyData: CompanyData)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                companyData\n                                            \n                                                            CompanyData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addCustomerInformation\n                        \n                    \n                \n            \n            \n                \naddCustomerInformation(doc: jsPDF, options: DrawOptions, user: UserResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addFooter\n                        \n                    \n                \n            \n            \n                \naddFooter(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymentTerms\n                                            \n                                                            PaymentTerms\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addInvoiceDetails\n                        \n                    \n                \n            \n            \n                \naddInvoiceDetails(doc: jsPDF, options: DrawOptions, order: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLine\n                        \n                    \n                \n            \n            \n                \naddLine(doc: jsPDF, options: DrawOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addLogo\n                        \n                    \n                \n            \n            \n                \naddLogo(doc: jsPDF, options: DrawOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addPage\n                        \n                    \n                \n            \n            \n                \naddPage(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymentTerms\n                                            \n                                                            PaymentTerms\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTableFooter\n                        \n                    \n                \n            \n            \n                \naddTableFooter(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns, order: OrderResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                columns\n                                            \n                                                            PdfTableColumns\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTableHeader\n                        \n                    \n                \n            \n            \n                \naddTableHeader(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                columns\n                                            \n                                                            PdfTableColumns\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTableItems\n                        \n                    \n                \n            \n            \n                \naddTableItems(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns, order: OrderResponse, paymentTerms: PaymentTerms)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                doc\n                                            \n                                                        jsPDF\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            DrawOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                columns\n                                            \n                                                            PdfTableColumns\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymentTerms\n                                            \n                                                            PaymentTerms\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePdf\n                        \n                    \n                \n            \n            \n                \ngeneratePdf(order: OrderResponse, user: UserResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/order/src/lib/services/print-invoice.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order\n                                            \n                                                            OrderResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { jsPDF } from 'jspdf';\nimport { OrderResponse, UserResponse } from '@demo-shop/api';\nimport { format } from 'date-fns/format';\nimport { CompanyData } from '../models/company-data';\nimport { PaymentTerms } from '../models/payment-terms';\nimport { DrawOptions } from '../models/draw-options';\nimport { PdfTableColumns } from '../models/pdf-table.columns';\nimport { columns, companyData, createDrawOptions, paymentTerms } from '../config/print-invoice.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PrintInvoiceService {\n  generatePdf(order: OrderResponse, user: UserResponse) {\n    const doc = new jsPDF('p', 'mm', 'A4', true);\n    const drawOptions = createDrawOptions(doc.internal.pageSize.getWidth(), doc.internal.pageSize.getHeight());\n\n    this.addFooter(doc, drawOptions, paymentTerms);\n    this.addLogo(doc, drawOptions);\n    this.addCompanyInformation(doc, drawOptions, companyData);\n    this.addInvoiceDetails(doc, drawOptions, order);\n    this.addCustomerInformation(doc, drawOptions, user);\n    this.addTableHeader(doc, drawOptions, columns);\n    this.addTableItems(doc, drawOptions, columns, order, paymentTerms);\n    this.addTableFooter(doc, drawOptions, columns, order);\n\n    doc.save(`invoice-${order.id}.pdf`);\n  }\n\n  addLogo(doc: jsPDF, options: DrawOptions): void {\n    options.pointer.x = options.border.left;\n    options.pointer.y = options.border.top;\n\n    const width = 25;\n    const height = 25;\n\n    doc.addImage('icons/demo-shop.png', 'PNG', options.pointer.x, options.pointer.y, width, height);\n  }\n\n  addCompanyInformation(doc: jsPDF, options: DrawOptions, companyData: CompanyData): void {\n    options.pointer.x = options.border.right;\n    options.pointer.y += 6;\n    doc.setFont(options.text.font.default, 'bold');\n    doc.setFontSize(options.text.size.small);\n    doc.setTextColor(options.text.color.light);\n    doc.text(companyData.name, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.setFont(options.text.font.default);\n    doc.setFontSize(options.text.size.smaller);\n    doc.text(companyData.address, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.text(companyData.city + ', ' + companyData.zipCode, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.text(companyData.phone, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    doc.text(companyData.email, options.pointer.x, options.pointer.y, { align: 'right' });\n  }\n\n  addInvoiceDetails(doc: jsPDF, options: DrawOptions, order: OrderResponse): void {\n    options.pointer.y += 22;\n    doc.setFontSize(options.text.size.smaller);\n    doc.setFont(options.text.font.default, 'bold');\n    doc.text(`INVOICE #${order.id}`, options.pointer.x, options.pointer.y, { align: 'right' });\n\n    options.pointer.y += 4;\n    const date = format(order.created, 'yyyy-MM-dd');\n    doc.setFont(options.text.font.default);\n    doc.text(date, options.pointer.x, options.pointer.y, { align: 'right' });\n  }\n\n  addCustomerInformation(doc: jsPDF, options: DrawOptions, user: UserResponse): void {\n    options.pointer.x = options.border.left;\n    options.pointer.y += 15;\n    doc.setFontSize(options.text.size.smaller);\n    doc.setFont('Helvetica', 'bold');\n    doc.text('YOUR DATA:', options.pointer.x, options.pointer.y);\n    doc.setFont('Helvetica');\n\n    options.pointer.y += 6;\n    doc.text(`${user.firstname} ${user.lastname}`, options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(`${user.address?.street} ${user.address?.apartment}`, options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(`${user.address?.city}, ${user.address?.zip}`, options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(user.address?.country ?? '', options.pointer.x, options.pointer.y);\n\n    options.pointer.y += 4;\n    doc.text(user.email, options.pointer.x, options.pointer.y);\n  }\n\n  addTableHeader(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns): void {\n    options.pointer.y += 20;\n    this.addLine(doc, options);\n\n    options.pointer.y += 4;\n    doc.setFontSize(options.text.size.smaller);\n    doc.setTextColor(options.text.color.darker);\n    doc.setFont('Helvetica', 'bold');\n\n    doc.text(columns.article.label, columns.article.x, options.pointer.y, { baseline: 'middle' });\n    doc.text(columns.qty.label, columns.qty.x, options.pointer.y, { baseline: 'middle', align: 'center' });\n    doc.text(columns.price.label, columns.price.x, options.pointer.y, { baseline: 'middle', align: 'right' });\n    doc.text(columns.amount.label, columns.amount.x, options.pointer.y, { baseline: 'middle', align: 'right' });\n\n    options.pointer.y += 4;\n    this.addLine(doc, options);\n  }\n\n  addTableItems(\n    doc: jsPDF,\n    options: DrawOptions,\n    columns: PdfTableColumns,\n    order: OrderResponse,\n    paymentTerms: PaymentTerms\n  ): void {\n    const limitForNewContent = options.border.bottom - 40;\n\n    options.pointer.y += 4;\n    doc.setFont('Helvetica', 'normal');\n\n    order.items.forEach(item => {\n      options.pointer.y += 6;\n\n      if (options.pointer.y > limitForNewContent) {\n        this.addPage(doc, options, paymentTerms);\n      }\n\n      doc.setTextColor(options.text.color.dark);\n      doc.setFontSize(options.text.size.smaller);\n      doc.text(item.productName, columns.article.x, options.pointer.y);\n      doc.text(item.quantity.toString(), columns.qty.x, options.pointer.y, { align: 'center' });\n      doc.text(`$${item.unitPrice.toFixed(2)}`, columns.price.x, options.pointer.y, { align: 'right' });\n      doc.text(`$${item.totalPrice.toFixed(2)}`, columns.amount.x, options.pointer.y, { align: 'right' });\n    });\n  }\n\n  addTableFooter(doc: jsPDF, options: DrawOptions, columns: PdfTableColumns, order: OrderResponse) {\n    options.pointer.y += 6;\n    this.addLine(doc, options);\n\n    options.pointer.y += 6;\n    doc.setFont('Helvetica', 'bold');\n    doc.setFontSize(options.text.size.smaller);\n    doc.text('Total', columns.price.x, options.pointer.y, { align: 'right' });\n    doc.text(`$${order.amount.toFixed(2)}`, columns.amount.x, options.pointer.y, { align: 'right' });\n  }\n\n  addPage(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms) {\n    doc.addPage();\n    options.pointer.y = options.border.top;\n    this.addFooter(doc, options, paymentTerms);\n  }\n\n  addFooter(doc: jsPDF, options: DrawOptions, paymentTerms: PaymentTerms) {\n    const xCenter = doc.internal.pageSize.getWidth() / 2;\n    let y = options.border.bottom;\n\n    this.addLine(doc, options);\n\n    y += 6;\n    doc.setFont('Helvetica', 'bold');\n    doc.setFontSize(options.text.size.tiny);\n    doc.setTextColor(options.text.color.lighter);\n    doc.setFont('Helvetica', 'normal');\n    doc.text(paymentTerms.terms, xCenter, y, { align: 'center' });\n\n    y += 3;\n    const bankingText = `BANK: ${paymentTerms.bankName} - ACCOUNT NAME: ${paymentTerms.accountName} - ACCOUNT NO.: ${paymentTerms.accountNumber} - ROUTING NUMBER: ${paymentTerms.routingNumber}`;\n    doc.text(bankingText, xCenter, y, { align: 'center' });\n  }\n\n  addLine(doc: jsPDF, options: DrawOptions): void {\n    doc.setDrawColor(options.line.color.light);\n    doc.line(options.border.left, options.pointer.y, options.border.right, options.pointer.y);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProblemDetails.html":{"url":"interfaces/ProblemDetails.html","title":"interface - ProblemDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProblemDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/problem-details.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any | any\n\n                    \n                \n                        \n                            \n                                Defined in libs/api/model/problem-details.ts:11\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProblemDetails {\n  [key: string]: any | any;\n\n  type?: string | null;\n  title?: string | null;\n  status?: number | null;\n  detail?: string | null;\n  instance?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductApi.html":{"url":"injectables/ProductApi.html","title":"injectable - ProductApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/api/product-api.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                basePath\n                            \n                            \n                                    Public\n                                configuration\n                            \n                            \n                                    Public\n                                defaultHeaders\n                            \n                            \n                                    Public\n                                encoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addToHttpParams\n                            \n                            \n                                    Private\n                                addToHttpParamsRecursive\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getAllProducts\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                            \n                                    Public\n                                getProductById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, basePath: string | string[], configuration: Configuration)\n                    \n                \n                        \n                            \n                                Defined in libs/api/api/product-api.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basePath\n                                                  \n                                                        \n                                                                    string | string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParams(httpParams: HttpParams, value: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addToHttpParamsRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                httpParams\n                                            \n                                                            HttpParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpParams\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:112\n                        \n                    \n\n\n            \n                \n                        Get all products\nGet all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:200\n                        \n                    \n\n\n            \n                \n                        Get all products\nGet all products\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n\n                                            \n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    flag to report request and response progress.\n\n                                            \n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:210\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe?, reportProgress?: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                observe\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: number, observe: any, reportProgress: boolean, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/api/api/product-api.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                observe\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'body'\n                                            \n\n                                        \n                                        \n                                                reportProgress\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost'\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Configuration()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpHeaders()\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        encoder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HttpParameterCodec\n\n                    \n                \n                    \n                        \n                                Defined in libs/api/api/product-api.ts:45\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n  HttpEvent,\n  HttpParameterCodec,\n  HttpContext,\n} from '@angular/common/http';\nimport { CustomHttpParameterCodec } from '../encoder';\nimport { Observable } from 'rxjs';\n\n// @ts-ignore\nimport { AddCartItem401Response } from '../model/add-cart-item401-response';\n// @ts-ignore\nimport { ProductListResponse } from '../model/product-list-response';\n// @ts-ignore\nimport { ProductResponse } from '../model/product-response';\n// @ts-ignore\nimport { ValidationProblemDetails } from '../model/validation-problem-details';\n\n// @ts-ignore\nimport { BASE_PATH, COLLECTION_FORMATS } from '../variables';\nimport { Configuration } from '../configuration';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductApi {\n  protected basePath = 'http://localhost';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n  public encoder: HttpParameterCodec;\n\n  constructor(\n    protected httpClient: HttpClient,\n    @Optional() @Inject(BASE_PATH) basePath: string | string[],\n    @Optional() configuration: Configuration\n  ) {\n    if (configuration) {\n      this.configuration = configuration;\n    }\n    if (typeof this.configuration.basePath !== 'string') {\n      const firstBasePath = Array.isArray(basePath) ? basePath[0] : undefined;\n      if (firstBasePath != undefined) {\n        basePath = firstBasePath;\n      }\n\n      if (typeof basePath !== 'string') {\n        basePath = this.basePath;\n      }\n      this.configuration.basePath = basePath;\n    }\n    this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n  }\n\n  // @ts-ignore\n  private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n    if (typeof value === 'object' && value instanceof Date === false) {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value);\n    } else {\n      httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n    }\n    return httpParams;\n  }\n\n  private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n    if (value == null) {\n      return httpParams;\n    }\n\n    if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        (value as any[]).forEach(elem => (httpParams = this.addToHttpParamsRecursive(httpParams, elem, key)));\n      } else if (value instanceof Date) {\n        if (key != null) {\n          httpParams = httpParams.append(key, (value as Date).toISOString().substring(0, 10));\n        } else {\n          throw Error('key may not be null if value is Date');\n        }\n      } else {\n        Object.keys(value).forEach(\n          k => (httpParams = this.addToHttpParamsRecursive(httpParams, value[k], key != null ? `${key}.${k}` : k))\n        );\n      }\n    } else if (key != null) {\n      httpParams = httpParams.append(key, value);\n    } else {\n      throw Error('key may not be null if value is not object or array');\n    }\n    return httpParams;\n  }\n\n  /**\n   * Get all products\n   * Get all products\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getAllProducts(\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getAllProducts(\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllProducts(\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getAllProducts(\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/products`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n\n  /**\n   * Get all products\n   * Get all products\n   * @param id\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public getProductById(\n    id: number,\n    observe?: 'body',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable;\n  public getProductById(\n    id: number,\n    observe?: 'response',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getProductById(\n    id: number,\n    observe?: 'events',\n    reportProgress?: boolean,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable>;\n  public getProductById(\n    id: number,\n    observe: any = 'body',\n    reportProgress: boolean = false,\n    options?: {\n      httpHeaderAccept?: 'text/plain' | 'application/json' | 'text/json';\n      context?: HttpContext;\n      transferCache?: boolean;\n    }\n  ): Observable {\n    if (id === null || id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling getProductById.');\n    }\n\n    let localVarHeaders = this.defaultHeaders;\n\n    let localVarHttpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n    if (localVarHttpHeaderAcceptSelected === undefined) {\n      // to determine the Accept header\n      const httpHeaderAccepts: string[] = ['text/plain', 'application/json', 'text/json'];\n      localVarHttpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    }\n    if (localVarHttpHeaderAcceptSelected !== undefined) {\n      localVarHeaders = localVarHeaders.set('Accept', localVarHttpHeaderAcceptSelected);\n    }\n\n    let localVarHttpContext: HttpContext | undefined = options && options.context;\n    if (localVarHttpContext === undefined) {\n      localVarHttpContext = new HttpContext();\n    }\n\n    let localVarTransferCache: boolean | undefined = options && options.transferCache;\n    if (localVarTransferCache === undefined) {\n      localVarTransferCache = true;\n    }\n\n    let responseType_: 'text' | 'json' | 'blob' = 'json';\n    if (localVarHttpHeaderAcceptSelected) {\n      if (localVarHttpHeaderAcceptSelected.startsWith('text')) {\n        responseType_ = 'text';\n      } else if (this.configuration.isJsonMime(localVarHttpHeaderAcceptSelected)) {\n        responseType_ = 'json';\n      } else {\n        responseType_ = 'blob';\n      }\n    }\n\n    let localVarPath = `/api/v1/products/${this.configuration.encodeParam({\n      name: 'id',\n      value: id,\n      in: 'path',\n      style: 'simple',\n      explode: false,\n      dataType: 'number',\n      dataFormat: 'int32',\n    })}`;\n    return this.httpClient.request('get', `${this.configuration.basePath}${localVarPath}`, {\n      context: localVarHttpContext,\n      responseType: responseType_,\n      withCredentials: this.configuration.withCredentials,\n      headers: localVarHeaders,\n      observe: observe,\n      transferCache: localVarTransferCache,\n      reportProgress: reportProgress,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductDataService.html":{"url":"injectables/ProductDataService.html","title":"injectable - ProductDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/product/src/lib/services/product-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #productApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                loadById\n                            \n                            \n                                update\n                            \n                            \n                                updateAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(entity: ProductResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(entity: ProductResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load(filter: ProductFilter)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            ProductFilter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadById\n                        \n                    \n                \n            \n            \n                \nloadById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(entity: ProductResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAll\n                        \n                    \n                \n            \n            \n                \nupdateAll(entity: ProductResponse[])\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/services/product-data.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                            ProductResponse[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductApi)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/services/product-data.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { DataService } from '@angular-architects/ngrx-toolkit';\nimport { ProductFilter } from '../models/product-filter';\nimport { firstValueFrom } from 'rxjs';\nimport { ProductApi, ProductResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductDataService implements DataService {\n  readonly #productApi = inject(ProductApi);\n\n  async load(filter: ProductFilter): Promise {\n    const res = await firstValueFrom(this.#productApi.getAllProducts());\n    return res.items ?? [];\n  }\n\n  loadById(id: number): Promise {\n    return firstValueFrom(this.#productApi.getProductById(id));\n  }\n\n  create(entity: ProductResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  delete(entity: ProductResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  update(entity: ProductResponse): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n\n  updateAll(entity: ProductResponse[]): Promise {\n    return Promise.reject(new Error('Not implemented'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailComponent.html":{"url":"components/ProductDetailComponent.html","title":"component - ProductDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/product/src/lib/components/product-detail/product-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-product-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #activatedRoute\n                            \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                addButtonEnabled\n                            \n                            \n                                    Readonly\n                                product\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        addButtonEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#cartFacade.getHasShoppingSession()\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#productFacade.getById(this.#activatedRoute.snapshot.params['id'])\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-detail/product-detail.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductFacade } from '../../product.facade';\nimport { ActivatedRoute } from '@angular/router';\nimport { CartFacade } from '@demo-shop/cart';\n\n@Component({\n  selector: 'lib-product-detail',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage],\n  templateUrl: './product-detail.component.html',\n  styleUrl: './product-detail.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'bg-white',\n  },\n})\nexport class ProductDetailComponent implements OnInit {\n  readonly #activatedRoute = inject(ActivatedRoute);\n  readonly #productFacade = inject(ProductFacade);\n  readonly product = this.#productFacade.getById(this.#activatedRoute.snapshot.params['id']);\n  readonly #cartFacade = inject(CartFacade);\n  readonly addButtonEnabled = this.#cartFacade.getHasShoppingSession();\n\n  ngOnInit() {\n    this.#productFacade.fetchById(this.#activatedRoute.snapshot.params['id']);\n  }\n\n  addToCart(id: number): void {\n    this.#cartFacade.addItem(id);\n  }\n}\n\n    \n\n    \n        @if (product()) {\n\n  \n  \n    \n      \n    \n  \n\n  \n  \n    \n      {{ product().name }}\n    \n\n    \n    \n      Product information\n      \n        {{ product().price | currency }}\n      \n\n      \n        Add to cart\n      \n    \n\n    \n      {{ product().description }}\n    \n  \n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (product()) {                                  {{ product().name }}                  Product information              {{ product().price | currency }}                    Add to cart                    {{ product().description }}      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductFacade.html":{"url":"injectables/ProductFacade.html","title":"injectable - ProductFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/product/src/lib/product.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchAll\n                            \n                            \n                                fetchById\n                            \n                            \n                                getById\n                            \n                            \n                                getFilter\n                            \n                            \n                                getFiltered\n                            \n                            \n                                setFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAll\n                        \n                    \n                \n            \n            \n                \nfetchAll()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchById\n                        \n                    \n                \n            \n            \n                \nfetchById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Signal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilter\n                        \n                    \n                \n            \n            \n                \ngetFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFiltered\n                        \n                    \n                \n            \n            \n                \ngetFiltered()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(filter: ProductFilter)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/product.facade.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            ProductFilter\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #store\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductStore)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/product.facade.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { ProductStore } from './+state/product.store';\nimport { ProductFilter } from './models/product-filter';\nimport { ProductResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductFacade {\n  readonly #store = inject(ProductStore);\n\n  fetchAll(): void {\n    this.#store.load();\n  }\n\n  fetchById(id: number): void {\n    this.#store.fetchById(id);\n  }\n\n  getFiltered(): Signal {\n    return this.#store.filteredEntities;\n  }\n\n  getFilter(): Signal {\n    return this.#store.filter;\n  }\n\n  getById(id: number): Signal {\n    return this.#store.getById(id);\n  }\n\n  setFilter(filter: ProductFilter): void {\n    this.#store.updateFilter(filter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductListComponent.html":{"url":"components/ProductListComponent.html","title":"component - ProductListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/product/src/lib/components/product-list/product-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-product-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                products\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-list/product-list.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-list/product-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#productFacade.getFiltered()\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-list/product-list.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject, OnInit } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductFacade } from '../../product.facade';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'lib-product-list',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, RouterLink],\n  templateUrl: './product-list.component.html',\n  styleUrl: './product-list.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'bg-white',\n  },\n})\nexport class ProductListComponent implements OnInit {\n  readonly #productFacade = inject(ProductFacade);\n\n  readonly products = this.#productFacade.getFiltered();\n\n  ngOnInit() {\n    this.#productFacade.fetchAll();\n  }\n}\n\n    \n\n    \n        \n  Products\n\n  \n    @for (product of products(); track product.id) {\n    \n      \n        \n      \n      {{ product.name }}\n      {{ product.price | currency }}\n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Products      @for (product of products(); track product.id) {                              {{ product.name }}      {{ product.price | currency }}        }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductListResponse.html":{"url":"interfaces/ProductListResponse.html","title":"interface - ProductListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/product-list-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ProductResponse } from './product-response';\n\nexport interface ProductListResponse {\n  items: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductResponse.html":{"url":"interfaces/ProductResponse.html","title":"interface - ProductResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/product-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categories\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categories:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         ImageResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ImageResponse } from './image-response';\n\nexport interface ProductResponse {\n  id: number;\n  name: string;\n  description: string;\n  price: number;\n  categories: Array;\n  images: Array;\n  thumbnail: ImageResponse;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductSearchComponent.html":{"url":"components/ProductSearchComponent.html","title":"component - ProductSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/product/src/lib/components/product-search/product-search.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                lib-product-search\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgOptimizedImage\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./product-search.component.html\n            \n\n\n\n            \n                styleUrl\n                ./product-search.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #productFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #router\n                            \n                            \n                                    Readonly\n                                productFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToProductPage\n                            \n                            \n                                setProductNameFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToProductPage\n                        \n                    \n                \n            \n            \n                \ngoToProductPage()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-search/product-search.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setProductNameFilter\n                        \n                    \n                \n            \n            \n                \nsetProductNameFilter(name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/product/src/lib/components/product-search/product-search.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #productFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-search/product-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-search/product-search.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        productFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#productFacade.getFilter()\n                    \n                \n                    \n                        \n                                Defined in libs/product/src/lib/components/product-search/product-search.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { CommonModule, NgOptimizedImage } from '@angular/common';\nimport { ProductFacade } from '../../product.facade';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'lib-product-search',\n  standalone: true,\n  imports: [CommonModule, NgOptimizedImage, FormsModule],\n  templateUrl: './product-search.component.html',\n  styleUrl: './product-search.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'flex align-middle lg:ml-6 cursor-pointer relative',\n  },\n})\nexport class ProductSearchComponent {\n  readonly #productFacade = inject(ProductFacade);\n  readonly productFilter = this.#productFacade.getFilter();\n  readonly #router = inject(Router);\n\n  setProductNameFilter(name?: string): void {\n    this.#productFacade.setFilter({\n      name,\n    });\n  }\n\n  goToProductPage(): void {\n    this.#router.navigateByUrl('/products');\n  }\n}\n\n    \n\n    \n        \n  Search\n  \n\n\n  \n  @if (productFilter().name) {\n  \n    \n  \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Search      @if (productFilter().name) {          }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoveCartItemRequest.html":{"url":"interfaces/RemoveCartItemRequest.html","title":"interface - RemoveCartItemRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RemoveCartItemRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/remove-cart-item-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RemoveCartItemRequest {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            discriminator\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        discriminator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discriminator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Request {\n  discriminator: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteItem.html":{"url":"classes/RouteItem.html","title":"class - RouteItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/navigation/src/lib/models/navigation-item.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            NavigationItem\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                options\n                            \n                            \n                                    \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                order\n                            \n                            \n                                    Public\n                                    Optional\n                                subItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: string, order: number, options: literal type, subItems?: RouteItem[])\n                    \n                \n                        \n                            \n                                Defined in libs/navigation/src/lib/models/navigation-item.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subItems\n                                                  \n                                                        \n                                                                        RouteItem[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavigationType\n\n                    \n                \n                \n                    \n                        Default value : NavigationType.ROUTE\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        subItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RouteItem[]\n\n                    \n                \n                        \n                            \n                                Inherited from         NavigationItem\n\n                            \n                        \n                    \n                        \n                                Defined in         NavigationItem:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PermissionStrategy } from '@demo-shop/auth';\nimport { NavigationType } from '../enums/navigation-type';\n\nexport abstract class NavigationItem {\n  readonly type!: NavigationType;\n\n  protected constructor(\n    public label: string,\n    public order: number,\n    public options?: {\n      permissionStrategy?: PermissionStrategy;\n    },\n    public subItems?: RouteItem[]\n  ) {}\n}\n\nexport class RouteItem extends NavigationItem {\n  override readonly type: NavigationType = NavigationType.ROUTE;\n\n  constructor(\n    label: string,\n    order: number,\n    public override options: {\n      route: string;\n      permissionStrategy?: PermissionStrategy;\n      query?: string;\n    },\n    subItems?: RouteItem[]\n  ) {\n    super(label, order, options, subItems);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingSessionResponse.html":{"url":"interfaces/ShoppingSessionResponse.html","title":"interface - ShoppingSessionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingSessionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/shopping-session-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CartItemResponse } from './cart-item-response';\n\nexport interface ShoppingSessionResponse {\n  id: number;\n  userId: number;\n  items: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateCartItemQuantityRequest.html":{"url":"interfaces/UpdateCartItemQuantityRequest.html","title":"interface - UpdateCartItemQuantityRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateCartItemQuantityRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-cart-item-quantity-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateCartItemQuantityRequest {\n  quantity?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateCartItemQuantityRequestWrapper.html":{"url":"interfaces/UpdateCartItemQuantityRequestWrapper.html","title":"interface - UpdateCartItemQuantityRequestWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateCartItemQuantityRequestWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-cart-item-quantity-request-wrapper.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            updateCartItemQuantityRequest\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateCartItemQuantityRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateCartItemQuantityRequest:         UpdateCartItemQuantityRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UpdateCartItemQuantityRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UpdateCartItemQuantityRequest } from './update-cart-item-quantity-request';\n\nexport interface UpdateCartItemQuantityRequestWrapper {\n  id: number;\n  updateCartItemQuantityRequest: UpdateCartItemQuantityRequest;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateCartItemQuantityResponse.html":{"url":"interfaces/UpdateCartItemQuantityResponse.html","title":"interface - UpdateCartItemQuantityResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateCartItemQuantityResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-cart-item-quantity-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateCartItemQuantityResponse {\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateUserAddressRequest.html":{"url":"interfaces/UpdateUserAddressRequest.html","title":"interface - UpdateUserAddressRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateUserAddressRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-user-address-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apartment\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            zip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apartment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apartment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateUserAddressRequest {\n  street: string;\n  apartment: string;\n  city: string;\n  zip: string;\n  country: string;\n  region?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateUserPhoneRequest.html":{"url":"interfaces/UpdateUserPhoneRequest.html","title":"interface - UpdateUserPhoneRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateUserPhoneRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/update-user-phone-request.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateUserPhoneRequest {\n  phone?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/user/src/lib/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #userStore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchCurrentUser\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                updateUserAddress\n                            \n                            \n                                    Async\n                                updateUserPhone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Signal\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserAddress(address: UpdateUserAddressRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            UpdateUserAddressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserPhone\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserPhone(phone: UpdateUserPhoneRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/user/src/lib/user.facade.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phone\n                                            \n                                                            UpdateUserPhoneRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserStore)\n                    \n                \n                    \n                        \n                                Defined in libs/user/src/lib/user.facade.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable, Signal } from '@angular/core';\nimport { UserStore } from './+state/user.store';\nimport { UpdateUserAddressRequest, UpdateUserPhoneRequest, UserResponse } from '@demo-shop/api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFacade {\n  readonly #userStore = inject(UserStore);\n\n  async fetchCurrentUser(): Promise {\n    await this.#userStore.fetchCurrentUser();\n  }\n\n  getCurrentUser(): Signal {\n    return this.#userStore.user;\n  }\n\n  async updateUserAddress(address: UpdateUserAddressRequest): Promise {\n    await this.#userStore.updateUserAddress(address);\n  }\n\n  async updateUserPhone(phone: UpdateUserPhoneRequest): Promise {\n    await this.#userStore.updateUserPhone(phone);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserNavigationComponent.html":{"url":"components/UserNavigationComponent.html","title":"component - UserNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-user-navigation\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-navigation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-navigation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Private\n                                #authFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #cartFacade\n                            \n                            \n                                    Readonly\n                                    Private\n                                #userFacade\n                            \n                            \n                                    Readonly\n                                currentUser\n                            \n                            \n                                    Readonly\n                                isSmallScreen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #authFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #cartFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Private\n                        #userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.#userFacade.getCurrentUser()\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isSmallScreen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : input(false, { transform: booleanAttribute })\n                    \n                \n                    \n                        \n                                Defined in libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { booleanAttribute, ChangeDetectionStrategy, Component, inject, input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthFacade } from '@demo-shop/auth';\nimport { UserFacade } from '@demo-shop/user';\nimport { CartFacade } from '@demo-shop/cart';\n\n@Component({\n  selector: 'lib-user-navigation',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './user-navigation.component.html',\n  styleUrl: './user-navigation.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserNavigationComponent {\n  readonly isSmallScreen = input(false, { transform: booleanAttribute });\n\n  readonly #authFacade = inject(AuthFacade);\n  readonly #userFacade = inject(UserFacade);\n  readonly currentUser = this.#userFacade.getCurrentUser();\n  readonly #cartFacade = inject(CartFacade);\n\n  async login(): Promise {\n    await this.#authFacade.login();\n    await this.#cartFacade.loadShoppingSession();\n  }\n\n  async register(): Promise {\n    await this.#authFacade.register();\n    await this.#cartFacade.loadShoppingSession();\n  }\n\n  async logout(): Promise {\n    await this.#authFacade.logout();\n  }\n}\n\n    \n\n    \n        \n  @if (currentUser()) {\n  \n    \n      {{ currentUser()?.firstname }}&nbsp;{{ currentUser()?.lastname }}\n    \n  \n  \n    \n      Sign out\n    \n  \n  } @else {\n  \n    \n      Sign in\n    \n  \n  \n    \n      Register\n    \n  \n  }\n\n\n\n  @if (currentUser()) {\n  \n    {{ currentUser()?.firstname }}&nbsp;{{ currentUser()?.lastname }}\n  \n  \n   Sign out \n  } @else {\n   Sign in \n  \n   Register \n  }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (currentUser()) {            {{ currentUser()?.firstname }} {{ currentUser()?.lastname }}                  Sign out        } @else {            Sign in                  Register        }  @if (currentUser()) {      {{ currentUser()?.firstname }} {{ currentUser()?.lastname }}       Sign out   } @else {   Sign in      Register   }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CartComponent', 'selector': 'lib-cart'},{'name': 'CartIconComponent', 'selector': 'lib-cart-icon'},{'name': 'CartItemsComponent', 'selector': 'lib-cart-items'},{'name': 'CheckoutComponent', 'selector': 'lib-checkout'},{'name': 'DateTimeComponent', 'selector': 'lib-date-time'},{'name': 'FormErrorComponent', 'selector': 'lib-form-error'},{'name': 'NavigationComponent', 'selector': 'lib-navigation'},{'name': 'OrderDetailComponent', 'selector': 'lib-order-detail'},{'name': 'OrderListComponent', 'selector': 'lib-order-list'},{'name': 'OrderStatusComponent', 'selector': 'lib-order-status'},{'name': 'ProductDetailComponent', 'selector': 'lib-product-detail'},{'name': 'ProductListComponent', 'selector': 'lib-product-list'},{'name': 'ProductSearchComponent', 'selector': 'lib-product-search'},{'name': 'UserNavigationComponent', 'selector': 'lib-user-navigation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPhoneResponse.html":{"url":"interfaces/UserPhoneResponse.html","title":"interface - UserPhoneResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPhoneResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/user-phone-response.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPhoneResponse {\n  phone: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserResponse.html":{"url":"interfaces/UserResponse.html","title":"interface - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/user-response.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         AddressResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AddressResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AddressResponse } from './address-response';\n\nexport interface UserResponse {\n  id: number;\n  email: string;\n  firstname: string;\n  lastname: string;\n  phone?: string | null;\n  address?: AddressResponse;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationProblemDetails.html":{"url":"interfaces/ValidationProblemDetails.html","title":"interface - ValidationProblemDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationProblemDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/api/model/validation-problem-details.ts\n        \n\n\n            \n                Description\n            \n            \n                Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            detail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instance\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any | any\n\n                    \n                \n                        \n                            \n                                Defined in libs/api/model/validation-problem-details.ts:11\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        detail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        detail:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instance:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ValidationProblemDetails {\n  [key: string]: any | any;\n\n  type?: string | null;\n  title?: string | null;\n  status?: number | null;\n  detail?: string | null;\n  instance?: string | null;\n  errors?: { [key: string]: Array };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\n0.3.23 (2025-03-15)\n0.3.22 (2025-03-14)\nFeatures\n\nfrontend: add navigation to products from cart and checkout (#54) (22daee8)\n\n0.3.21 (2025-03-14)\n0.3.20 (2025-03-14)\nFeatures\n\norder: update styling of list and detail view (#52) (54417dc)\n\n0.3.19 (2025-03-13)\nFeatures\n\nbackend: add endpoints for updating user address and phone (#51) (f49f741)\n\n0.3.18 (2025-03-12)\n0.3.17 (2025-03-12)\nBug Fixes\n\nfix data fetching for deep links (#49) (634f627)\n\n0.3.16 (2025-03-12)\nBug Fixes\n\nfix broken image links by displaying a fallback image (#48) (5374a97)\n\n0.3.15 (2025-03-12)\n0.3.14 (2025-03-12)\n0.3.13 (2025-03-12)\n0.3.12 (2025-03-12)\n0.3.11 (2025-03-10)\n0.3.10 (2025-03-10)\n0.3.9 (2025-03-10)\n0.3.8 (2025-03-10)\n0.3.7 (2025-03-10)\n0.3.6 (2025-03-02)\n0.3.5 (2025-01-09)\n0.3.4 (2025-01-09)\n0.3.3 (2025-01-08)\n0.3.2 (2025-01-06)\n0.3.1 (2025-01-06)\nFeatures\n\nbackend: update errors to be more descriptive\n\nBug Fixes\n\ncart: fix checkout form autocomplete labels\nfix deployment issues\nfix issues raised by sonar\nfix keycloak deployment\n\n0.3.0 (2024-11-05)\n\nadd helmet, enable rate limiting and add ssl\nauth: add keycloak\n\n0.2.0 (2024-09-24)\n\nsimplify data model for a faster mvp\n\n0.1.0 (2024-08-22)\n\nbackend: update data model\nbackend: add dto factories\nrefactor frontend to use api instead of mock data\n\n0.0.1 (2024-08-20)\n\nbackend: Fix relationship between Skus and attributes\nbackend: add order dtos and hydrated entities\nbackend: add product dtos, hydrated entities and fix sku attribute relationship\nbackend: add user dto and openapi defintion\n\n0.0.0 (2024-08-20)\n\nnx: Added Nx Cloud token to your nx.json\nnx: Generated CI workflow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        apps/frontend/src/app/+state/app.store.ts\n            \n            variable\n            AppStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/+state/app.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/+state/app.store.ts\n            \n            type alias\n            AppState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/frontend/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/providers/provide-api.ts\n            \n            function\n            withConfiguration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/frontend/src/app/providers/provide-api.ts\n            \n            variable\n            provideApi\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/frontend/src/app/strategies/no-reuse-strategy.ts\n            \n            class\n            NoReuseStrategy\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        libs/api/api/api.ts\n            \n            variable\n            APIS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/api/api/order-api.ts\n            \n            injectable\n            OrderApi\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                libs/api/api/product-api.ts\n            \n            injectable\n            ProductApi\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                libs/api/api/shopping-session-api.ts\n            \n            injectable\n            ShoppingSessionApi\n            \n                17 %\n                (5/28)\n            \n        \n        \n            \n                \n                libs/api/api/user-api.ts\n            \n            injectable\n            UserApi\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                libs/api/configuration.ts\n            \n            class\n            Configuration\n            \n                50 %\n                (8/16)\n            \n        \n        \n            \n                \n                libs/api/configuration.ts\n            \n            interface\n            ConfigurationParameters\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                libs/api/encoder.ts\n            \n            class\n            CustomHttpParameterCodec\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                libs/api/model/add-cart-item-request.ts\n            \n            interface\n            AddCartItemRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                        libs/api/model/add-cart-item401-response.ts\n            \n            type alias\n            AddCartItem401Response\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/api/model/address-response.ts\n            \n            interface\n            AddressResponse\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/cart-item-response.ts\n            \n            interface\n            CartItemResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                libs/api/model/get-order-by-id-request.ts\n            \n            interface\n            GetOrderByIdRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/get-product-by-id-request.ts\n            \n            interface\n            GetProductByIdRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/http-validation-problem-details.ts\n            \n            interface\n            HttpValidationProblemDetails\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/image-response.ts\n            \n            interface\n            ImageResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                libs/api/model/order-item-response.ts\n            \n            interface\n            OrderItemResponse\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/order-list-response.ts\n            \n            interface\n            OrderListResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/api/model/order-response.ts\n            \n            interface\n            OrderResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/api/model/problem-details.ts\n            \n            interface\n            ProblemDetails\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                libs/api/model/product-list-response.ts\n            \n            interface\n            ProductListResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/api/model/product-response.ts\n            \n            interface\n            ProductResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/api/model/remove-cart-item-request.ts\n            \n            interface\n            RemoveCartItemRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/request.ts\n            \n            interface\n            Request\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/shopping-session-response.ts\n            \n            interface\n            ShoppingSessionResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/api/model/update-cart-item-quantity-request-wrapper.ts\n            \n            interface\n            UpdateCartItemQuantityRequestWrapper\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/api/model/update-cart-item-quantity-request.ts\n            \n            interface\n            UpdateCartItemQuantityRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/update-cart-item-quantity-response.ts\n            \n            interface\n            UpdateCartItemQuantityResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/update-user-address-request.ts\n            \n            interface\n            UpdateUserAddressRequest\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/model/update-user-phone-request.ts\n            \n            interface\n            UpdateUserPhoneRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/user-phone-response.ts\n            \n            interface\n            UserPhoneResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/api/model/user-response.ts\n            \n            interface\n            UserResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/api/model/validation-problem-details.ts\n            \n            interface\n            ValidationProblemDetails\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                libs/api/param.ts\n            \n            interface\n            Param\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            DataFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            DataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            ParamLocation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            ParamStyle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            StandardDataFormat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            StandardDataType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/param.ts\n            \n            type alias\n            StandardParamStyle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        libs/api/variables.ts\n            \n            variable\n            BASE_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/api/variables.ts\n            \n            variable\n            COLLECTION_FORMATS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/auth.facade.ts\n            \n            injectable\n            AuthFacade\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/guards/permission.guard.ts\n            \n            variable\n            permissionGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/models/auth-config.ts\n            \n            interface\n            AuthConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/models/auth-config.ts\n            \n            variable\n            AUTH_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/auth/src/lib/providers/provide-auth.ts\n            \n            variable\n            provideAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/services/keycloak.service.ts\n            \n            injectable\n            KeycloakService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/auth/src/lib/services/permission.service.ts\n            \n            injectable\n            PermissionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/+state/cart.store.ts\n            \n            interface\n            AdditionalState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/+state/cart.store.ts\n            \n            variable\n            CartStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/+state/cart.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/cart.facade.ts\n            \n            injectable\n            CartFacade\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/cart-icon/cart-icon.component.ts\n            \n            component\n            CartIconComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/components/cart/cart.animations.ts\n            \n            variable\n            animateBackdrop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/components/cart/cart.animations.ts\n            \n            variable\n            animateSlideOver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/checkout/checkout.component.ts\n            \n            component\n            CheckoutComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/components/shared/cart-items/cart-items.component.ts\n            \n            component\n            CartItemsComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        libs/cart/src/lib/models/cart-filter.ts\n            \n            type alias\n            CartFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/models/checkout-form.ts\n            \n            interface\n            CheckoutAddressForm\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/cart/src/lib/models/checkout-form.ts\n            \n            interface\n            CheckoutForm\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                libs/monitoring/src/lib/models/monitored-user.ts\n            \n            interface\n            MonitoredUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/monitoring/src/lib/models/monitoring-config.ts\n            \n            interface\n            MonitoringConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/monitoring/src/lib/models/monitoring-config.ts\n            \n            variable\n            MONITORING_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/monitoring/src/lib/monitoring.facade.ts\n            \n            injectable\n            MonitoringFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/monitoring/src/lib/providers/provide-monitoring.ts\n            \n            variable\n            provideMonitoring\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/components/navigation/navigation.animations.ts\n            \n            variable\n            animateBackdrop\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/components/navigation/navigation.animations.ts\n            \n            variable\n            animateSlideOver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/components/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/components/navigation/user-navigation/user-navigation.component.ts\n            \n            component\n            UserNavigationComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/models/navigation-item.ts\n            \n            class\n            NavigationItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/models/navigation-item.ts\n            \n            class\n            RouteItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/services/navigation.service.ts\n            \n            injectable\n            NavigationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/navigation/src/lib/util/provide-navigation.ts\n            \n            interface\n            NavigationConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/util/provide-navigation.ts\n            \n            variable\n            NAVIGATION_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/navigation/src/lib/util/provide-navigation.ts\n            \n            variable\n            provideNavigation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/+state/order.store.ts\n            \n            variable\n            OrderStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/order/src/lib/components/order-detail/order-detail.component.ts\n            \n            component\n            OrderDetailComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                libs/order/src/lib/components/order-list/order-list.component.ts\n            \n            component\n            OrderListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/order/src/lib/components/shared/order-status/order-status.component.ts\n            \n            component\n            OrderStatusComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            columns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            companyData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            createDrawOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/config/print-invoice.config.ts\n            \n            variable\n            paymentTerms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/company-data.ts\n            \n            type alias\n            CompanyData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/draw-options.ts\n            \n            type alias\n            DrawOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/order-filter.ts\n            \n            type alias\n            OrderFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/payment-terms.ts\n            \n            type alias\n            PaymentTerms\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/pdf-table.columns.ts\n            \n            type alias\n            PdfColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/models/pdf-table.columns.ts\n            \n            type alias\n            PdfTableColumns\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/order/src/lib/order.facade.ts\n            \n            injectable\n            OrderFacade\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        libs/order/src/lib/order.routes.ts\n            \n            variable\n            orderRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/order/src/lib/services/order-data.service.ts\n            \n            injectable\n            OrderDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/order/src/lib/services/print-invoice.service.ts\n            \n            injectable\n            PrintInvoiceService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        libs/product/src/lib/+state/product.store.ts\n            \n            variable\n            ProductStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/product/src/lib/components/product-detail/product-detail.component.ts\n            \n            component\n            ProductDetailComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/product/src/lib/components/product-list/product-list.component.ts\n            \n            component\n            ProductListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/product/src/lib/components/product-search/product-search.component.ts\n            \n            component\n            ProductSearchComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        libs/product/src/lib/models/product-filter.ts\n            \n            type alias\n            AllowedProductFilterTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/product/src/lib/models/product-filter.ts\n            \n            type alias\n            ProductFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/product/src/lib/product.facade.ts\n            \n            injectable\n            ProductFacade\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/product/src/lib/services/product-data.service.ts\n            \n            injectable\n            ProductDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/shared/src/lib/components/date-time/date-time.component.ts\n            \n            component\n            DateTimeComponent\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                libs/shared/src/lib/components/form-error/form-error.component.ts\n            \n            component\n            FormErrorComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                        libs/user/src/lib/+state/user.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/user/src/lib/+state/user.store.ts\n            \n            variable\n            UserStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        libs/user/src/lib/+state/user.store.ts\n            \n            type alias\n            UserState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/user/src/lib/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 18.2.9\n        \n            @angular/build : 18.2.9\n        \n            @angular/common : 18.2.9\n        \n            @angular/compiler : 18.2.9\n        \n            @angular/core : 18.2.9\n        \n            @angular/forms : 18.2.9\n        \n            @angular/platform-browser : 18.2.9\n        \n            @angular/platform-browser-dynamic : 18.2.9\n        \n            @angular/router : 18.2.9\n        \n            @date-fns/utc : ^2.1.0\n        \n            @nestjs/common : ^10.0.2\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.2\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.2\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @ngrx/signals : 18.1.1\n        \n            @prisma/client : ^5.18.0\n        \n            @sentry/angular : ^8.41.0\n        \n            @sentry/cli : ^2.39.1\n        \n            @sentry/nestjs : ^8.38.0\n        \n            @sentry/profiling-node : ^8.38.0\n        \n            axios : ^1.6.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            date-fns : ^4.1.0\n        \n            helmet : ^8.0.0\n        \n            html2canvas : ^1.4.1\n        \n            jspdf : ^2.5.2\n        \n            keycloak-connect : ^26.0.0\n        \n            keycloak-js : 22.0.5\n        \n            nest-keycloak-connect : ^1.10.1\n        \n            prisma : ^5.18.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : 0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NavigationType   (libs/.../navigation-type.ts)\n                        \n                        \n                            OrderStatus   (libs/.../order-status.ts)\n                        \n                        \n                            PermissionStrategy   (libs/.../permission-strategy.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/navigation/src/lib/enums/navigation-type.ts\n    \n        \n            \n                \n                    \n                        \n                        NavigationType\n                    \n                \n                        \n                            \n                                 ROUTE\n                            \n                        \n                        \n                            \n                                Value : ROUTE\n                            \n                        \n            \n        \n\n    libs/api/model/order-status.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                    \n                        \n                            Demo Shop API\nNOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\nhttps://openapi-generator.tech\nDo not edit the class manually.\n\n                        \n                    \n                        \n                            \n                                 Created\n                            \n                        \n                        \n                            \n                                Value : Created\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : Completed\n                            \n                        \n            \n        \n\n    libs/auth/src/lib/enums/permission-strategy.ts\n    \n        \n            \n                \n                    \n                        \n                        PermissionStrategy\n                    \n                \n                        \n                            \n                                 AUTHENTICATED\n                            \n                        \n                        \n                            \n                                Value : AUTHENTICATED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            withConfiguration   (apps/.../provide-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/frontend/src/app/providers/provide-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        withConfiguration\n                        \n                    \n                \n            \n            \n                \nwithConfiguration(configurationParameters: ConfigurationParameters)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                configurationParameters\n                                            \n                                                            ConfigurationParameters\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Configuration\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDemo shop public\nA full-stack e-commerce application built for educational purposes using modern web technologies.\nA more refined implementation of the API with ASP.NET Core can be found in this repository:\n\ngithub.com/christian-wandling/demo-shop-dotnet-api\n\nOverview\nBackend\n\nAPI Documentation - Complete API reference and backend architecture\n\nFrontend\n\nFrontend Documentation - Component structure and frontend architecture\nStorybook - Interactive UI component library and visual testing\n\nLibraries\n\nAuthentication - User authentication and authorization flows\nUser - User management\nProducts - Product catalog, categories, and search functionality\nShopping - Shopping cart implementation and session management\nOrder - Order processing, history, and management\nMonitoring - Application performance monitoring and logging\nNavigation - Site navigation components and routing\nShared - Common utilities and shared components\nOpenApiGenerator - API client generation tools and configurations\n\nTech Stack\nFrontend\n\nAngular - Progressive web framework\nTypeScript - Type-safe JavaScript\nNgRx - State Management\nHTML2Canvas/jsPDF - Pdf generation\nTailwind CSS - Styling\n\nBackend\n\nNestJS - Progressive Node.js framework\nNestJS Throttler - Rate limiting\nOpenAPI/Swagger - API documentation\nPrisma - Modern ORM for database access\nPostgreSQL - Relational database\n\nMonitoring\n\nSentry - Monitoring\n\nAuth\n\nKeycloak - Secure Authentication\n\nTesting\n\nJest - Unit testing\n\nDev workflow\n\nCommitlint/Commitizen - Standardize commit messages\nHusky - Pre-commit hooks\nESLint/Lint-staged - automatic linting\nPrettier - automatic code formating\n\nDevOps & Infrastructure\n\nNx - Mono-repo build system\nDocker - Containerization\nTerraform - Infrastructure as Code\nGithub CI/CD - Continuous Integration/Continuous Deployment\nAWS - Cloud hosting platform\n\nSetup\nPrerequisites\n\nNode.js 20 or later\nnpm or yarn\nDocker\n\nInstallation\n\nClone the repository\n\nExample :git clone https://github.com/christian-wandling/demo-shop-public.git\nInstall dependencies\n\nExample :npm install\nSet up environment variables\n\nExample :# Edit .env file with your configuration\ncp .env.example .env\nYou can choose to omit configuring sentry or see the section on setting up sentry\nKEYCLOAK_REALM_PUBLIC_KEY is needed by the api to validate tokens. It is dynamically created on keycloak server creation.\nTo retrieve it, follow the installation steps to build & run the docker containers\nNext access the keycloak server.\n\nExample :http://localhost:8080/admin/master/console/#/demo_shop/realm-settings/keys\nClick on the Public Key of RS256 and use its value in your .env file\n\n\n\n\nCreate shared docker network (or remove network from compose file)\n\nExample :docker network create shared\nGenerate prisma client\n\nExample :npm run prisma:generate\nPush the prisma schema to database\n\nExample :npm run prisma:migrate:dev\nBuild & Run the docker containers\n\nExample :# this will build and run docker containers for frontend, api, postgres, keycloak, pgadmin\nnpm start\nAccess the application\n\nExample :Frontend: http://localhost:4200\nAPI: http://localhost:3000\nSwagger Documentation: http://localhost:3000/api\nKeycloak: http://localhost:8080\nPgAdmin: http://localhost:80Usage\n\nOpen the web app\n\nExample :http://localhost:4200Sentry Setup\n\nGo to sentry.io to create an account and follow the steps to setup projects for frontend and api\n\nAdd configuration values to your .env file\n\nRun the sentry wizard to complete the setup\n\n\nExample :npx @sentry/wizard@latest -i sourcemaps --saasDotnet APi Integration\nAn equivalent API created with ASP.Net Core is available in the following repository:\n\ngithub.com/christian-wandling/demo-shop-dotnet-api\n\nTo use the API with this frontend, ensure both applications are running and connected via the shared Docker network.\nUser management\nUser registration via web app\n\nOpen the web app\n\nExample :http://localhost:4200\nClick Register and create the user\n\nUser creation via Keycloak admin console\n\nAccess the Keycloak server to add a user\n\nExample :http://localhost:8080/admin/master/console/#/demo_shop/users/add-user\nTo login use KEYCLOAK_ADMIN and KEYCLOAK_ADMIN_PASSWORD defined in your .env file.\n\nFill Email, First Name and Last name\n\nNavigate to the Credentials tab and use Set Password to create as password\n\nFill Password and Password Confirmation and deselect Temporary\n\n\nDatabase\nSeeding\nExample :npm run prisma:seedThe seed script will attempt to add entities to the database:\n\nproducts, if the product table is empty\nusers, if any user in the keycloak has not been added to the user table\norders, for any user that has no orders attached\n\n\nBrowse products\n\nSign in to access the shopping and order features\n\n\nAccess with Prisma Studio\nOpen prisma studio via console\nExample :prisma studioAccess with PgAdmin\n\nOpen PgAdmin in your browser\n\nExample :http://localhost:80\nEnter the password you set for PGADMIN_DEFAULT_PASSWORD in your .env file\n\nRegister new server. You can give it any name.\n\nIn the connection tab of the server use db for host and for username and password use the values of POSTGRES_USER and POSTGRES_PASSWORD in your .env file\n\n\nTesting\nTo run all tests in the project use\nExample :npm run testTo test an app or lib use\nExample :nx test Deployment\nThis repository includes a comprehensive CI/CD pipeline for deploying a fullstack application to AWS with Cloudflare for DNS management and CDN services.\nContinuous Integration\n\nPR Workflow: When a PR is created to main, a test build is created with unit tests, linting, SonarQube, and GitHub code checks\nMain Branch CI: On merge to main, test builds and checks run again\nVersioning: Successful main branch builds trigger the version workflow, which:\nUpdates the version number using semantic versioning determined from commit messages\nGenerates a changelog from commit messages\nCreates a new tag\n\n\n\nContinuous Deployment\n\nTrigger: New tag creation automatically triggers the CD workflow\n\nBuild Phase: Docker images are built for both frontend and API components\n\nInfrastructure Deployment:\n\nNetwork infrastructure is provisioned using Terraform\nEC2 instance with custom GitHub runner is deployed\n\n\nService Deployment via custom GitHub runner:\n\nRDS database\nEC2 instance for API\nEC2 instance for frontend\nEC2 instance for Keycloak\nS3 bucket for assets\n\n\nMonitoring: Sourcemaps are uploaded to Sentry for error tracking\n\nExternal Services\n\nCloudflare: Manages DNS, SSL/TLS, and CDN services\n\n\n\nPrerequisites\n\nGithub Setup\n\nGitHub repository access with proper permissions\nGitHub Actions secrets configured for AWS, Cloudflare, and Sentry credentials\nBranch protection rules for main branch\n\n\nAWS Requirements:\n\nAWS account with programmatic access\nIAM user with appropriate permissions for EC2, S3, RDS, VPC, etc.\nAWS credentials stored securely in GitHub Secrets\nPostgres and Keycloak credentials stored securely in AWS\n\n\nCloudflare Requirements:\n\nCloudflare account\nDomain added to Cloudflare\nAPI token with appropriate permissions\nCloudflare API token stored in GitHub Secrets\n\n\nSentry Requirements:\n\nSentry account and project\nAuth token for sourcemap uploads\nSentry credentials stored in GitHub Secrets\n\n\nSonarQube Requirements:\n\nSonarQube server or SonarCloud account\nProject setup in SonarQube/SonarCloud\nSonarQube credentials stored in GitHub Secrets\nsonar-project.properties file in repository root\n\n\n\nDiagram\nExample :flowchart TB\n    subgraph \"PR\"\n        A[PR Created] --> B[Test build, Unit Tests, Linting, Quality Gate]\n        B --> |On Success| C[Merge to Main]\n    end\n\n    subgraph \"CI\"\n        C[Merge to Main] --> D[Test Build, Unit Tests, Linting]\n        D --> |On Success| E[Trigger version]\n\n    end\n\n    subgraph \"Version Tag\"\n        E[CI Success] --> F[Update Version & Changelog]\n        F --> G[Create Tag]\n    end\n\n    subgraph \"CD\"\n        G[Tag vX.X.X] --> H[Build Docker Images]\n        H --> I[Deploy AWS Infrastructure]\n        I --> I1[Network]\n        I --> I2[EC2 with Custom Github Runner]\n        I --> J[Deploy Services]\n        J --> J1[RDS Database]\n        J --> J2[EC2 for API]\n        J --> J3[EC2 for Frontend]\n        J --> J4[EC2 for Keycloak]\n        J --> J5[S3 Bucket]\n        I --> K[Configure Cloudflare]\n        K --> K1[Cloudflare DNS]\n        K --> K2[Cloudflare SSL/TLS]\n        K --> K3[Cloudflare CDN]\n        K --> K4[Cloudflare Security Headers]\n        I --> M[Upload sourcemaps to Sentry]\n    end📜 License\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2025 Christian Wandling\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    33 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.3.23\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddCartItem401Response   (libs/.../add-cart-item401-response.ts)\n                        \n                        \n                            AllowedProductFilterTypes   (libs/.../product-filter.ts)\n                        \n                        \n                            AppState   (apps/.../app.store.ts)\n                        \n                        \n                            CartFilter   (libs/.../cart-filter.ts)\n                        \n                        \n                            CompanyData   (libs/.../company-data.ts)\n                        \n                        \n                            DataFormat   (libs/.../param.ts)\n                        \n                        \n                            DataType   (libs/.../param.ts)\n                        \n                        \n                            DrawOptions   (libs/.../draw-options.ts)\n                        \n                        \n                            OrderFilter   (libs/.../order-filter.ts)\n                        \n                        \n                            ParamLocation   (libs/.../param.ts)\n                        \n                        \n                            ParamStyle   (libs/.../param.ts)\n                        \n                        \n                            PaymentTerms   (libs/.../payment-terms.ts)\n                        \n                        \n                            PdfColumn   (libs/.../pdf-table.columns.ts)\n                        \n                        \n                            PdfTableColumns   (libs/.../pdf-table.columns.ts)\n                        \n                        \n                            ProductFilter   (libs/.../product-filter.ts)\n                        \n                        \n                            StandardDataFormat   (libs/.../param.ts)\n                        \n                        \n                            StandardDataType   (libs/.../param.ts)\n                        \n                        \n                            StandardParamStyle   (libs/.../param.ts)\n                        \n                        \n                            UserState   (libs/.../user.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/api/model/add-cart-item401-response.ts\n    \n    \n        \n            \n                \n                    \n                    AddCartItem401Response\n                \n            \n            \n                \n                        HttpValidationProblemDetails | ProblemDetails\n\n                \n            \n        \n    \n    libs/product/src/lib/models/product-filter.ts\n    \n    \n        \n            \n                \n                    \n                    AllowedProductFilterTypes\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ProductFilter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/frontend/src/app/+state/app.store.ts\n    \n    \n        \n            \n                \n                    \n                    AppState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/cart/src/lib/models/cart-filter.ts\n    \n    \n        \n            \n                \n                    \n                    CartFilter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/order/src/lib/models/company-data.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/api/param.ts\n    \n    \n        \n            \n                \n                    \n                    DataFormat\n                \n            \n            \n                \n                        StandardDataFormat | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataType\n                \n            \n            \n                \n                    Standard DataTypes plus your own types/classes.\n\n                \n            \n            \n                \n                        StandardDataType | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamLocation\n                \n            \n            \n                \n                    Standard parameter locations defined by OpenAPI spec\n\n                \n            \n            \n                \n                        \"query\" | \"header\" | \"path\" | \"cookie\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ParamStyle\n                \n            \n            \n                \n                    The OpenAPI standard StandardParamStyles may be extended by custom styles by the user.\n\n                \n            \n            \n                \n                            StandardParamStyle | string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardDataFormat\n                \n            \n            \n                \n                    Standard formats as defined in OpenAPI Specification: Data Types\n\n                \n            \n            \n                \n                        \"int32\" | \"int64\" | \"float\" | \"double\" | \"byte\" | \"binary\" | \"date\" | \"date-time\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardDataType\n                \n            \n            \n                \n                    Standard types as defined in OpenAPI Specification: Data Types\n\n                \n            \n            \n                \n                        \"integer\" | \"number\" | \"boolean\" | \"string\" | \"object\" | \"array\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StandardParamStyle\n                \n            \n            \n                \n                    Standard parameter styles defined by OpenAPI spec\n\n                \n            \n            \n                \n                        \"matrix\" | \"label\" | \"form\" | \"simple\" | \"spaceDelimited\" | \"pipeDelimited\" | \"deepObject\"\n\n                \n            \n        \n    \n    libs/order/src/lib/models/draw-options.ts\n    \n    \n        \n            \n                \n                    \n                    DrawOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/order/src/lib/models/order-filter.ts\n    \n    \n        \n            \n                \n                    \n                    OrderFilter\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    libs/order/src/lib/models/payment-terms.ts\n    \n    \n        \n            \n                \n                    \n                    PaymentTerms\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/order/src/lib/models/pdf-table.columns.ts\n    \n    \n        \n            \n                \n                    \n                    PdfColumn\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PdfTableColumns\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    libs/user/src/lib/+state/user.store.ts\n    \n    \n        \n            \n                \n                    \n                    UserState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            animateBackdrop   (libs/.../cart.animations.ts)\n                        \n                        \n                            animateBackdrop   (libs/.../navigation.animations.ts)\n                        \n                        \n                            animateSlideOver   (libs/.../cart.animations.ts)\n                        \n                        \n                            animateSlideOver   (libs/.../navigation.animations.ts)\n                        \n                        \n                            APIS   (libs/.../api.ts)\n                        \n                        \n                            appConfig   (apps/.../app.config.ts)\n                        \n                        \n                            appRoutes   (apps/.../app.routes.ts)\n                        \n                        \n                            AppStore   (apps/.../app.store.ts)\n                        \n                        \n                            AUTH_CONFIG   (libs/.../auth-config.ts)\n                        \n                        \n                            authInterceptor   (libs/.../auth.interceptor.ts)\n                        \n                        \n                            BASE_PATH   (libs/.../variables.ts)\n                        \n                        \n                            CartStore   (libs/.../cart.store.ts)\n                        \n                        \n                            COLLECTION_FORMATS   (libs/.../variables.ts)\n                        \n                        \n                            columns   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            companyData   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            createDrawOptions   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            initialState   (apps/.../app.store.ts)\n                        \n                        \n                            initialState   (libs/.../cart.store.ts)\n                        \n                        \n                            initialState   (libs/.../user.store.ts)\n                        \n                        \n                            MONITORING_CONFIG   (libs/.../monitoring-config.ts)\n                        \n                        \n                            NAVIGATION_CONFIG   (libs/.../provide-navigation.ts)\n                        \n                        \n                            orderRoutes   (libs/.../order.routes.ts)\n                        \n                        \n                            OrderStore   (libs/.../order.store.ts)\n                        \n                        \n                            paymentTerms   (libs/.../print-invoice.config.ts)\n                        \n                        \n                            permissionGuard   (libs/.../permission.guard.ts)\n                        \n                        \n                            ProductStore   (libs/.../product.store.ts)\n                        \n                        \n                            provideApi   (apps/.../provide-api.ts)\n                        \n                        \n                            provideAuth   (libs/.../provide-auth.ts)\n                        \n                        \n                            provideMonitoring   (libs/.../provide-monitoring.ts)\n                        \n                        \n                            provideNavigation   (libs/.../provide-navigation.ts)\n                        \n                        \n                            UserStore   (libs/.../user.store.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/cart/src/lib/components/cart/cart.animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        animateBackdrop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateBackdrop', [\n  transition(':enter', [style({ opacity: 0 }), animate('500ms ease-in-out', style({ opacity: 1 }))]),\n  transition(':leave', [animate('500ms ease-in-out', style({ opacity: 0 }))]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateSlideOver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateSlideOver', [\n  transition(':enter', [\n    style({ transform: 'translateX(100%)' }),\n    animate('700ms ease-in-out', style({ transform: 'translateX(0)' })),\n  ]),\n  transition(':leave', [animate('700ms ease-in-out', style({ transform: 'translateX(100%)' }))]),\n])\n                    \n                \n\n\n        \n    \n\n    libs/navigation/src/lib/components/navigation/navigation.animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        animateBackdrop\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateBackdrop', [\n  transition(':enter', [style({ opacity: 0 }), animate('300ms linear', style({ opacity: 1 }))]),\n  transition(':leave', [style({ opacity: 1 }), animate('300ms linear', style({ opacity: 0 }))]),\n])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateSlideOver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('animateSlideOver', [\n  transition(':enter', [\n    style({ transform: 'translateX(-100%)' }),\n    animate('300ms ease-in-out', style({ transform: 'translateX(0)' })),\n  ]),\n  transition(':leave', [\n    style({ transform: 'translateX(0)' }),\n    animate('300ms ease-in-out', style({ transform: 'translateX(-100%)' })),\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n    libs/api/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APIS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [OrderApi, ProductApi, ShoppingSessionApi, UserApi]\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(withFetch(), withInterceptors([authInterceptor])),\n    provideRouter(appRoutes, withRouterConfig({ onSameUrlNavigation: 'reload' })),\n    provideAnimationsAsync(),\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\n    provideRouterStore(),\n    provideStore({\n      router: routerReducer,\n    }),\n    {\n      provide: RouteReuseStrategy,\n      useClass: NoReuseStrategy,\n    },\n    {\n      provide: ErrorHandler,\n      useValue: Sentry.createErrorHandler(),\n    },\n    {\n      provide: Sentry.TraceService,\n      deps: [Router],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => () => undefined,\n      deps: [Sentry.TraceService],\n      multi: true,\n    },\n    provideApi(withConfiguration({ basePath: '' })),\n    provideAuth({ keycloak: environment.keycloak }),\n    provideMonitoring({ sentry: environment.sentry }),\n    provideNavigation({ routes: appRoutes }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '',\n    redirectTo: 'products',\n    pathMatch: 'full',\n  },\n  {\n    path: 'checkout',\n    component: CheckoutComponent,\n    data: { pageTitle: 'Checkout', showInMenu: false },\n  },\n  {\n    path: 'orders',\n    loadChildren: () => import('@demo-shop/order').then(m => m.orderRoutes),\n    data: { pageTitle: 'Orders', showInMenu: true },\n  },\n  {\n    path: 'products',\n    loadChildren: () => import('@demo-shop/product').then(m => m.productRoutes),\n    data: { pageTitle: 'Products', showInMenu: true },\n  },\n  {\n    path: '**',\n    redirectTo: 'products',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/+state/app.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withMethods(\n    (store, authFacade = inject(AuthFacade), cartFacade = inject(CartFacade), userFacade = inject(UserFacade)) => ({\n      async init(): Promise {\n        const authorized = await authFacade.authorize();\n\n        if (authorized) {\n          await userFacade.fetchCurrentUser();\n          await cartFacade.loadShoppingSession();\n        }\n\n        patchState(store, state => ({ ...state, initialized: true }));\n      },\n    })\n  ),\n  withHooks({\n    onInit({ init }) {\n      init();\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                \n                    \n                        Default value : {\n  initialized: false,\n}\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/models/auth-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AUTH_CONFIG')\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const authFacade = inject(AuthFacade);\n\n  if (!authFacade.isAuthenticated()) {\n    return next(req);\n  }\n\n  return next(\n    req.clone({\n      headers: req.headers.set('Authorization', `Bearer ${authFacade.getToken()}`),\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n    libs/api/variables.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('basePath')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COLLECTION_FORMATS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  csv: ',',\n  tsv: '   ',\n  ssv: ' ',\n  pipes: '|',\n}\n                    \n                \n\n\n        \n    \n\n    libs/cart/src/lib/+state/cart.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CartStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withCallState(),\n  withDevtools('cart'),\n  withEntities(),\n  withComputed(store => ({\n    totalPrice: computed(() => store.entities().reduce((acc, curr) => acc + curr.totalPrice, 0)),\n    itemCount: computed(() => store.entities().reduce((acc, curr) => acc + curr.quantity, 0)),\n    hasShoppingSession: computed(() => !!store.shoppingSessionId()),\n  })),\n  withMethods((store, shoppingSessionApi = inject(ShoppingSessionApi)) => ({\n    async loadShoppingSession(): Promise {\n      const shoppingSession = await firstValueFrom(shoppingSessionApi.resolveCurrentShoppingSession());\n\n      patchState(store, setAllEntities(shoppingSession.items), { shoppingSessionId: shoppingSession.id });\n    },\n    async create(dto: AddCartItemRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.addCartItem(dto));\n      await this.loadShoppingSession();\n    },\n    async delete(id: number): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.removeCartItem(id));\n      await this.loadShoppingSession();\n    },\n    async update(id: number, entity: UpdateCartItemQuantityRequest): Promise {\n      if (!store.shoppingSessionId()) {\n        throw new Error('Missing shopping session id');\n      }\n\n      await firstValueFrom(shoppingSessionApi.updateCartItemQuantity(id, entity));\n      await this.loadShoppingSession();\n    },\n    getItemById(id: number): CartItemResponse | undefined {\n      return store.entityMap()[id];\n    },\n    getItemByProductId(productId: number): CartItemResponse | undefined {\n      return store.entities().find(item => item.productId === productId);\n    },\n    setShowCart(showCart: boolean): void {\n      patchState(store, { showCart });\n    },\n  }))\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalState\n\n                    \n                \n                \n                    \n                        Default value : { showCart: false, shoppingSessionId: null }\n                    \n                \n\n\n        \n    \n\n    libs/order/src/lib/config/print-invoice.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PdfTableColumns\n\n                    \n                \n                \n                    \n                        Default value : {\n  article: { label: 'Article', x: 15, width: 105 },\n  qty: { label: 'Qty', x: 125, width: 20 },\n  price: { label: 'Price', x: 165, width: 30 },\n  amount: { label: 'Amount', x: 195, width: 30 },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        companyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CompanyData\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'Demo Shop',\n  address: '123 Business Street',\n  city: 'Business City',\n  zipCode: '12345',\n  phone: '(555) 123-4567',\n  email: 'company@example.com',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDrawOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (width: number, height: number, margin = 15): DrawOptions => ({\n  pointer: {\n    x: 0,\n    y: 0,\n  },\n  border: {\n    left: margin,\n    right: width - margin,\n    top: margin,\n    bottom: height - margin,\n  },\n  line: {\n    color: {\n      light: 200,\n    },\n  },\n  text: {\n    color: {\n      darker: 25,\n      dark: 50,\n      light: 125,\n      lighter: 150,\n    },\n    size: {\n      tiny: 6,\n      smaller: 8,\n      small: 9,\n      default: 10,\n    },\n    font: {\n      default: 'Helvetica',\n    },\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paymentTerms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentTerms\n\n                    \n                \n                \n                    \n                        Default value : {\n  terms: 'payment due within 30 days of invoice date',\n  bankName: 'First National Bank',\n  accountName: 'Demo Shop',\n  accountNumber: '1234567890',\n  routingNumber: '987654321',\n}\n                    \n                \n\n\n        \n    \n\n    libs/user/src/lib/+state/user.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: undefined,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withState(initialState),\n  withDevtools('currentUser'),\n  withMethods((store, userApi = inject(UserApi)) => ({\n    async fetchCurrentUser(): Promise {\n      const user = await firstValueFrom(userApi.resolveCurrentUser());\n      patchState(store, state => ({ ...state, user }));\n    },\n    async updateUserAddress(update: UpdateUserAddressRequest): Promise {\n      const address = await firstValueFrom(userApi.updateCurrentUserAddress(update));\n\n      patchState(store, state => {\n        if (!state.user) {\n          throw new Error('User not found');\n        }\n\n        return { ...state, user: { ...state.user, address } };\n      });\n    },\n    async updateUserPhone(update: UpdateUserPhoneRequest): Promise {\n      const res = await firstValueFrom(userApi.updateCurrentUserPhone(update));\n\n      patchState(store, state => {\n        if (!state.user) {\n          throw new Error('User not found');\n        }\n\n        return { ...state, user: { ...state.user, phone: res.phone } };\n      });\n    },\n  })),\n  withHooks({\n    onInit(store) {\n      const monitoringFacade = inject(MonitoringFacade);\n\n      effect(() => {\n        const { user } = getState(store);\n        monitoringFacade.setUser({ id: user?.id });\n      });\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n\n    libs/monitoring/src/lib/models/monitoring-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MONITORING_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('MONITORING_CONFIG')\n                    \n                \n\n\n        \n    \n\n    libs/navigation/src/lib/util/provide-navigation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NAVIGATION_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('NAVIGATION_CONFIG')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideNavigation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: { routes: Routes }): EnvironmentProviders => {\n  const routes = config.routes.filter(route => route.data?.['showInMenu']);\n\n  return makeEnvironmentProviders([\n    { provide: NAVIGATION_CONFIG, useValue: { routes } },\n  ]);\n}\n                    \n                \n\n\n        \n    \n\n    libs/order/src/lib/order.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        orderRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', component: OrderListComponent, canActivate: [permissionGuard] },\n  { path: ':id', component: OrderDetailComponent },\n]\n                    \n                \n\n\n        \n    \n\n    libs/order/src/lib/+state/order.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withCallState(),\n  withDevtools('orders'),\n  withEntities(),\n  withDataService({\n    dataServiceType: OrderDataService,\n    filter: {},\n  }),\n  withMethods((store, orderApi = inject(OrderApi)) => ({\n    async fetchById(id: number) {\n      const order = await firstValueFrom(orderApi.getOrderById(id));\n      patchState(store, addEntity(order));\n    },\n    getById(id: number) {\n      return computed(() => store.entityMap()[id]);\n    },\n    getSortedByStatusAndDate() {\n      return computed(() =>\n        store.entities().sort((a, b) => {\n          if (a.status === b.status) {\n            return a.created > b.created ? -1 : 1;\n          }\n\n          return a.status === OrderStatus.Created ? -1 : 1;\n        })\n      );\n    },\n  }))\n)\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/guards/permission.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        permissionGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const permissionService = inject(PermissionService);\n  const router = inject(Router);\n\n  if (permissionService.hasPermission(PermissionStrategy.AUTHENTICATED)) {\n    return true;\n  }\n\n  return router.createUrlTree(['/']);\n}\n                    \n                \n\n\n        \n    \n\n    libs/product/src/lib/+state/product.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore(\n  { providedIn: 'root' },\n  withCallState(),\n  withDevtools('products'),\n  withEntities(),\n  withDataService({\n    dataServiceType: ProductDataService,\n    filter: {},\n  }),\n  withComputed(({ entities, filter }) => ({\n    filteredEntities: computed(() => {\n      const filterValues = Object.entries(filter());\n\n      if (filterValues.length === 0) {\n        return entities();\n      }\n\n      return entities().filter(entity =>\n        filterValues.every(([key, filterValue]) => {\n          const value = entity[key as AllowedProductFilterTypes];\n\n          if (Array.isArray(value)) {\n            return value.some(item => item.toLowerCase().includes(filterValue.toLowerCase()));\n          }\n\n          return value.toLowerCase().includes(filterValue.toLowerCase());\n        })\n      );\n    }),\n  })),\n  withMethods((store, productApi = inject(ProductApi)) => ({\n    async fetchById(id: number) {\n      const product = await firstValueFrom(productApi.getProductById(id));\n      patchState(store, addEntity(product));\n    },\n    getById(id: number) {\n      return computed(() => store.entityMap()[id]);\n    },\n  }))\n)\n                    \n                \n\n\n        \n    \n\n    apps/frontend/src/app/providers/provide-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideApi\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: Configuration = withConfiguration()) => {\n  return makeEnvironmentProviders([{ provide: Configuration, useValue: config }]);\n}\n                    \n                \n\n\n        \n    \n\n    libs/auth/src/lib/providers/provide-auth.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: AuthConfig) => {\n  return makeEnvironmentProviders([{ provide: AUTH_CONFIG, useValue: config }]);\n}\n                    \n                \n\n\n        \n    \n\n    libs/monitoring/src/lib/providers/provide-monitoring.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideMonitoring\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: MonitoringConfig) => {\n  return makeEnvironmentProviders([{ provide: MONITORING_CONFIG, useValue: config }]);\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
