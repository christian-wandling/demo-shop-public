var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddCartItemRequest.html",[0,0.04,1,2.151]],["body/classes/AddCartItemRequest.html",[0,0.065,1,3.55,2,1.57,3,0.288,4,0.288,5,0.207,6,2.826,7,5.41,8,2.554,9,2.433,10,3.312,11,0.374,12,1.847,13,4.782,14,0.434,15,0.017,16,1.477,17,1.313,18,4.398,19,0.497,20,3.935,21,0.388,22,4.075,23,1.8,24,4.415,25,3.589,26,2.885,27,0.288,28,3.589,29,0.014,30,0.014]],["title/classes/AddressResponse.html",[0,0.04,31,2.151]],["body/classes/AddressResponse.html",[0,0.039,2,1.164,3,0.213,4,0.213,5,0.153,11,0.277,12,1.52,14,0.582,15,0.017,17,1.759,19,0.667,21,0.32,23,1.334,27,0.291,29,0.011,30,0.011,31,3.328,32,5.396,33,1.617,34,1.803,35,4.878,36,4.878,37,4.878,38,4.878,39,4.878,40,4.878,41,1.914,42,3.555,43,2.285,44,2.455,45,2.66,46,2.455,47,2.285,48,2.66,49,2.794,50,1.617,51,1.064,52,2.455,53,0.813,54,3.259,55,3.259,56,3.259,57,3.259,58,3.259,59,3.259]],["title/modules/AppModule.html",[60,1.406,61,2.675]],["body/modules/AppModule.html",[0,0.034,3,0.183,4,0.183,5,0.131,8,1.32,15,0.018,21,0.452,27,0.183,29,0.01,30,0.01,60,2.003,61,5.239,62,1.54,63,1.46,64,1.725,65,1.725,66,1.54,67,2.468,68,1.725,69,2.796,70,2.796,71,4.227,72,3.091,73,3.934,74,4.227,75,3.934,76,3.934,77,2.468,78,1.725,79,1.627,80,3.243,81,2.804,82,0.697,83,3.243,84,3.243,85,2.796,86,2.796,87,2.796,88,1.96,89,1.46,90,2.501,91,2.796,92,2.796,93,3.243,94,3.243,95,2.501,96,4.64,97,3.243,98,3.243,99,4.64,100,4.64,101,2.501,102,2.106,103,2.106,104,4.64,105,5.914,106,2.501,107,4.64,108,3.243,109,2.796,110,4.64,111,3.243,112,3.243,113,3.243,114,3.243,115,3.243,116,3.243,117,2.203,118,3.243,119,3.243,120,3.243,121,3.243,122,2.796,123,3.243,124,3.243,125,3.243,126,3.243,127,3.243,128,3.243,129,3.243,130,3.243,131,3.243,132,3.243,133,3.243,134,3.243,135,3.243,136,3.243,137,5.914,138,5.914,139,1.387]],["title/controllers/CartItemController.html",[140,1.712,141,2.675]],["body/controllers/CartItemController.html",[0,0.026,1,3.336,3,0.14,4,0.14,5,0.1,6,2.333,8,1.545,9,1.791,11,0.181,14,0.393,15,0.017,17,1.189,19,0.451,21,0.429,27,0.14,29,0.008,30,0.008,34,0.894,41,1.518,51,1.3,53,0.816,82,0.532,89,2.853,139,1.059,140,1.71,141,2.671,142,4.466,143,2.133,144,0.935,145,2.925,146,4.619,147,4.619,148,4.619,149,2.475,150,3.454,151,1.909,152,5.897,153,1.803,154,5.293,155,3.364,156,3.161,157,2.475,158,1.137,159,0.949,160,0.949,161,2.8,162,1.137,163,1.66,164,2.475,165,2.475,166,5.181,167,2.475,168,1.275,169,2.475,170,3.336,171,2.133,172,2.475,173,2.133,174,1.909,175,2.791,176,2.133,177,2.133,178,2.133,179,0.873,180,2.465,181,3.364,182,1.909,183,2.019,184,1.741,185,1.495,186,1.741,187,2.93,188,1.741,189,1.803,190,1.741,191,2.613,192,1.741,193,1.909,194,2.929,195,2.475,196,2.671,197,2.133,198,1.495,199,1.316,200,1.114,201,2.019,202,1.741,203,1.741,204,1.741,205,3.13,206,2.133,207,1.4,208,1.495,209,1.007,210,3.273,211,3.25,212,3.563,213,2.46,214,4.619,215,2.791,216,2.655,217,3.983,218,3.983,219,2.959,220,2.613,221,3.983,222,3.563,223,3.563,224,2.475,225,3.25,226,3.273,227,2.475,228,2.475]],["title/modules/CartItemModule.html",[60,1.406,71,2.469]],["body/modules/CartItemModule.html",[0,0.045,3,0.242,4,0.242,5,0.174,6,1.93,15,0.017,21,0.439,27,0.242,29,0.012,30,0.012,60,2.318,62,2.036,63,1.93,64,2.28,65,2.28,66,2.036,67,3.334,68,2.28,71,4.924,72,3.365,75,4.283,77,2.989,78,2.28,79,2.151,81,3.395,82,0.922,88,2.591,89,1.93,90,3.307,91,3.696,92,3.696,139,2.404,141,4.41,175,4.283,176,4.844,177,3.696,229,3.696,230,3.696,231,4.287,232,4.283,233,4.287,234,4.287,235,4.287,236,3.696]],["title/injectables/CartItemRepository.html",[232,2.298,237,0.818]],["body/injectables/CartItemRepository.html",[0,0.032,1,3.262,3,0.173,4,0.173,5,0.124,6,2.758,8,2.138,9,2.375,11,0.225,14,0.491,15,0.018,16,1.728,19,0.562,21,0.408,27,0.173,29,0.01,30,0.01,34,0.723,50,1.314,53,1.13,82,0.66,103,2.897,117,2.118,144,1.098,158,1.42,159,1.184,160,1.184,161,2.495,162,1.293,163,1.798,168,1.573,170,3.262,199,1.633,200,2.366,201,2.373,202,2.16,208,1.856,209,1.25,232,2.696,237,0.959,238,1.191,239,4.724,240,2.647,241,2.009,242,2.523,243,2.897,244,1.994,245,2.738,246,3.071,247,2.523,248,3.846,249,4.652,250,3.071,251,2.696,252,3.071,253,3.441,254,3.071,255,2.369,256,1.856,257,1.135,258,3.138,259,3.071,260,1.994,261,1.994,262,1.633,263,1.135,264,3.071,265,2.897,266,2.495,267,2.647,268,3.071,269,3.744,270,2.696,271,3.071,272,4.461,273,3.071,274,3.071]],["title/interfaces/CartItemRepositoryModel.html",[258,2.675,275,1.548]],["body/interfaces/CartItemRepositoryModel.html",[1,3.638,3,0.222,4,0.222,5,0.16,6,2.896,8,2.446,9,2.788,11,0.289,14,0.511,15,0.017,16,1.791,19,0.586,21,0.398,27,0.222,29,0.012,30,0.012,50,1.685,144,1.308,158,1.479,159,1.234,160,1.234,161,2.854,162,1.479,163,1.947,168,1.308,170,3.638,199,2.095,200,1.774,201,2.825,202,2.771,241,2.392,242,3.004,243,3.449,248,4.579,249,4.731,251,3.21,253,4.097,255,3.038,256,2.38,257,1.456,258,3.737,275,1.603,276,2.228,277,5.545,278,2.38,279,3.396,280,3.939,281,3.939]],["title/classes/CartItemResponse.html",[0,0.04,156,2.151]],["body/classes/CartItemResponse.html",[0,0.036,2,1.053,3,0.193,4,0.193,5,0.138,6,3.129,8,1.392,9,2.777,11,0.25,12,1.418,13,4.261,14,0.579,15,0.017,16,1.686,17,1.752,19,0.664,21,0.298,23,1.207,27,0.272,29,0.011,30,0.011,33,1.463,34,1.8,41,1.559,42,3.544,43,2.066,44,2.221,45,2.406,46,2.221,47,2.066,48,2.406,51,1.356,53,0.735,156,3.156,168,1.491,200,2.727,256,2.912,257,1.264,282,4.889,283,4.672,284,4.925,285,4.672,286,4.672,287,2.948,288,2.221,289,2.948,290,2.948,291,2.638,292,2.948,293,3.39,294,4.154]],["title/injectables/CartItemService.html",[175,2.298,237,0.818]],["body/injectables/CartItemService.html",[0,0.033,1,3.326,3,0.18,4,0.18,5,0.13,6,2.804,8,2.393,9,2.513,11,0.235,14,0.5,15,0.017,16,1.74,19,0.573,21,0.385,27,0.18,29,0.01,30,0.01,34,0.754,51,1.514,53,0.988,82,0.688,144,1.132,145,3.133,156,1.811,158,1.447,159,1.207,160,1.207,161,2.957,162,1.324,163,1.824,168,1.132,170,3.326,175,2.778,178,2.76,179,1.13,199,1.703,200,1.442,201,2.445,202,2.252,209,1.303,213,2.554,215,3.25,216,2.422,220,2.6,232,3.917,236,2.76,237,0.988,238,1.241,239,4.803,241,2.422,242,2.6,243,2.985,249,4.689,251,2.778,253,3.546,255,4.999,263,1.184,288,2.079,295,2.76,296,3.201,297,3.201,298,3.546,299,3.201,300,3.201,301,3.201,302,2.469,303,2.079,304,3.201,305,2.469,306,4.597,307,3.201,308,4.597,309,3.201]],["title/classes/CatchEverythingFilter.html",[0,0.04,310,2.933]],["body/classes/CatchEverythingFilter.html",[0,0.039,2,1.164,3,0.213,4,0.213,5,0.153,11,0.277,14,0.44,15,0.018,16,0.89,17,0.973,19,0.504,21,0.364,27,0.213,29,0.011,30,0.011,34,0.89,51,1.78,53,0.813,82,0.813,106,2.916,144,1.272,158,1.272,159,1.061,160,1.061,162,0.931,205,2.285,209,1.539,216,1.702,262,2.747,263,1.398,310,3.984,311,5.073,312,3.259,313,5.884,314,6.324,315,3.781,316,6.835,317,3.781,318,5.166,319,5.073,320,6.324,321,5.884,322,3.781,323,5.884,324,4.454,325,5.166,326,6.835,327,3.781,328,2.916,329,3.259,330,3.781,331,3.781,332,3.259,333,3.781,334,5.166,335,3.781,336,5.884,337,5.166,338,5.166,339,3.781,340,3.781,341,5.166,342,3.781,343,3.781,344,3.781,345,3.781,346,3.781,347,3.781,348,3.259,349,3.781,350,3.781,351,3.781]],["title/modules/CommonModule.html",[60,1.406,72,1.806]],["body/modules/CommonModule.html",[0,0.048,3,0.261,4,0.261,5,0.188,15,0.017,21,0.402,27,0.261,29,0.013,30,0.013,60,2.404,62,2.199,63,2.085,64,2.463,65,2.463,66,2.199,67,3.459,68,3.459,72,3.597,77,3.141,78,2.463,79,2.324,82,0.996,245,3.64,352,3.992,353,3.992,354,3.992,355,4.632,356,4.63,357,4.63,358,4.63]],["title/classes/CreateOrderDto.html",[0,0.04,359,2.469]],["body/classes/CreateOrderDto.html",[0,0.067,2,1.37,3,0.251,4,0.251,5,0.18,9,1.726,11,0.326,12,1.695,14,0.595,15,0.017,16,1.589,17,1.643,19,0.623,21,0.395,24,4.491,25,3.132,26,2.518,27,0.251,28,4.051,29,0.013,30,0.013,117,2.114,153,3.031,161,2.114,241,2.005,249,4.145,359,3.74,360,5.206,361,2.845,362,3.434,363,4.145,364,4.748,365,4.452,366,4.452,367,4.452,368,4.965,369,3.838,370,4.452,371,5.759,372,3.838,373,4.452]],["title/classes/CreateOrderItemDto.html",[0,0.04,364,2.675]],["body/classes/CreateOrderItemDto.html",[0,0.058,2,1.305,3,0.239,4,0.239,5,0.172,9,2.739,11,0.31,12,1.641,14,0.586,15,0.017,16,1.663,17,1.771,19,0.671,21,0.262,24,4.385,25,2.982,26,2.398,27,0.239,28,3.924,29,0.012,30,0.012,41,1.705,200,2.807,360,5.449,361,2.876,362,3.27,364,3.924,368,4.809,369,3.654,374,4.385,375,5.374,376,5.374,377,5.374,378,4.239,379,4.239,380,4.239,381,5.109,382,4.239,383,4.239,384,5.577,385,3.27,386,4.239]],["title/injectables/DecodeTokenPipe.html",[187,2.151,237,0.818]],["body/injectables/DecodeTokenPipe.html",[0,0.043,3,0.234,4,0.234,5,0.168,11,0.304,14,0.559,15,0.017,19,0.537,21,0.382,27,0.234,29,0.012,30,0.012,34,0.978,41,1.589,51,1.55,53,1.184,82,0.894,95,3.206,144,1.355,150,2.932,158,1.355,159,1.131,160,1.131,162,1.023,187,3.114,189,3.336,209,1.692,237,1.184,238,1.612,262,2.211,263,1.537,387,5.323,388,3.584,389,5.506,390,4.157,391,7.026,392,4.157,393,5.506,394,5.323,395,6.573,396,4.157,397,4.157,398,5.506,399,4.157,400,4.157,401,4.157,402,5.506,403,5.506,404,2.763,405,5.506,406,4.157,407,2.512]],["title/classes/ImageResponse.html",[0,0.04,408,2.469]],["body/classes/ImageResponse.html",[0,0.049,2,1.438,3,0.263,4,0.263,5,0.189,11,0.342,12,1.748,14,0.506,15,0.017,17,1.529,19,0.579,21,0.368,23,1.649,27,0.335,29,0.013,30,0.013,33,1.999,34,1.707,41,1.769,42,3.369,43,2.824,47,2.824,50,1.999,51,1.315,53,1.005,159,1.411,408,4.241,409,5.038,410,5.925,411,4.595,412,3.288,413,4.029,414,4.029]],["title/interfaces/MonitoredUser.html",[275,1.548,415,2.675]],["body/interfaces/MonitoredUser.html",[3,0.312,4,0.312,5,0.224,11,0.405,12,1.94,14,0.471,15,0.017,16,1.657,27,0.312,29,0.015,30,0.015,160,1.354,168,1.794,275,2.252,276,3.13,415,4.637,416,4.77,417,4.268]],["title/injectables/MonitoringService.html",[237,0.818,355,2.298]],["body/injectables/MonitoringService.html",[0,0.05,3,0.268,4,0.268,5,0.193,11,0.349,14,0.405,15,0.017,19,0.464,21,0.408,27,0.268,29,0.013,30,0.013,51,1.34,53,1.024,82,1.024,144,1.48,158,1.172,159,0.978,160,0.978,162,1.172,237,1.293,238,1.846,324,5.183,328,3.673,355,3.633,415,4.869,418,4.106,419,6.012,420,6.012,421,4.762,422,2.555,423,4.106,424,4.762,425,6.012,426,4.762,427,4.762,428,4.762,429,4.762,430,4.762,431,4.762,432,4.762]],["title/controllers/OrderController.html",[140,1.712,433,2.675]],["body/controllers/OrderController.html",[0,0.038,3,0.204,4,0.204,5,0.147,11,0.266,14,0.427,15,0.018,17,1.292,19,0.489,21,0.443,27,0.204,29,0.011,30,0.011,34,0.853,41,1.482,53,1.079,82,0.78,117,2.383,139,1.551,140,2.26,144,1.236,150,3.506,155,3.738,158,1.236,159,1.031,160,1.031,162,1.236,163,1.749,168,1.53,174,2.797,179,1.771,181,3.259,183,2.67,184,2.551,185,2.191,186,2.551,187,3.256,188,2.551,189,2.383,190,2.551,198,2.191,203,2.551,204,2.551,205,3.033,207,2.051,208,2.191,211,3.531,226,3.126,263,1.341,433,3.531,434,3.126,435,5.757,436,5.757,437,3.626,438,3.126,439,3.738,440,4.327,441,3.626,442,3.626,443,3.126,444,2.889,445,3.626,446,3.479,447,3.126,448,4.327,449,4.05,450,3.126,451,1.928,452,3.126,453,3.626,454,3.626,455,2.797]],["title/classes/OrderItemResponse.html",[0,0.04,456,2.469]],["body/classes/OrderItemResponse.html",[0,0.039,2,1.138,3,0.208,4,0.208,5,0.15,9,2.747,11,0.271,12,1.497,13,4.407,14,0.578,15,0.017,16,1.668,17,1.748,19,0.662,21,0.315,23,1.305,27,0.287,29,0.011,30,0.011,33,1.582,34,1.798,41,1.613,42,3.543,43,2.234,44,2.401,45,2.601,46,2.401,47,2.234,48,2.601,50,1.582,51,1.04,53,0.795,200,2.821,283,4.832,284,4.832,285,4.832,286,4.832,291,2.852,293,3.579,456,3.777,457,4.516,458,4.386,459,2.601,460,3.187,461,3.187,462,4.386]],["title/classes/OrderListResponse.html",[0,0.04,439,2.469]],["body/classes/OrderListResponse.html",[0,0.054,2,1.586,3,0.291,4,0.291,5,0.209,11,0.378,12,1.858,14,0.537,15,0.017,17,1.327,19,0.503,21,0.391,23,1.819,27,0.291,29,0.014,30,0.014,33,2.205,42,2.999,47,3.114,153,3.242,179,1.819,361,2.098,407,3.114,439,4.101,444,3.572,451,3.359,457,4.101,463,3.114]],["title/modules/OrderModule.html",[60,1.406,73,2.298]],["body/modules/OrderModule.html",[0,0.047,3,0.256,4,0.256,5,0.184,15,0.017,21,0.435,27,0.256,29,0.013,30,0.013,60,2.384,62,2.159,63,2.047,64,2.418,65,2.418,66,2.159,67,3.429,68,2.418,72,3.419,73,4.564,77,3.105,78,2.418,79,2.282,81,3.527,82,0.977,88,2.747,139,2.497,433,4.536,446,4.351,447,3.919,464,3.919,465,4.546,466,3.919,467,4.351,468,4.546,469,4.546,470,4.546]],["title/injectables/OrderRepository.html",[237,0.818,467,2.298]],["body/injectables/OrderRepository.html",[0,0.041,3,0.223,4,0.223,5,0.16,11,0.289,14,0.512,15,0.018,16,1.416,19,0.587,21,0.398,27,0.223,29,0.012,30,0.012,34,0.93,41,1.782,53,1.144,82,0.849,117,2.527,144,1.31,158,1.481,159,1.236,160,1.236,162,1.31,163,1.812,168,1.31,209,1.608,237,1.144,238,1.531,244,2.565,245,3.058,247,3.01,257,1.46,260,2.565,261,2.565,262,2.101,263,1.46,269,3.455,361,1.608,422,2.063,467,3.215,471,3.405,472,2.83,473,4.587,474,3.949,475,3.215,476,4.184,477,3.949,478,5.321,479,3.949,480,2.234,481,3.743,482,3.949,483,3.949,484,4.104,485,4.587,486,3.949]],["title/interfaces/OrderRepositoryModel.html",[275,1.548,481,2.675]],["body/interfaces/OrderRepositoryModel.html",[3,0.271,4,0.271,5,0.195,11,0.352,14,0.515,15,0.017,16,1.558,19,0.59,21,0.298,27,0.271,29,0.013,30,0.013,41,1.881,144,1.489,158,1.489,159,1.242,160,1.242,162,1.489,163,1.954,168,1.184,257,1.778,275,1.957,276,2.719,278,2.905,361,1.957,404,3.485,472,3.217,473,5.215,475,3.655,480,2.719,481,4.255,487,5.705,488,4.145,489,6.048,490,4.145]],["title/classes/OrderResponse.html",[0,0.04,444,1.908]],["body/classes/OrderResponse.html",[0,0.035,2,1.048,3,0.192,4,0.192,5,0.138,9,1.32,11,0.249,12,1.413,14,0.579,15,0.017,16,1.557,17,1.703,19,0.645,21,0.394,23,1.201,27,0.271,29,0.011,30,0.011,33,1.456,34,1.781,42,3.435,50,1.456,51,1.566,53,0.732,153,3.027,168,1.488,179,1.201,216,1.533,257,1.259,361,2.265,363,3.925,407,2.902,444,2.793,456,3.925,457,4.414,459,3.379,463,2.057,480,2.717,491,5.495,492,3.925,493,4.662,494,2.935,495,4.141,496,3.404,497,2.935,498,2.935,499,5.565,500,3.404,501,2.935,502,2.935,503,1.926,504,2.211,505,2.211,506,3.404,507,3.404,508,2.211,509,2.935,510,2.935,511,2.935,512,2.935,513,2.935,514,2.935,515,2.626,516,2.935,517,2.935,518,2.935,519,2.935]],["title/injectables/OrderService.html",[237,0.818,446,2.298]],["body/injectables/OrderService.html",[0,0.041,3,0.22,4,0.22,5,0.158,11,0.286,14,0.509,15,0.017,16,1.409,19,0.584,21,0.414,27,0.22,29,0.012,30,0.012,34,0.92,41,1.777,51,1.1,53,1.136,82,0.84,144,1.301,145,3.108,153,1.856,158,1.474,159,1.229,160,1.229,162,1.301,163,1.804,168,0.962,179,1.864,209,1.591,213,1.856,215,2.362,216,1.76,220,2.211,237,1.136,238,1.515,263,1.445,303,2.538,361,2.151,439,2.538,444,1.961,446,3.193,448,4.555,451,2.079,467,3.874,472,2.81,475,3.193,476,4.047,503,2.211,504,2.538,505,2.538,508,3.431,520,3.37,521,5.284,522,3.908,523,3.908,524,5.284,525,3.908,526,5.284,527,3.908,528,3.908,529,3.908,530,3.908,531,3.37,532,3.37,533,3.908]],["title/injectables/PrismaService.html",[237,0.818,245,1.806]],["body/injectables/PrismaService.html",[0,0.053,3,0.288,4,0.288,5,0.207,11,0.374,15,0.017,19,0.497,21,0.388,27,0.288,29,0.014,30,0.014,50,2.182,82,1.097,144,1.545,145,3.061,162,1.256,163,1.766,213,2.422,237,1.349,238,1.978,245,2.98,262,2.713,534,4.398,535,6.275,536,6.797,537,7.413,538,5.101,539,5.101]],["title/controllers/ProductController.html",[140,1.712,540,2.675]],["body/controllers/ProductController.html",[0,0.042,3,0.229,4,0.229,5,0.164,11,0.297,14,0.345,15,0.017,17,1.394,19,0.528,21,0.432,27,0.229,29,0.012,30,0.012,34,0.955,41,1.57,53,1.165,82,0.872,101,3.128,102,2.634,103,2.634,117,2.572,139,1.735,140,2.439,144,1.334,155,3.96,158,0.998,159,0.833,160,0.833,162,1.334,163,1.832,168,1.602,174,3.128,179,1.911,181,2.634,205,3.273,207,2.294,208,2.451,263,1.5,438,3.497,440,4.67,443,3.497,449,4.291,450,3.497,451,2.157,540,3.811,541,3.497,542,6.509,543,5.417,544,3.96,545,4.056,546,4.056,547,3.45,548,4.056,549,3.685,550,3.497,551,4.67,552,4.67,553,3.128,554,4.056,555,4.056,556,4.056]],["title/classes/ProductListResponse.html",[0,0.04,544,2.469]],["body/classes/ProductListResponse.html",[0,0.053,2,1.57,3,0.288,4,0.288,5,0.207,11,0.374,12,1.847,14,0.534,15,0.017,17,1.313,19,0.497,21,0.388,23,1.8,27,0.288,29,0.014,30,0.014,33,2.182,34,1.6,42,2.98,47,3.082,153,3.228,179,1.8,266,2.422,407,3.082,451,3.338,463,3.082,544,4.075,547,4.011,557,4.415]],["title/modules/ProductModule.html",[60,1.406,74,2.469]],["body/modules/ProductModule.html",[0,0.047,3,0.256,4,0.256,5,0.184,15,0.017,21,0.435,27,0.256,29,0.013,30,0.013,60,2.384,62,2.159,63,2.047,64,2.418,65,2.418,66,2.159,67,3.429,68,2.418,72,3.419,74,4.904,77,3.105,78,2.418,79,2.282,81,3.527,82,0.977,88,2.747,139,2.497,540,4.536,549,4.351,550,3.919,558,3.919,559,4.546,560,3.919,561,4.351,562,4.546,563,4.546,564,4.546]],["title/injectables/ProductRepository.html",[237,0.818,561,2.298]],["body/injectables/ProductRepository.html",[0,0.042,3,0.228,4,0.228,5,0.164,11,0.296,14,0.46,15,0.018,16,1.434,19,0.594,21,0.402,27,0.228,29,0.012,30,0.012,34,0.952,53,1.163,82,0.87,117,3.087,144,1.331,158,1.331,159,1.11,160,1.11,162,1.331,163,1.83,168,1.331,209,1.646,237,1.163,238,1.568,244,2.627,245,3.087,247,3.058,257,1.496,260,2.627,261,2.627,262,2.151,263,1.496,266,1.921,269,4.222,270,3.267,472,2.876,475,3.267,561,3.267,565,3.487,566,4.045,567,4.045,568,4.045,569,2.444,570,3.804,571,4.045,572,4.045,573,4.662,574,4.171,575,3.804,576,5.407,577,4.045]],["title/interfaces/ProductRepositoryModel.html",[275,1.548,570,2.675]],["body/interfaces/ProductRepositoryModel.html",[3,0.289,4,0.289,5,0.207,11,0.375,14,0.436,15,0.017,16,1.602,19,0.613,21,0.317,27,0.289,29,0.014,30,0.014,144,1.548,158,1.26,159,1.051,160,1.051,162,1.548,163,1.998,168,1.26,257,1.893,266,2.431,275,2.083,276,2.895,278,3.093,472,3.345,475,3.8,488,4.413,569,3.093,570,4.424,578,5.869,579,4.413]],["title/classes/ProductResponse.html",[0,0.04,547,2.151]],["body/classes/ProductResponse.html",[0,0.037,2,1.09,3,0.2,4,0.2,5,0.143,11,0.259,12,1.453,14,0.585,15,0.017,16,1.447,17,1.724,19,0.653,21,0.381,23,1.249,27,0.278,29,0.011,30,0.011,33,1.515,34,1.789,41,1.724,42,3.492,43,2.139,44,2.299,45,2.491,46,2.299,48,2.491,51,1.6,53,0.761,159,1.263,168,1.514,179,1.249,257,1.309,266,2.344,270,3.908,287,3.052,374,4.326,407,2.139,408,3.993,411,2.491,412,3.473,463,2.139,503,2.003,504,2.299,505,2.299,547,3.215,557,4.835,569,2.983,575,4.55,580,5.302,581,2.491,582,3.052,583,3.052,584,3.052,585,3.052,586,3.052,587,3.052,588,3.052]],["title/injectables/ProductService.html",[237,0.818,549,2.298]],["body/injectables/ProductService.html",[0,0.043,3,0.232,4,0.232,5,0.167,11,0.302,14,0.466,15,0.017,16,1.447,19,0.6,21,0.422,27,0.232,29,0.012,30,0.012,34,0.97,51,1.16,53,1.177,82,0.886,144,1.348,145,3.157,153,1.958,158,1.348,159,1.125,160,1.125,162,1.348,163,1.844,168,1.015,179,1.932,209,1.678,213,1.958,215,2.491,216,1.856,220,2.332,237,1.177,238,1.598,263,1.524,266,2.6,303,2.677,451,2.193,472,2.912,475,3.309,503,2.332,504,2.677,505,2.677,532,3.554,544,2.677,547,2.332,549,3.309,551,4.721,561,3.959,581,3.852,589,3.554,590,4.123,591,4.123,592,5.476,593,4.123,594,4.123,595,4.123,596,4.123,597,4.123,598,4.123,599,4.123]],["title/controllers/ShoppingSessionController.html",[140,1.712,600,2.675]],["body/controllers/ShoppingSessionController.html",[0,0.038,3,0.203,4,0.203,5,0.146,11,0.264,14,0.425,15,0.018,17,1.286,19,0.487,21,0.442,27,0.203,29,0.011,30,0.011,34,0.847,53,1.074,82,0.774,89,1.621,139,1.54,140,2.249,144,1.229,145,3.032,150,3.472,151,3.852,155,4.022,158,1.229,159,1.026,160,1.026,162,1.229,163,1.743,179,1.762,180,3.724,181,3.243,182,2.777,183,2.656,184,2.532,185,2.175,186,2.532,187,3.244,188,2.532,189,2.371,190,2.532,191,2.825,193,2.777,198,2.175,203,2.532,204,2.532,205,3.465,206,3.103,207,2.036,208,2.175,211,2.532,219,1.807,263,1.331,444,2.878,600,3.513,601,2.878,602,4.944,603,3.103,604,4.357,605,5.735,606,3.6,607,3.6,608,3.6,609,4.994,610,3.465,611,3.6,612,3.103,613,3.103,614,3.103,615,3.6,616,3.6,617,3.6,618,3.6]],["title/modules/ShoppingSessionModule.html",[60,1.406,75,2.298]],["body/modules/ShoppingSessionModule.html",[0,0.042,3,0.227,4,0.227,5,0.163,15,0.017,21,0.44,27,0.227,29,0.012,30,0.012,60,2.249,62,1.916,63,1.817,64,2.146,65,2.146,66,1.916,67,3.235,68,3.235,72,3.308,73,4.21,75,4.612,76,4.21,77,2.871,78,2.146,79,2.025,81,3.261,82,0.867,86,3.478,87,3.478,88,2.438,90,3.112,139,2.309,191,4.25,193,3.112,600,4.279,601,2.025,612,4.653,619,3.478,620,3.478,621,3.478,622,4.034,623,4.21,624,4.034,625,4.034,626,4.034,627,3.478]],["title/injectables/ShoppingSessionRepository.html",[237,0.818,623,2.298]],["body/injectables/ShoppingSessionRepository.html",[0,0.029,3,0.156,4,0.156,5,0.112,11,0.203,14,0.5,15,0.018,16,1.165,19,0.573,21,0.395,27,0.156,29,0.009,30,0.009,34,0.652,41,1.726,50,1.185,51,0.78,53,1.18,82,0.596,89,1.248,103,2.686,117,2.35,144,1.018,145,2.228,158,1.445,159,1.206,160,1.206,161,1.964,162,1.351,163,1.846,168,1.351,192,4.333,209,1.128,212,1.674,213,1.316,219,2.076,237,0.889,238,1.074,241,1.862,242,2.34,244,1.799,245,2.606,247,2.34,251,2.499,257,1.025,260,1.799,261,1.799,262,1.474,263,1.025,265,3.213,266,1.964,269,4.144,270,2.499,359,3.563,361,1.683,422,2.128,472,2.2,476,3.964,480,2.799,484,3.817,485,3.566,492,1.799,493,2.137,601,3.091,604,2.91,623,2.499,628,2.389,629,2.771,630,4.136,631,2.771,632,4.136,633,2.771,634,4.136,635,2.771,636,2.771,637,1.674,638,2.91,639,2.771,640,2.389,641,2.771,642,2.771,643,2.771,644,2.771,645,2.771,646,4.136,647,2.771,648,4.136,649,2.771,650,2.771,651,2.771,652,2.771,653,2.771,654,2.771]],["title/interfaces/ShoppingSessionRepositoryModel.html",[275,1.548,638,2.675]],["body/interfaces/ShoppingSessionRepositoryModel.html",[3,0.244,4,0.244,5,0.176,11,0.318,14,0.537,15,0.017,16,1.484,19,0.615,21,0.35,27,0.244,29,0.013,30,0.013,41,1.912,50,1.855,89,1.953,144,1.394,158,1.552,159,1.294,160,1.294,162,1.552,163,2.001,168,1.068,212,2.62,219,3.479,241,2.549,242,3.202,251,3.421,257,1.603,275,1.765,276,2.453,278,2.62,279,3.739,404,3.479,472,3.011,490,3.739,579,3.739,601,3.353,637,2.62,638,3.983,655,5.761,656,4.881,657,5.661]],["title/classes/ShoppingSessionResponse.html",[0,0.04,610,2.298]],["body/classes/ShoppingSessionResponse.html",[0,0.043,2,1.269,3,0.232,4,0.232,5,0.167,8,1.678,9,1.598,11,0.302,12,1.611,14,0.558,15,0.017,16,1.542,17,1.583,19,0.6,21,0.405,23,1.455,27,0.309,29,0.012,30,0.012,33,1.764,42,3.329,43,2.491,44,2.677,46,2.677,51,1.541,53,0.886,89,1.856,153,3.238,156,3.706,168,1.613,179,1.455,212,2.491,219,3.422,225,2.9,257,1.524,282,2.9,288,3.556,363,4.254,407,2.491,463,2.491,503,2.332,504,2.677,505,2.677,601,3.288,610,3.715,637,3.309,658,5.053,659,2.9,660,3.554,661,3.554]],["title/injectables/ShoppingSessionService.html",[191,2.151,237,0.818]],["body/injectables/ShoppingSessionService.html",[0,0.03,3,0.16,4,0.16,5,0.115,11,0.208,14,0.505,15,0.017,16,1.182,19,0.578,21,0.367,27,0.16,29,0.009,30,0.009,34,0.668,41,1.815,51,1.749,53,1.194,82,0.61,89,2.501,144,1.037,145,3.176,153,1.348,158,1.46,159,1.218,160,1.218,161,1.348,162,1.367,163,1.859,168,0.699,173,2.448,179,1.486,191,2.382,192,4.371,200,1.278,209,1.155,212,3.755,213,2.817,215,3.356,216,2.671,217,2.448,218,2.448,219,3.228,220,2.382,221,2.448,222,2.19,223,2.19,225,1.997,237,0.905,238,1.101,241,2.261,242,2.382,249,1.843,251,2.545,263,1.05,267,2.448,293,1.997,302,2.19,303,1.843,305,2.19,359,2.735,361,2.043,363,1.843,374,1.997,375,2.448,376,2.448,377,2.448,404,1.425,444,1.425,476,3.755,492,1.843,508,1.843,531,2.448,601,3.118,604,2.963,610,1.715,613,2.448,614,2.448,623,3.356,627,2.448,640,2.448,656,3.631,659,1.997,662,2.448,663,4.211,664,2.839,665,2.839,666,4.211,667,4.211,668,2.839,669,2.839,670,4.211,671,2.839,672,2.839,673,2.839,674,2.839,675,2.839,676,2.839,677,2.839,678,2.839,679,2.839,680,2.839,681,2.839,682,2.839,683,2.839,684,2.839,685,2.839,686,2.839,687,2.839,688,2.839]],["title/classes/UpdateCartItemQuantityRequest.html",[0,0.04,170,2.151]],["body/classes/UpdateCartItemQuantityRequest.html",[0,0.065,2,1.559,3,0.286,4,0.286,5,0.205,6,2.814,8,2.544,9,2.423,10,3.29,11,0.371,12,1.839,14,0.431,15,0.017,16,1.471,17,1.304,18,4.368,19,0.494,20,3.908,21,0.387,22,4.058,23,1.788,24,4.396,25,3.565,26,2.866,27,0.286,28,3.565,29,0.014,30,0.014,170,3.535,200,3.272,689,5.388]],["title/classes/UpdateUserAddressRequest.html",[0,0.04,690,2.151]],["body/classes/UpdateUserAddressRequest.html",[0,0.054,2,1.184,3,0.217,4,0.217,5,0.156,10,2.499,11,0.282,12,1.539,14,0.585,15,0.017,17,1.769,19,0.67,20,2.968,21,0.324,22,4.564,23,1.358,26,2.177,27,0.217,29,0.012,30,0.012,35,4.58,36,4.58,37,4.58,38,4.58,39,4.58,40,4.58,41,1.92,49,3.338,160,1.074,381,5.139,385,2.968,422,2.725,574,4.033,690,2.958,691,5.422,692,5.744,693,3.848,694,3.848,695,3.848,696,4.508,697,3.848,698,3.848,699,3.848,700,5.924,701,3.848]],["title/classes/UpdateUserPhoneRequest.html",[0,0.04,702,2.151]],["body/classes/UpdateUserPhoneRequest.html",[0,0.054,2,1.597,3,0.293,4,0.293,5,0.21,10,3.37,11,0.38,12,1.866,14,0.442,15,0.017,17,1.336,19,0.506,21,0.321,22,4.447,23,1.831,27,0.293,29,0.014,30,0.014,41,1.632,160,1.302,422,2.459,691,4.891,696,5.467,702,3.587,703,3.672,704,5.189]],["title/controllers/UserController.html",[140,1.712,705,2.675]],["body/controllers/UserController.html",[0,0.031,3,0.167,4,0.167,5,0.12,11,0.217,14,0.439,15,0.018,17,1.326,19,0.502,21,0.445,27,0.167,29,0.01,30,0.01,31,2.914,34,0.699,49,1.409,53,1.108,82,0.638,139,1.27,140,1.959,144,1.071,145,3.074,150,3.528,151,2.289,154,5.624,155,4.1,158,1.268,159,1.058,160,1.058,162,1.268,163,1.777,171,2.559,179,1.535,180,2.826,181,3.684,182,2.289,183,2.314,184,2.088,185,1.793,186,2.088,187,3.209,188,2.088,189,2.066,190,2.088,196,3.061,197,2.559,198,1.793,199,2.314,201,3.559,203,2.088,204,2.088,205,3.429,207,1.679,208,1.793,211,3.624,213,2.446,263,1.097,422,1.687,690,3.571,702,3.571,703,1.489,705,3.061,706,2.559,707,4.442,708,4.442,709,4.442,710,2.559,711,3.651,712,2.968,713,2.968,714,2.968,715,4.351,716,2.968,717,2.968,718,4.351,719,2.968,720,3.113,721,2.559,722,2.088,723,3.356,724,2.968,725,2.559,726,2.559,727,2.968,728,2.968,729,2.968]],["title/classes/UserIdentity.html",[0,0.04,730,2.151]],["body/classes/UserIdentity.html",[0,0.057,2,1.283,3,0.235,4,0.235,5,0.169,11,0.305,12,1.623,14,0.56,15,0.017,17,1.694,19,0.642,21,0.383,22,4.444,23,1.471,26,2.358,27,0.311,29,0.012,30,0.012,41,1.875,51,1.173,150,2.936,189,1.979,198,2.519,381,4.255,385,3.215,404,3.302,455,3.215,692,4.756,700,5.33,730,3.497,731,4.815,732,3.215,733,4.629,734,5.075,735,4.629,736,4.168,737,4.168,738,4.168,739,4.168,740,4.168,741,4.168,742,5.516,743,5.516,744,2.932,745,3.594,746,3.594,747,3.594]],["title/modules/UserModule.html",[60,1.406,76,2.298]],["body/modules/UserModule.html",[0,0.046,3,0.248,4,0.248,5,0.178,15,0.017,21,0.431,27,0.248,29,0.013,30,0.013,60,2.347,62,2.089,63,1.981,64,2.34,65,2.34,66,2.089,67,3.376,68,3.376,72,3.389,76,4.572,77,3.04,78,2.34,79,2.208,81,3.453,82,0.946,88,2.659,139,2.445,705,4.466,720,4.599,721,3.793,748,3.793,749,4.4,750,3.793,751,3.793,752,4.313,753,4.4,754,4.4,755,4.4]],["title/injectables/UserRepository.html",[237,0.818,752,2.298]],["body/injectables/UserRepository.html",[0,0.03,3,0.162,4,0.162,5,0.117,11,0.211,14,0.508,15,0.018,19,0.582,21,0.41,27,0.162,29,0.009,30,0.009,34,0.677,41,1.302,49,3.067,50,1.231,51,1.197,53,1.202,82,0.619,117,2.654,144,1.047,145,3.184,158,1.468,159,1.225,160,1.225,161,2.019,162,1.376,163,1.866,168,1.047,199,2.262,201,3.664,209,1.171,213,1.366,237,0.914,238,1.115,241,2.278,243,1.868,244,1.868,245,2.654,247,2.406,257,1.064,260,1.868,261,1.868,262,1.53,263,1.064,265,3.285,269,3.63,298,3.28,404,2.134,422,2.313,476,2.57,484,3.28,573,2.48,574,2.219,690,3.162,702,3.162,703,2.134,722,2.024,730,3.162,733,2.992,734,3.28,735,2.992,752,2.57,756,2.48,757,3.667,758,3.667,759,3.667,760,2.877,761,2.877,762,3.667,763,2.877,764,3.667,765,3.903,766,2.877,767,3.667,768,2.877,769,2.992,770,2.877,771,2.219,772,2.877,773,2.877,774,2.48,775,4.253,776,3.28,777,2.877,778,2.877,779,2.877]],["title/interfaces/UserRepositoryModel.html",[275,1.548,769,2.675]],["body/interfaces/UserRepositoryModel.html",[3,0.22,4,0.22,5,0.158,11,0.286,14,0.545,15,0.017,19,0.625,21,0.414,27,0.22,29,0.012,30,0.012,41,1.539,49,2.504,50,1.668,144,1.298,158,1.577,159,1.315,160,1.315,161,1.851,162,1.577,163,2.019,199,2.805,201,3.815,241,2.375,257,1.441,275,1.587,276,2.205,278,2.356,298,4.068,422,2.595,476,2.356,690,3.623,702,3.623,703,1.956,722,2.742,730,3.623,757,4.547,758,4.547,759,4.547,762,4.547,764,4.547,765,4.262,767,4.547,769,3.711,771,3.007,780,5.769,781,3.898,782,3.898,783,3.898,784,3.898]],["title/classes/UserResponse.html",[0,0.04,711,2.298]],["body/classes/UserResponse.html",[0,0.037,2,1.105,3,0.202,4,0.202,5,0.145,11,0.263,12,1.467,14,0.587,15,0.017,16,1.174,17,1.732,19,0.656,21,0.354,23,1.267,27,0.281,29,0.011,30,0.011,31,3.677,33,1.536,34,1.792,41,1.811,42,3.5,49,3.195,51,1.403,52,2.332,53,0.772,160,1.271,168,1.523,179,1.267,257,1.328,404,3.105,422,1.933,463,2.17,494,3.096,497,3.096,498,3.096,501,3.096,502,3.096,703,3.105,711,3.461,731,4.854,733,4.353,735,4.353,765,3.013,776,2.77,785,3.591,786,2.526,787,3.096,788,3.096,789,3.096,790,3.096,791,3.096,792,3.096]],["title/injectables/UserService.html",[237,0.818,720,2.298]],["body/injectables/UserService.html",[0,0.029,3,0.154,4,0.154,5,0.111,11,0.2,14,0.497,15,0.018,19,0.57,21,0.414,27,0.154,29,0.009,30,0.009,31,1.547,34,0.964,49,1.299,51,1.725,52,1.776,53,1.256,82,0.588,144,1.008,145,3.151,150,3.391,158,1.438,159,1.199,160,1.199,162,1.342,163,1.839,168,1.008,179,1.446,189,1.299,198,1.653,199,1.455,201,3.554,209,1.667,210,3.532,213,2.91,215,3.529,216,2.63,220,2.317,237,0.881,238,1.061,241,1.232,302,2.11,303,1.776,305,2.11,355,3.704,422,2.713,690,3.084,702,3.084,703,2.056,707,3.532,708,4.234,709,3.532,710,3.532,711,1.653,720,2.475,722,2.882,725,2.359,730,3.084,744,1.925,752,3.295,771,3.16,774,4.701,786,1.925,793,2.359,794,4.097,795,2.736,796,4.911,797,2.736,798,4.097,799,2.736,800,2.736,801,2.736,802,2.736,803,4.097,804,2.736,805,2.736,806,2.736,807,2.11,808,2.736,809,2.736,810,4.911,811,2.736,812,4.097,813,4.097,814,4.097,815,2.736,816,4.097,817,2.736,818,4.097,819,3.532,820,2.736,821,2.736,822,2.736]],["title/changelog.html",[823,2.451,824,2.451,825,2.451]],["body/changelog.html",[5,0.121,8,1.779,15,0.01,29,0.01,30,0.01,49,1.418,102,2.838,122,5.221,161,2.075,183,1.588,189,1.418,243,3.357,265,3.695,266,1.418,361,1.779,411,3.075,422,1.695,451,1.588,553,2.303,604,3.075,703,1.498,819,2.574,825,2.303,826,2.985,827,2.985,828,2.574,829,2.985,830,2.574,831,6.536,832,7.437,833,2.985,834,2.985,835,5.17,836,4.906,837,3.768,838,5.895,839,2.574,840,2.985,841,2.985,842,2.985,843,2.985,844,2.574,845,2.985,846,2.985,847,2.985,848,2.985,849,2.985,850,2.574,851,5.778,852,2.985,853,2.985,854,2.985,855,2.985,856,6.536,857,2.985,858,5.17,859,5.17,860,6.702,861,2.985,862,2.985,863,4.37,864,2.985,865,2.985,866,2.985,867,2.985,868,2.985,869,2.985,870,2.985,871,2.985,872,2.985,873,2.985,874,2.985,875,2.985,876,2.985,877,2.985,878,2.985,879,2.985,880,2.985,881,2.985,882,2.985,883,2.985,884,6.056,885,5.17,886,2.985,887,2.985,888,5.69,889,2.985,890,4.37,891,2.985,892,2.985,893,2.574,894,2.985,895,2.985,896,2.985,897,2.985,898,3.768,899,4.37,900,2.985,901,2.574,902,2.985,903,6.056,904,2.985,905,2.985,906,2.574,907,2.985,908,2.574,909,2.574,910,2.985,911,2.985,912,2.985,913,2.985,914,4.37,915,2.985,916,2.985,917,2.985,918,2.985,919,2.985,920,2.985,921,2.303,922,2.303,923,2.985,924,2.985,925,2.985,926,3.768,927,4.37,928,2.985,929,2.985,930,2.985,931,4.37,932,4.37,933,3.768,934,2.985,935,2.985,936,2.985,937,2.985,938,2.985,939,4.457,940,2.574,941,2.574,942,2.985,943,2.985,944,2.574,945,2.574]],["title/coverage.html",[946,4.471]],["body/coverage.html",[0,0.072,1,1.107,5,0.079,6,2.715,7,1.687,8,1.614,9,2.264,10,2.955,14,0.478,15,0.017,29,0.007,30,0.007,31,1.107,32,2.434,33,2.966,49,0.929,52,1.27,66,0.929,89,0.881,140,2.247,141,1.376,142,1.687,143,1.687,150,0.929,156,1.107,170,1.107,175,1.182,180,1.27,183,1.041,185,1.182,187,1.107,189,0.929,191,1.107,192,2.22,194,1.509,196,1.376,200,0.881,216,0.881,219,1.99,232,1.182,237,1.409,239,2.434,240,1.687,245,0.929,256,1.182,258,1.376,275,2.172,277,1.687,278,3.016,282,2.22,288,1.27,295,1.687,310,1.509,311,1.687,312,1.687,355,1.182,359,1.27,360,2.434,361,1.284,362,2.434,364,1.376,387,1.687,388,1.687,408,1.27,409,2.434,412,1.376,415,1.376,416,1.687,417,2.434,418,1.687,422,1.224,433,1.376,434,1.687,439,1.27,444,0.982,446,1.182,449,1.376,451,1.678,456,1.27,457,3.241,459,1.376,467,1.182,471,1.687,480,1.107,481,1.376,487,1.687,503,1.107,508,1.27,515,6.012,520,1.687,534,1.687,540,1.376,541,1.687,544,1.27,547,1.107,549,1.182,557,2.79,561,1.182,565,1.687,569,1.182,570,1.376,578,1.687,581,1.376,589,1.687,600,1.376,601,2.817,602,1.687,603,1.687,610,1.182,623,1.182,628,1.687,637,1.182,638,1.376,655,1.687,658,2.434,659,1.376,662,1.687,689,1.687,690,1.107,691,2.434,702,1.107,703,0.982,705,1.376,706,1.687,711,1.182,720,1.182,723,1.509,730,1.107,731,3.201,732,2.434,744,1.376,752,1.182,756,1.687,765,1.182,769,1.376,780,1.687,786,1.376,793,1.687,946,1.687,947,1.509,948,1.956,949,1.956,950,6.191,951,5.84,952,1.956,953,6.648,954,7.296,955,1.687,956,1.687,957,5.336,958,4.55,959,1.687,960,5.613,961,4.116,962,1.687,963,1.687,964,1.687,965,1.687,966,1.687,967,1.687,968,5.84,969,1.687,970,1.687,971,1.687,972,1.687,973,1.687,974,1.687,975,1.687,976,4.991,977,5.336,978,1.687,979,1.687,980,1.687,981,1.687,982,1.687,983,1.687,984,1.687,985,2.721,986,1.687,987,1.687,988,1.956,989,1.687]],["title/dependencies.html",[63,2.059,990,2.739]],["body/dependencies.html",[0,0.056,15,0.018,23,1.401,26,2.246,29,0.012,30,0.012,50,1.698,63,1.788,82,0.854,85,3.423,95,3.062,101,3.062,102,3.918,103,3.467,106,3.062,109,3.423,247,2.246,328,3.062,372,3.423,394,3.423,495,4.604,906,3.423,991,3.97,992,7.298,993,3.97,994,3.97,995,3.97,996,3.97,997,3.97,998,5.34,999,4.119,1000,3.97,1001,3.97,1002,3.97,1003,3.97,1004,6.453,1005,3.97,1006,3.97,1007,3.423,1008,3.97,1009,3.97,1010,3.97,1011,3.97,1012,3.97,1013,3.97,1014,3.97,1015,5.34,1016,3.97,1017,3.97,1018,3.97,1019,3.97,1020,5.34,1021,3.97,1022,3.97,1023,3.97,1024,3.97,1025,3.97,1026,3.97,1027,3.97,1028,3.97,1029,3.97,1030,3.97,1031,3.97,1032,3.97,1033,3.97,1034,3.97,1035,3.97,1036,3.97,1037,3.97,1038,3.97,1039,3.97,1040,3.97,1041,3.97,1042,3.97,1043,3.97,1044,3.97,1045,3.97]],["title/miscellaneous/functions.html",[1046,1.92,1047,3.942]],["body/miscellaneous/functions.html",[11,0.34,15,0.017,29,0.013,30,0.013,66,3.092,158,1.782,159,1.487,160,1.487,180,3.843,183,3.147,194,4.564,196,4.163,449,4.163,723,4.564,959,4.004,961,5.463,962,5.102,963,5.102,965,5.102,966,5.102,967,5.102,987,4.004,1046,2.807,1047,4.004,1048,4.644,1049,4.644,1050,6.106,1051,4.644,1052,7.241,1053,4.644,1054,4.644,1055,4.644,1056,4.644,1057,4.644]],["title/index.html",[11,0.233,823,2.451,824,2.451]],["body/index.html",[5,0.209,8,0.537,14,0.112,15,0.015,16,0.31,19,0.129,29,0.005,30,0.005,63,0.594,89,1.346,102,3.598,159,0.614,183,1.207,189,1.419,207,2.264,216,1.346,219,0.662,220,0.746,222,1.017,223,1.017,241,1.802,242,0.746,247,2.474,266,1.078,270,1.372,319,1.137,361,1.217,404,0.662,422,2.26,423,4.629,452,1.957,492,2.599,552,1.957,553,2.305,575,0.928,726,1.137,807,1.017,825,1.751,828,3.062,836,1.137,837,4.777,838,2.577,839,1.957,844,1.137,851,2.577,893,1.137,898,3.451,901,1.137,908,1.137,909,1.137,921,3.816,922,4.94,926,1.137,933,1.137,939,1.957,940,1.957,941,1.137,944,1.957,945,3.062,947,2.739,989,1.957,999,1.017,1058,3.062,1059,1.319,1060,2.27,1061,1.319,1062,1.319,1063,3.551,1064,2.27,1065,1.319,1066,1.319,1067,2.989,1068,2.27,1069,4.003,1070,1.319,1071,1.319,1072,2.27,1073,2.27,1074,2.27,1075,4.374,1076,2.27,1077,2.989,1078,2.27,1079,1.017,1080,2.27,1081,1.319,1082,2.27,1083,2.27,1084,1.319,1085,1.319,1086,1.319,1087,1.319,1088,1.319,1089,1.319,1090,3.551,1091,1.319,1092,2.989,1093,1.319,1094,1.319,1095,4.374,1096,1.319,1097,1.319,1098,1.319,1099,1.319,1100,1.319,1101,4.003,1102,1.319,1103,1.319,1104,1.319,1105,2.989,1106,1.319,1107,4.003,1108,1.319,1109,1.319,1110,1.319,1111,2.27,1112,2.27,1113,1.319,1114,1.319,1115,1.319,1116,1.319,1117,2.27,1118,2.27,1119,1.319,1120,1.319,1121,1.319,1122,1.319,1123,1.319,1124,1.319,1125,1.319,1126,1.319,1127,1.319,1128,2.27,1129,2.27,1130,1.319,1131,1.319,1132,1.319,1133,4.684,1134,4.947,1135,1.319,1136,1.319,1137,1.319,1138,1.319,1139,3.551,1140,1.319,1141,1.319,1142,1.319,1143,3.551,1144,2.989,1145,1.319,1146,1.319,1147,1.319,1148,1.319,1149,1.319,1150,2.27,1151,3.551,1152,1.319,1153,2.989,1154,1.319,1155,1.319,1156,4.003,1157,1.319,1158,1.319,1159,4.265,1160,1.319,1161,5.369,1162,1.319,1163,2.27,1164,5.693,1165,2.27,1166,2.989,1167,1.319,1168,4.947,1169,1.319,1170,1.319,1171,4.374,1172,2.27,1173,1.319,1174,4.684,1175,1.319,1176,2.27,1177,2.27,1178,6.405,1179,1.319,1180,1.319,1181,1.319,1182,2.27,1183,2.989,1184,2.27,1185,1.319,1186,1.017,1187,1.319,1188,4.684,1189,2.27,1190,1.319,1191,1.319,1192,1.319,1193,1.319,1194,1.319,1195,2.27,1196,1.319,1197,1.319,1198,1.319,1199,1.319,1200,1.319,1201,1.319,1202,1.319,1203,4.374,1204,2.989,1205,1.319,1206,2.27,1207,2.27,1208,5.369,1209,2.989,1210,1.319,1211,1.319,1212,1.319,1213,2.27,1214,1.319,1215,1.319,1216,1.137,1217,4.003,1218,1.319,1219,1.319,1220,1.319,1221,1.319,1222,1.319,1223,1.319,1224,2.27,1225,3.551,1226,2.27,1227,1.319,1228,1.319,1229,1.319,1230,1.319,1231,1.319,1232,3.551,1233,3.062,1234,1.319,1235,1.319,1236,1.319,1237,4.003,1238,1.319,1239,2.27,1240,1.319,1241,1.319,1242,1.319,1243,2.989,1244,1.319,1245,2.27,1246,1.319,1247,1.319,1248,1.137,1249,1.319,1250,2.27,1251,1.319,1252,1.319,1253,1.319,1254,4.003,1255,1.319,1256,2.27,1257,1.319,1258,2.27,1259,1.319,1260,1.319,1261,1.319,1262,2.27,1263,1.319,1264,1.319,1265,1.319,1266,4.374,1267,2.27,1268,4.374,1269,1.319,1270,1.319,1271,1.319,1272,1.319,1273,1.319,1274,1.319,1275,1.319,1276,1.319,1277,1.319,1278,1.319,1279,1.137,1280,1.319,1281,2.27,1282,1.319,1283,1.319,1284,1.319,1285,1.319,1286,1.319,1287,1.137,1288,1.319,1289,1.319,1290,1.319,1291,1.319,1292,3.551,1293,1.319,1294,3.551,1295,1.319,1296,1.319,1297,1.319,1298,1.319,1299,1.319,1300,1.319,1301,4.947,1302,2.989,1303,2.989,1304,3.551,1305,2.989,1306,4.684,1307,3.551,1308,2.27,1309,3.551,1310,1.137,1311,2.27,1312,1.319,1313,2.27,1314,1.319,1315,2.27,1316,1.319,1317,1.319,1318,1.319,1319,1.319,1320,1.319,1321,3.551,1322,1.319,1323,1.319,1324,2.27,1325,1.319,1326,1.319,1327,4.003,1328,3.551,1329,2.989,1330,2.989,1331,1.319,1332,1.319,1333,2.27,1334,2.27,1335,2.27,1336,1.319,1337,1.319,1338,1.319,1339,1.319,1340,1.319,1341,1.319,1342,2.27,1343,1.319,1344,2.989,1345,1.319,1346,4.003,1347,1.319,1348,1.319,1349,1.319,1350,3.551,1351,1.319,1352,1.319,1353,2.27,1354,1.319,1355,1.319,1356,4.003,1357,2.27,1358,1.319,1359,1.319,1360,1.319,1361,1.319,1362,1.319,1363,1.319,1364,1.319,1365,1.319,1366,1.319,1367,1.319,1368,3.551,1369,1.319,1370,1.319,1371,1.319,1372,1.319,1373,1.319,1374,2.989,1375,2.27,1376,3.551,1377,1.319,1378,1.319,1379,1.319,1380,1.319,1381,1.319,1382,1.319,1383,1.319,1384,1.319,1385,1.319,1386,1.319,1387,1.319,1388,1.319,1389,1.319,1390,1.319,1391,1.319,1392,4.003,1393,1.319,1394,1.319,1395,1.319,1396,1.319,1397,1.319,1398,1.319,1399,3.551,1400,1.319,1401,1.319,1402,1.319,1403,1.319,1404,1.319,1405,1.319,1406,1.319,1407,2.103,1408,1.319,1409,1.319,1410,1.017,1411,1.319]],["title/license.html",[823,2.451,824,2.451,1407,2.235]],["body/license.html",[15,0.013,29,0.013,30,0.013,79,2.228,831,3.827,921,4.434,947,3.424,1007,3.827,1248,3.827,1287,3.827,1310,3.827,1407,3.123,1410,3.424,1412,6.375,1413,4.439,1414,4.439,1415,4.439,1416,5.748,1417,4.439,1418,4.439,1419,4.439,1420,4.439,1421,4.439,1422,4.439,1423,5.748,1424,7.459,1425,4.439,1426,4.439,1427,4.439,1428,6.375,1429,4.439,1430,5.748,1431,4.439,1432,4.439,1433,4.439,1434,4.439,1435,4.439,1436,4.439,1437,4.439,1438,4.439,1439,5.748,1440,4.439,1441,4.439,1442,4.439,1443,4.439,1444,4.439,1445,4.439,1446,5.748,1447,5.748,1448,4.439,1449,4.439,1450,4.439,1451,4.439,1452,4.439,1453,4.439,1454,4.439,1455,4.439,1456,4.439,1457,4.439,1458,4.439,1459,4.439,1460,4.439,1461,4.439,1462,4.439,1463,4.439,1464,4.439,1465,4.439,1466,4.439,1467,4.439,1468,4.439,1469,4.439,1470,4.439,1471,4.439,1472,4.439,1473,4.439,1474,4.439,1475,4.439]],["title/modules.html",[62,2.463]],["body/modules.html",[15,0.014,29,0.014,30,0.014,61,3.754,62,2.534,71,3.465,72,2.534,73,3.225,74,3.465,75,3.225,76,3.225,999,5.847,1279,6.535,1476,7.581,1477,7.581]],["title/overview.html",[1079,4]],["body/overview.html",[2,1.027,15,0.017,29,0.011,30,0.011,60,1.234,61,5.199,62,1.584,63,1.502,64,1.774,65,1.774,66,1.584,67,1.774,68,1.774,69,2.876,70,2.876,71,4.679,72,3.509,73,4.305,74,4.562,75,4.494,76,4.355,77,2.518,78,1.774,79,1.674,139,1.427,175,3.326,191,3.823,229,2.876,230,2.876,232,3.326,238,1.294,245,3.209,276,1.887,352,2.876,353,2.876,354,2.876,355,4.084,446,3.326,464,2.876,466,2.876,467,3.326,549,3.326,558,2.876,560,2.876,561,3.326,619,2.876,620,2.876,621,2.876,623,3.326,720,4.084,748,2.876,750,2.876,751,2.876,752,3.326,850,2.876,1079,2.573,1478,3.336,1479,3.336,1480,3.336,1481,3.336]],["title/properties.html",[12,1.346,990,2.739]],["body/properties.html",[12,1.751,15,0.017,29,0.015,30,0.015,207,3.365,830,5.128,1407,4.185,1410,4.588]],["title/miscellaneous/typealiases.html",[1046,1.92,1482,4.572]],["body/miscellaneous/typealiases.html",[6,2.266,8,2.533,11,0.369,14,0.53,15,0.014,29,0.014,30,0.014,89,2.802,150,2.955,256,3.761,417,4.8,480,3.52,569,3.761,601,2.526,637,3.761,765,3.761,955,4.339,956,5.366,969,4.339,970,5.366,978,4.339,979,5.366,980,4.339,981,5.366,982,4.339,983,5.366,984,4.339,1046,3.041,1483,5.033,1484,5.033,1485,7.253,1486,5.033,1487,5.033,1488,5.033,1489,5.033,1490,5.033,1491,5.033]],["title/miscellaneous/variables.html",[1046,1.92,1186,3.527]],["body/miscellaneous/variables.html",[6,0.993,9,2.282,11,0.162,13,2.443,15,0.018,29,0.008,30,0.008,31,1.248,32,1.702,33,2.985,35,1.702,36,1.702,37,1.702,38,1.702,39,1.702,40,1.702,41,0.568,49,2.313,51,1.873,52,2.255,53,1.381,54,1.902,55,1.902,56,1.902,57,1.902,58,1.902,59,1.902,117,1.048,150,1.649,153,2.671,156,1.248,159,0.713,168,1.304,185,2.098,200,1.564,212,1.333,216,1.564,219,1.743,225,1.552,256,1.333,265,2.255,266,1.048,270,2.098,282,1.552,283,2.678,284,3.312,285,2.678,286,2.678,288,2.788,289,1.902,290,1.902,291,2.678,292,1.902,293,3.426,294,2.994,329,1.902,332,1.902,348,1.902,361,0.898,363,2.255,374,1.552,404,1.743,408,1.433,409,1.702,410,1.902,411,2.443,412,3.021,413,1.902,414,1.902,422,0.855,444,1.107,455,1.702,456,1.433,457,2.255,458,1.902,459,3.021,460,1.902,461,1.902,462,2.994,480,1.248,491,2.994,492,1.433,493,1.702,503,1.964,508,2.255,509,1.902,510,1.902,511,1.902,512,1.902,513,1.902,514,1.902,515,1.702,516,1.902,517,1.902,518,1.902,519,1.902,547,1.248,557,1.552,569,1.333,575,2.443,580,2.994,581,2.443,582,1.902,583,1.902,584,1.902,585,1.902,586,1.902,587,1.902,588,1.902,601,1.107,610,1.333,637,1.333,658,1.702,659,2.443,660,1.902,661,1.902,703,1.107,711,1.333,730,1.248,731,2.443,732,2.678,733,2.443,734,1.702,735,2.443,744,2.443,745,1.902,746,1.902,747,1.902,765,1.333,776,1.702,786,2.443,787,1.902,788,1.902,789,1.902,790,1.902,791,1.902,792,1.902,807,1.702,922,1.702,961,1.702,964,2.994,971,1.902,972,2.994,973,1.902,974,2.994,975,2.994,985,1.902,986,2.994,1046,1.333,1050,1.902,1058,3.702,1159,1.902,1186,1.702,1216,5.894,1233,2.994,1492,2.206,1493,2.206,1494,3.472,1495,3.472,1496,2.206,1497,2.206,1498,2.206,1499,3.472,1500,2.206,1501,2.206,1502,6.836,1503,4.294,1504,2.206,1505,4.294,1506,3.472,1507,2.206,1508,2.206,1509,2.206,1510,2.206,1511,2.206,1512,2.206,1513,2.206,1514,2.206,1515,3.472,1516,2.206,1517,2.206,1518,2.206,1519,2.206,1520,2.206,1521,2.206,1522,3.472,1523,2.206,1524,2.206,1525,2.206,1526,3.472,1527,2.206,1528,2.206,1529,2.206,1530,2.206,1531,2.206,1532,2.206,1533,2.206]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":515,"title":{},"body":{"classes/OrderResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["0.0.1",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["0.14.10",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["0.3.10",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["0.3.11",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["0.3.12",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["0.3.13",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["0.3.14",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["0.3.15",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["0.3.16",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["0.3.17",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["0.3.18",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["0.3.19",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["0.3.20",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.3.21",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["0.3.22",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["0.3.23",{"_index":830,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.3.3",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["0.3.4",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["0.3.5",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["0.3.6",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["0.3.7",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["0.3.8",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["0.3.9",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":208,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["1.10.1",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["1.6.0",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["10.0.2",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":850,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["14",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1480,"title":{},"body":{"overview.html":{}}}],["18.1.1",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["18.2.9",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["2.39.1",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":926,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2024",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["2025",{"_index":831,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["22.0.5",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["22daee8",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["49",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1479,"title":{},"body":{"overview.html":{}}}],["5.18.0",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["51",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["52",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["5374a97",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["54417dc",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1481,"title":{},"body":{"overview.html":{}}}],["6.2.1",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["634f627",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1478,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["8.38.0",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["8.41.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["a[pr",{"_index":1369,"title":{},"body":{"index.html":{}}}],["above",{"_index":1445,"title":{},"body":{"license.html":{}}}],["acc",{"_index":512,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":1134,"title":{},"body":{"index.html":{}}}],["account",{"_index":1237,"title":{},"body":{"index.html":{}}}],["action",{"_index":1470,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1345,"title":{},"body":{"index.html":{}}}],["active",{"_index":218,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionService.html":{}}}],["add",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addbearerauth",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addcartitemrequest",{"_index":1,"title":{"classes/AddCartItemRequest.html":{}},"body":{"classes/AddCartItemRequest.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"coverage.html":{}}}],["added",{"_index":940,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["address",{"_index":49,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UpdateUserAddressRequest.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["address.apartment",{"_index":55,"title":{},"body":{"classes/AddressResponse.html":{},"miscellaneous/variables.html":{}}}],["address.city",{"_index":56,"title":{},"body":{"classes/AddressResponse.html":{},"miscellaneous/variables.html":{}}}],["address.country",{"_index":59,"title":{},"body":{"classes/AddressResponse.html":{},"miscellaneous/variables.html":{}}}],["address.region",{"_index":57,"title":{},"body":{"classes/AddressResponse.html":{},"miscellaneous/variables.html":{}}}],["address.street",{"_index":54,"title":{},"body":{"classes/AddressResponse.html":{},"miscellaneous/variables.html":{}}}],["address.zip",{"_index":58,"title":{},"body":{"classes/AddressResponse.html":{},"miscellaneous/variables.html":{}}}],["addressresponse",{"_index":31,"title":{"classes/AddressResponse.html":{}},"body":{"classes/AddressResponse.html":{},"controllers/UserController.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addtag('demo",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":1257,"title":{},"body":{"index.html":{}}}],["again",{"_index":1312,"title":{},"body":{"index.html":{}}}],["alias",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1483,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amount",{"_index":491,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["and/or",{"_index":1437,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1116,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["angular/build",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["apartment",{"_index":35,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":922,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":22,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"classes/UserIdentity.html":{}}}],["apiproperty()@isemail",{"_index":736,"title":{},"body":{"classes/UserIdentity.html":{}}}],["apiproperty()@isint()@min(1",{"_index":18,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/UpdateCartItemQuantityRequest.html":{}}}],["apiproperty()@isstring()@minlength(1",{"_index":692,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{},"classes/UserIdentity.html":{}}}],["apiproperty()@isuuid",{"_index":739,"title":{},"body":{"classes/UserIdentity.html":{}}}],["apiproperty({required",{"_index":697,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{}}}],["apiresponseproperty",{"_index":42,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UserResponse.html":{}}}],["apiresponseproperty({enum",{"_index":500,"title":{},"body":{"classes/OrderResponse.html":{}}}],["apiresponseproperty({type",{"_index":463,"title":{},"body":{"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UserResponse.html":{}}}],["app",{"_index":1233,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app_filter",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1063,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1251,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":61,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1353,"title":{},"body":{"index.html":{}}}],["apps/.../address",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":1048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../batch",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../cart",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../custom",{"_index":1050,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../decoded",{"_index":1484,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../enable",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../hydrated",{"_index":1485,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../image",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../instrument.ts",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../order",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../product",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../shopping",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/backend/src/app/app.module.ts",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/backend/src/app/cart",{"_index":6,"title":{},"body":{"classes/AddCartItemRequest.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/common/common.module.ts",{"_index":356,"title":{},"body":{"modules/CommonModule.html":{}}}],["apps/backend/src/app/common/decorators/auth.decorator.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/backend/src/app/common/decorators/custom",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/common/filters/catch",{"_index":311,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"coverage.html":{}}}],["apps/backend/src/app/common/models/decoded",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/backend/src/app/common/models/monitored",{"_index":416,"title":{},"body":{"interfaces/MonitoredUser.html":{},"coverage.html":{}}}],["apps/backend/src/app/common/pipes/decode",{"_index":387,"title":{},"body":{"injectables/DecodeTokenPipe.html":{},"coverage.html":{}}}],["apps/backend/src/app/common/services/monitoring.service.ts",{"_index":418,"title":{},"body":{"injectables/MonitoringService.html":{},"coverage.html":{}}}],["apps/backend/src/app/common/services/monitoring.service.ts:7",{"_index":421,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["apps/backend/src/app/common/services/prisma.service.ts",{"_index":534,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["apps/backend/src/app/common/services/prisma.service.ts:6",{"_index":538,"title":{},"body":{"injectables/PrismaService.html":{}}}],["apps/backend/src/app/common/util/batch",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/common/util/enable",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/order/controllers/order.controller.ts",{"_index":434,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["apps/backend/src/app/order/controllers/order.controller.ts:17",{"_index":441,"title":{},"body":{"controllers/OrderController.html":{}}}],["apps/backend/src/app/order/controllers/order.controller.ts:24",{"_index":445,"title":{},"body":{"controllers/OrderController.html":{}}}],["apps/backend/src/app/order/dtos/create",{"_index":360,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{}}}],["apps/backend/src/app/order/dtos/order",{"_index":457,"title":{},"body":{"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/order/entities/hydrated",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/backend/src/app/order/models/order",{"_index":487,"title":{},"body":{"interfaces/OrderRepositoryModel.html":{},"coverage.html":{}}}],["apps/backend/src/app/order/order.module.ts",{"_index":468,"title":{},"body":{"modules/OrderModule.html":{}}}],["apps/backend/src/app/order/services/order.repository.ts",{"_index":471,"title":{},"body":{"injectables/OrderRepository.html":{},"coverage.html":{}}}],["apps/backend/src/app/order/services/order.repository.ts:10",{"_index":477,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["apps/backend/src/app/order/services/order.repository.ts:24",{"_index":479,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["apps/backend/src/app/order/services/order.repository.ts:7",{"_index":474,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["apps/backend/src/app/order/services/order.service.ts",{"_index":520,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["apps/backend/src/app/order/services/order.service.ts:11",{"_index":525,"title":{},"body":{"injectables/OrderService.html":{}}}],["apps/backend/src/app/order/services/order.service.ts:21",{"_index":527,"title":{},"body":{"injectables/OrderService.html":{}}}],["apps/backend/src/app/order/services/order.service.ts:8",{"_index":523,"title":{},"body":{"injectables/OrderService.html":{}}}],["apps/backend/src/app/product/controllers/product.controller.ts",{"_index":541,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["apps/backend/src/app/product/controllers/product.controller.ts:14",{"_index":545,"title":{},"body":{"controllers/ProductController.html":{}}}],["apps/backend/src/app/product/controllers/product.controller.ts:19",{"_index":548,"title":{},"body":{"controllers/ProductController.html":{}}}],["apps/backend/src/app/product/dtos/image",{"_index":409,"title":{},"body":{"classes/ImageResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/product/dtos/product",{"_index":557,"title":{},"body":{"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/product/entities/hydrated",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/backend/src/app/product/models/product",{"_index":578,"title":{},"body":{"interfaces/ProductRepositoryModel.html":{},"coverage.html":{}}}],["apps/backend/src/app/product/product.module.ts",{"_index":562,"title":{},"body":{"modules/ProductModule.html":{}}}],["apps/backend/src/app/product/services/product.repository.ts",{"_index":565,"title":{},"body":{"injectables/ProductRepository.html":{},"coverage.html":{}}}],["apps/backend/src/app/product/services/product.repository.ts:10",{"_index":567,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["apps/backend/src/app/product/services/product.repository.ts:26",{"_index":568,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["apps/backend/src/app/product/services/product.repository.ts:7",{"_index":566,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["apps/backend/src/app/product/services/product.service.ts",{"_index":589,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["apps/backend/src/app/product/services/product.service.ts:11",{"_index":593,"title":{},"body":{"injectables/ProductService.html":{}}}],["apps/backend/src/app/product/services/product.service.ts:17",{"_index":594,"title":{},"body":{"injectables/ProductService.html":{}}}],["apps/backend/src/app/product/services/product.service.ts:8",{"_index":591,"title":{},"body":{"injectables/ProductService.html":{}}}],["apps/backend/src/app/shopping",{"_index":601,"title":{},"body":{"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/user/controllers/user.controller.ts",{"_index":706,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/backend/src/app/user/controllers/user.controller.ts:21",{"_index":712,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/backend/src/app/user/controllers/user.controller.ts:28",{"_index":716,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/backend/src/app/user/controllers/user.controller.ts:36",{"_index":719,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/backend/src/app/user/dtos/address",{"_index":32,"title":{},"body":{"classes/AddressResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/user/dtos/update",{"_index":691,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"coverage.html":{}}}],["apps/backend/src/app/user/dtos/user",{"_index":731,"title":{},"body":{"classes/UserIdentity.html":{},"classes/UserResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/app/user/entities/hydrated",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/backend/src/app/user/models/user",{"_index":780,"title":{},"body":{"interfaces/UserRepositoryModel.html":{},"coverage.html":{}}}],["apps/backend/src/app/user/services/user.repository.ts",{"_index":756,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["apps/backend/src/app/user/services/user.repository.ts:12",{"_index":760,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/backend/src/app/user/services/user.repository.ts:15",{"_index":763,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/backend/src/app/user/services/user.repository.ts:27",{"_index":761,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/backend/src/app/user/services/user.repository.ts:42",{"_index":766,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/backend/src/app/user/services/user.repository.ts:63",{"_index":768,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/backend/src/app/user/services/user.service.ts",{"_index":793,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["apps/backend/src/app/user/services/user.service.ts:12",{"_index":797,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/src/app/user/services/user.service.ts:18",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/src/app/user/services/user.service.ts:29",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/src/app/user/services/user.service.ts:40",{"_index":802,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/src/app/user/services/user.service.ts:57",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["apps/backend/src/app/user/user.module.ts",{"_index":753,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/backend/src/instrument.ts",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/backend/src/main.ts",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["architecture",{"_index":1082,"title":{},"body":{"index.html":{}}}],["argumentmetadata",{"_index":395,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["argumentshost",{"_index":320,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["arising",{"_index":1474,"title":{},"body":{"license.html":{}}}],["asp.net",{"_index":1073,"title":{},"body":{"index.html":{}}}],["assets",{"_index":1336,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1425,"title":{},"body":{"license.html":{}}}],["async",{"_index":145,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["attached",{"_index":1278,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":1276,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["auth",{"_index":183,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["auth(options",{"_index":1051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authentication",{"_index":1092,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["authheader",{"_index":397,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["authheader.split",{"_index":400,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["authorization",{"_index":1093,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1463,"title":{},"body":{"license.html":{}}}],["authserverurl",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["automatic",{"_index":1150,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":1322,"title":{},"body":{"index.html":{}}}],["available",{"_index":1247,"title":{},"body":{"index.html":{}}}],["await",{"_index":213,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["aws",{"_index":1168,"title":{},"body":{"index.html":{}}}],["axios",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1373,"title":{},"body":{"index.html":{}}}],["b[test",{"_index":1370,"title":{},"body":{"index.html":{}}}],["backend",{"_index":851,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["badrequestexception",{"_index":302,"title":{},"body":{"injectables/CartItemService.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserService.html":{}}}],["badrequestexception('failed",{"_index":305,"title":{},"body":{"injectables/CartItemService.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserService.html":{}}}],["batchconvert",{"_index":503,"title":{},"body":{"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"classes/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["batchconvert(await",{"_index":532,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["batchconvert(order.order_items",{"_index":509,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["batchconvert(product.images",{"_index":584,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["batchconvert(shoppingsession.cart_items",{"_index":660,"title":{},"body":{"classes/ShoppingSessionResponse.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":401,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["beareronly",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["between",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":154,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":1250,"title":{},"body":{"index.html":{}}}],["branch",{"_index":1309,"title":{},"body":{"index.html":{}}}],["broken",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1279,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":999,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bucket",{"_index":1335,"title":{},"body":{"index.html":{}}}],["bug",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1159,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["builds",{"_index":1311,"title":{},"body":{"index.html":{}}}],["built",{"_index":1064,"title":{},"body":{"index.html":{}}}],["c",{"_index":1413,"title":{},"body":{"license.html":{}}}],["c[merge",{"_index":1375,"title":{},"body":{"index.html":{}}}],["cart",{"_index":8,"title":{},"body":{"classes/AddCartItemRequest.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cart_items",{"_index":646,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["cartitem",{"_index":255,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{}}}],["cartitemcontroller",{"_index":141,"title":{"controllers/CartItemController.html":{}},"body":{"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"coverage.html":{}}}],["cartitemmodule",{"_index":71,"title":{"modules/CartItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules.html":{},"overview.html":{}}}],["cartitemrepository",{"_index":232,"title":{"injectables/CartItemRepository.html":{}},"body":{"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"coverage.html":{},"overview.html":{}}}],["cartitemrepositorymodel",{"_index":258,"title":{"interfaces/CartItemRepositoryModel.html":{}},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"coverage.html":{}}}],["cartitemresponse",{"_index":156,"title":{"classes/CartItemResponse.html":{}},"body":{"controllers/CartItemController.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cartitemservice",{"_index":175,"title":{"injectables/CartItemService.html":{}},"body":{"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemService.html":{},"coverage.html":{},"overview.html":{}}}],["catalog",{"_index":1096,"title":{},"body":{"index.html":{}}}],["catch",{"_index":314,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["catch(exception",{"_index":318,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["catcheverythingfilter",{"_index":310,"title":{"classes/CatchEverythingFilter.html":{}},"body":{"classes/CatchEverythingFilter.html":{},"coverage.html":{}}}],["categories",{"_index":575,"title":{},"body":{"injectables/ProductRepository.html":{},"classes/ProductResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":576,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["category.category.name",{"_index":583,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":1324,"title":{},"body":{"index.html":{}}}],["cdn",{"_index":1303,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":825,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1420,"title":{},"body":{"license.html":{}}}],["checkout",{"_index":604,"title":{},"body":{"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"changelog.html":{}}}],["checkout(@customheaders('authorization",{"_index":617,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["checkout(decodedtoken",{"_index":606,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["checkout(dto",{"_index":630,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["checkout(keycloakid",{"_index":667,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["checks",{"_index":1308,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1192,"title":{},"body":{"index.html":{}}}],["christian",{"_index":1414,"title":{},"body":{"license.html":{}}}],["ci",{"_index":944,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ci/cd",{"_index":1165,"title":{},"body":{"index.html":{}}}],["city",{"_index":36,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":1466,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/CatchEverythingFilter.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"classes/UserIdentity.html":{},"classes/UserResponse.html":{}},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/CatchEverythingFilter.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"classes/UserIdentity.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["click",{"_index":1213,"title":{},"body":{"index.html":{}}}],["client",{"_index":1111,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["clone",{"_index":1177,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":941,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloudflare",{"_index":1301,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_cartitemmodule",{"_index":229,"title":{},"body":{"modules/CartItemModule.html":{},"overview.html":{}}}],["cluster_cartitemmodule_imports",{"_index":231,"title":{},"body":{"modules/CartItemModule.html":{}}}],["cluster_cartitemmodule_providers",{"_index":230,"title":{},"body":{"modules/CartItemModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":352,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":353,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":354,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":464,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":465,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":466,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":558,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":559,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":560,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_shoppingsessionmodule",{"_index":619,"title":{},"body":{"modules/ShoppingSessionModule.html":{},"overview.html":{}}}],["cluster_shoppingsessionmodule_exports",{"_index":621,"title":{},"body":{"modules/ShoppingSessionModule.html":{},"overview.html":{}}}],["cluster_shoppingsessionmodule_imports",{"_index":622,"title":{},"body":{"modules/ShoppingSessionModule.html":{}}}],["cluster_shoppingsessionmodule_providers",{"_index":620,"title":{},"body":{"modules/ShoppingSessionModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":748,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":750,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":749,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":751,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1153,"title":{},"body":{"index.html":{}}}],["commerce",{"_index":1062,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1143,"title":{},"body":{"index.html":{}}}],["commitlint/commitizen",{"_index":1141,"title":{},"body":{"index.html":{}}}],["common",{"_index":1108,"title":{},"body":{"index.html":{}}}],["common/common.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{}}}],["common/decorators/auth.decorator",{"_index":184,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["common/decorators/custom",{"_index":181,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["common/models/decoded",{"_index":198,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"injectables/UserService.html":{}}}],["common/pipes/decode",{"_index":188,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["common/services/monitoring.service",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["common/services/prisma.service",{"_index":261,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{}}}],["common/util/batch",{"_index":504,"title":{},"body":{"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"classes/ShoppingSessionResponse.html":{}}}],["commonmodule",{"_index":72,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["complete",{"_index":1080,"title":{},"body":{"index.html":{}}}],["component",{"_index":1083,"title":{},"body":{"index.html":{}}}],["components",{"_index":1105,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1218,"title":{},"body":{"index.html":{}}}],["comprehensive",{"_index":1297,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1444,"title":{},"body":{"license.html":{}}}],["config",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1189,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":1114,"title":{},"body":{"index.html":{}}}],["configured",{"_index":1347,"title":{},"body":{"index.html":{}}}],["configuring",{"_index":1194,"title":{},"body":{"index.html":{}}}],["confirmation",{"_index":1269,"title":{},"body":{"index.html":{}}}],["connect",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/CartItemRepository.html":{},"controllers/ProductController.html":{},"injectables/ShoppingSessionRepository.html":{},"dependencies.html":{}}}],["connected",{"_index":1253,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1287,"title":{},"body":{"index.html":{},"license.html":{}}}],["console",{"_index":1258,"title":{},"body":{"index.html":{}}}],["const",{"_index":51,"title":{},"body":{"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"injectables/MonitoringService.html":{},"classes/OrderItemResponse.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":209,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["constructor(cartitemrepository",{"_index":296,"title":{},"body":{"injectables/CartItemService.html":{}}}],["constructor(httpadapterhost",{"_index":315,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["constructor(jwtservice",{"_index":390,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["constructor(monitoringservice",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(ordersrepository",{"_index":522,"title":{},"body":{"injectables/OrderService.html":{}}}],["constructor(prisma",{"_index":244,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{}}}],["constructor(private",{"_index":263,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{}}}],["constructor(productsrepository",{"_index":590,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(shoppingsessionsrepository",{"_index":664,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["containerization",{"_index":1162,"title":{},"body":{"index.html":{}}}],["containers",{"_index":1209,"title":{},"body":{"index.html":{}}}],["continuous",{"_index":1166,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1471,"title":{},"body":{"license.html":{}}}],["controller",{"_index":140,"title":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controllerkey",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers/cart",{"_index":234,"title":{},"body":{"modules/CartItemModule.html":{}}}],["controllers/order.controller",{"_index":470,"title":{},"body":{"modules/OrderModule.html":{}}}],["controllers/product.controller",{"_index":564,"title":{},"body":{"modules/ProductModule.html":{}}}],["controllers/shopping",{"_index":625,"title":{},"body":{"modules/ShoppingSessionModule.html":{}}}],["controllers/user.controller",{"_index":754,"title":{},"body":{"modules/UserModule.html":{}}}],["convert",{"_index":505,"title":{},"body":{"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"classes/ShoppingSessionResponse.html":{}}}],["convert.ts",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["copies",{"_index":1439,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1423,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1412,"title":{},"body":{"license.html":{}}}],["core",{"_index":1074,"title":{},"body":{"index.html":{}}}],["country",{"_index":37,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":946,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":1190,"title":{},"body":{"index.html":{}}}],["create",{"_index":241,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CreateOrderDto.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{},"index.html":{}}}],["create(dto",{"_index":298,"title":{},"body":{"injectables/CartItemService.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["create(email",{"_index":656,"title":{},"body":{"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{}}}],["create(item",{"_index":248,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{}}}],["create(keycloakid",{"_index":632,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["createcartitem",{"_index":146,"title":{},"body":{"controllers/CartItemController.html":{}}}],["createcartitem(dto",{"_index":149,"title":{},"body":{"controllers/CartItemController.html":{}}}],["created",{"_index":492,"title":{},"body":{"classes/OrderResponse.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["created_at",{"_index":644,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["createmany",{"_index":652,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["createorder",{"_index":676,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["createorderdto",{"_index":359,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{}}}],["createorderitemdto",{"_index":364,"title":{"classes/CreateOrderItemDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{}}}],["createparamdecorator((data",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":1320,"title":{},"body":{"index.html":{}}}],["createuser",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(identity",{"_index":798,"title":{},"body":{"injectables/UserService.html":{}}}],["creation",{"_index":1204,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":1266,"title":{},"body":{"index.html":{}}}],["css",{"_index":1127,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":332,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curr",{"_index":511,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["curr.quantity",{"_index":513,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":609,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["current/cart",{"_index":152,"title":{},"body":{"controllers/CartItemController.html":{}}}],["custom",{"_index":1329,"title":{},"body":{"index.html":{}}}],["customdelete",{"_index":194,"title":{},"body":{"controllers/CartItemController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["customdelete(options",{"_index":1053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["customdelete({path",{"_index":165,"title":{},"body":{"controllers/CartItemController.html":{}}}],["customget",{"_index":449,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["customget(options",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["customget({path",{"_index":443,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["customget({res",{"_index":438,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["customheaders",{"_index":185,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customheaders('authorization",{"_index":211,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["custompatch",{"_index":196,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["custompatch(options",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custompatch({path",{"_index":171,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/UserController.html":{}}}],["custompost",{"_index":180,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["custompost(options",{"_index":1056,"title":{},"body":{"miscellaneous/functions.html":{}}}],["custompost({path",{"_index":151,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["customput",{"_index":723,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["customput(options",{"_index":1057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["customput({path",{"_index":714,"title":{},"body":{"controllers/UserController.html":{}}}],["d",{"_index":1378,"title":{},"body":{"index.html":{}}}],["d[test",{"_index":1377,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1467,"title":{},"body":{"license.html":{}}}],["data",{"_index":265,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1133,"title":{},"body":{"index.html":{}}}],["date",{"_index":495,"title":{},"body":{"classes/OrderResponse.html":{},"dependencies.html":{}}}],["date().toisostring",{"_index":344,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["date(order.created_at",{"_index":519,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":1288,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1427,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1475,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decodedtoken",{"_index":150,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/DecodeTokenPipe.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["decodedtoken.email",{"_index":747,"title":{},"body":{"classes/UserIdentity.html":{},"miscellaneous/variables.html":{}}}],["decodedtoken.family_name",{"_index":746,"title":{},"body":{"classes/UserIdentity.html":{},"miscellaneous/variables.html":{}}}],["decodedtoken.given_name",{"_index":745,"title":{},"body":{"classes/UserIdentity.html":{},"miscellaneous/variables.html":{}}}],["decodedtoken.sub",{"_index":455,"title":{},"body":{"controllers/OrderController.html":{},"classes/UserIdentity.html":{},"miscellaneous/variables.html":{}}}],["decodetokenpipe",{"_index":187,"title":{"injectables/DecodeTokenPipe.html":{}},"body":{"controllers/CartItemController.html":{},"injectables/DecodeTokenPipe.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"classes/CartItemResponse.html":{},"classes/CatchEverythingFilter.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/ImageResponse.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"controllers/ShoppingSessionController.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"classes/UserResponse.html":{}}}],["deep",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"index.html":{}}}],["defintion",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["delete.decorator",{"_index":195,"title":{},"body":{"controllers/CartItemController.html":{}}}],["delete.decorator.ts",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deleted",{"_index":573,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/UserRepository.html":{}}}],["demo",{"_index":807,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":63,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":1331,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1299,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":898,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["desc",{"_index":645,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["description",{"_index":580,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["deselect",{"_index":1270,"title":{},"body":{"index.html":{}}}],["detail",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":1411,"title":{},"body":{"index.html":{}}}],["determined",{"_index":1318,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1140,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1155,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1365,"title":{},"body":{"index.html":{}}}],["displaying",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1435,"title":{},"body":{"license.html":{}}}],["dns",{"_index":1302,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1161,"title":{},"body":{"index.html":{}}}],["document",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":947,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentbuilder",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1358,"title":{},"body":{"index.html":{}}}],["dotnet",{"_index":1078,"title":{},"body":{"index.html":{}}}],["dto",{"_index":161,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CreateOrderDto.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"changelog.html":{}}}],["dto.items",{"_index":653,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["dto.quantity",{"_index":273,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["dto.shoppingsessionid",{"_index":654,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["dto.ts",{"_index":362,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":382,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["dto.ts:11",{"_index":370,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto.ts:13",{"_index":383,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["dto.ts:14",{"_index":367,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto.ts:16",{"_index":379,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["dto.ts:6",{"_index":380,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["dto.ts:8",{"_index":369,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["dto.userid",{"_index":651,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["dtos",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["dtos/add",{"_index":202,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{}}}],["dtos/address",{"_index":725,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dtos/cart",{"_index":178,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{}}}],["dtos/order",{"_index":448,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["dtos/product",{"_index":551,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dtos/shopping",{"_index":613,"title":{},"body":{"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionService.html":{}}}],["dtos/update",{"_index":199,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{}}}],["dtos/user",{"_index":722,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{}}}],["dynamic",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1202,"title":{},"body":{"index.html":{}}}],["e",{"_index":1061,"title":{},"body":{"index.html":{}}}],["e[ci",{"_index":1380,"title":{},"body":{"index.html":{}}}],["e[trigger",{"_index":1379,"title":{},"body":{"index.html":{}}}],["each",{"_index":373,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ec2",{"_index":1327,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1187,"title":{},"body":{"index.html":{}}}],["educational",{"_index":1065,"title":{},"body":{"index.html":{}}}],["email",{"_index":404,"title":{},"body":{"injectables/DecodeTokenPipe.html":{},"interfaces/OrderRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["empty",{"_index":1277,"title":{},"body":{"index.html":{}}}],["enable",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["enableswagger",{"_index":975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1376,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["ensure",{"_index":1249,"title":{},"body":{"index.html":{}}}],["enter",{"_index":1284,"title":{},"body":{"index.html":{}}}],["entities",{"_index":933,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["entities/hydrated",{"_index":257,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{}}}],["enum",{"_index":507,"title":{},"body":{"classes/OrderResponse.html":{}}}],["enums",{"_index":506,"title":{},"body":{"classes/OrderResponse.html":{}}}],["enums.orderstatus",{"_index":499,"title":{},"body":{"classes/OrderResponse.html":{}}}],["env",{"_index":1188,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":1191,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1185,"title":{},"body":{"index.html":{}}}],["equivalent",{"_index":1246,"title":{},"body":{"index.html":{}}}],["error",{"_index":1338,"title":{},"body":{"index.html":{}}}],["error('order",{"_index":683,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["errors",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["eslint/lint",{"_index":1148,"title":{},"body":{"index.html":{}}}],["etc",{"_index":1355,"title":{},"body":{"index.html":{}}}],["event",{"_index":1462,"title":{},"body":{"license.html":{}}}],["everything.filter.ts",{"_index":312,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"coverage.html":{}}}],["everything.filter.ts:10",{"_index":322,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["everything.filter.ts:6",{"_index":317,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["example",{"_index":1178,"title":{},"body":{"index.html":{}}}],["exception",{"_index":323,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["exception.getstatus",{"_index":339,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["exception?.['message",{"_index":350,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["exception?.['stack",{"_index":351,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["exceptionfilter",{"_index":313,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["exceptionprefix",{"_index":336,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["executioncontext",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1007,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":535,"title":{},"body":{"injectables/PrismaService.html":{}}}],["external",{"_index":1340,"title":{},"body":{"index.html":{}}}],["f",{"_index":1382,"title":{},"body":{"index.html":{}}}],["f49f741",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["f[update",{"_index":1381,"title":{},"body":{"index.html":{}}}],["factories",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":574,"title":{},"body":{"injectables/ProductRepository.html":{},"classes/UpdateUserAddressRequest.html":{},"injectables/UserRepository.html":{}}}],["family_name",{"_index":403,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["faster",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":836,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fetching",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1426,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1262,"title":{},"body":{"index.html":{}}}],["find",{"_index":472,"title":{},"body":{"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{}}}],["find(email",{"_index":657,"title":{},"body":{"interfaces/ShoppingSessionRepositoryModel.html":{}}}],["find(id",{"_index":475,"title":{},"body":{"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"injectables/ProductService.html":{}}}],["find(keycloakid",{"_index":634,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["findbykeycloakid",{"_index":757,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["findbykeycloakid(keycloakid",{"_index":762,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["findbyuser",{"_index":521,"title":{},"body":{"injectables/OrderService.html":{}}}],["findbyuser(keycloakid",{"_index":526,"title":{},"body":{"injectables/OrderService.html":{}}}],["findcurrentsessionforuser",{"_index":663,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["findcurrentsessionforuser(keycloakid",{"_index":670,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["findmanybyuser",{"_index":473,"title":{},"body":{"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{}}}],["findmanybyuser(email",{"_index":489,"title":{},"body":{"interfaces/OrderRepositoryModel.html":{}}}],["findmanybyuser(keycloakid",{"_index":478,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["first",{"_index":1263,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":733,"title":{},"body":{"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["fitness",{"_index":1458,"title":{},"body":{"license.html":{}}}],["fix",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["flowchart",{"_index":1366,"title":{},"body":{"index.html":{}}}],["flows",{"_index":1094,"title":{},"body":{"index.html":{}}}],["fn",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fns",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["fns/utc",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["follow",{"_index":1206,"title":{},"body":{"index.html":{}}}],["following",{"_index":1248,"title":{},"body":{"index.html":{},"license.html":{}}}],["forbiddenexception",{"_index":173,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionService.html":{}}}],["forbiddenexception('no",{"_index":217,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionService.html":{}}}],["form",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["formating",{"_index":1154,"title":{},"body":{"index.html":{}}}],["found",{"_index":220,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["framework",{"_index":1118,"title":{},"body":{"index.html":{}}}],["free",{"_index":1419,"title":{},"body":{"license.html":{}}}],["fromdecodedtoken",{"_index":744,"title":{},"body":{"classes/UserIdentity.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend",{"_index":837,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["full",{"_index":1059,"title":{},"body":{"index.html":{}}}],["fullstack",{"_index":1300,"title":{},"body":{"index.html":{}}}],["function",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":1098,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1047,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1442,"title":{},"body":{"license.html":{}}}],["g[create",{"_index":1383,"title":{},"body":{"index.html":{}}}],["g[tag",{"_index":1384,"title":{},"body":{"index.html":{}}}],["gate",{"_index":1372,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1219,"title":{},"body":{"index.html":{}}}],["generated",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["generates",{"_index":1319,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1112,"title":{},"body":{"index.html":{}}}],["get.decorator",{"_index":450,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["get.decorator.ts",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getallordersofcurrentuser",{"_index":435,"title":{},"body":{"controllers/OrderController.html":{}}}],["getallordersofcurrentuser(decodedtoken",{"_index":437,"title":{},"body":{"controllers/OrderController.html":{}}}],["getallproducts",{"_index":542,"title":{},"body":{"controllers/ProductController.html":{}}}],["getorderbyid",{"_index":436,"title":{},"body":{"controllers/OrderController.html":{}}}],["getorderbyid(id",{"_index":442,"title":{},"body":{"controllers/OrderController.html":{}}}],["getproductbyid",{"_index":543,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductbyid(@param('id",{"_index":555,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductbyid(id",{"_index":546,"title":{},"body":{"controllers/ProductController.html":{}}}],["getting",{"_index":823,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":1179,"title":{},"body":{"index.html":{}}}],["github",{"_index":1164,"title":{},"body":{"index.html":{}}}],["github.com/christian",{"_index":1076,"title":{},"body":{"index.html":{}}}],["give",{"_index":1286,"title":{},"body":{"index.html":{}}}],["given_name",{"_index":402,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["global",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["go",{"_index":1235,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1418,"title":{},"body":{"license.html":{}}}],["h",{"_index":1387,"title":{},"body":{"index.html":{}}}],["h[build",{"_index":1386,"title":{},"body":{"index.html":{}}}],["headers",{"_index":1405,"title":{},"body":{"index.html":{}}}],["headers.decorator",{"_index":186,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["headers.decorator.ts",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["helmet",{"_index":906,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["hereby",{"_index":1417,"title":{},"body":{"license.html":{}}}],["history",{"_index":1100,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1464,"title":{},"body":{"license.html":{}}}],["hooks",{"_index":1147,"title":{},"body":{"index.html":{}}}],["host",{"_index":319,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"index.html":{}}}],["host.switchtohttp",{"_index":333,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["hosting",{"_index":1169,"title":{},"body":{"index.html":{}}}],["html2canvas",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["html2canvas/jspdf",{"_index":1124,"title":{},"body":{"index.html":{}}}],["http",{"_index":337,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["http://localhost:3000",{"_index":1227,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":1229,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1226,"title":{},"body":{"index.html":{}}}],["http://localhost:4200sentry",{"_index":1234,"title":{},"body":{"index.html":{}}}],["http://localhost:80",{"_index":1283,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1230,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/admin/master/console/#/demo_shop/realm",{"_index":1211,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/admin/master/console/#/demo_shop/users/add",{"_index":1259,"title":{},"body":{"index.html":{}}}],["http://localhost:80usage",{"_index":1231,"title":{},"body":{"index.html":{}}}],["httpadapter",{"_index":330,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":345,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":346,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["httpadapterhost",{"_index":316,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["httpexception",{"_index":325,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["https://github.com/christian",{"_index":1180,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":326,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":340,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["husky",{"_index":1145,"title":{},"body":{"index.html":{}}}],["hydrated",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["hydratedcartitem",{"_index":256,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hydratedorder",{"_index":480,"title":{},"body":{"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/ShoppingSessionRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hydratedproduct",{"_index":569,"title":{},"body":{"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hydratedshoppingsession",{"_index":637,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hydrateduser",{"_index":765,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["i1[network",{"_index":1389,"title":{},"body":{"index.html":{}}}],["i2[ec2",{"_index":1390,"title":{},"body":{"index.html":{}}}],["i[deploy",{"_index":1388,"title":{},"body":{"index.html":{}}}],["iam",{"_index":1352,"title":{},"body":{"index.html":{}}}],["id",{"_index":168,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"interfaces/MonitoredUser.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":771,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{}}}],["identity.ts",{"_index":732,"title":{},"body":{"classes/UserIdentity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identity.ts:12",{"_index":740,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.ts:17",{"_index":738,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.ts:22",{"_index":741,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.ts:8",{"_index":737,"title":{},"body":{"classes/UserIdentity.html":{}}}],["image",{"_index":411,"title":{},"body":{"classes/ImageResponse.html":{},"classes/ProductResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["image.name",{"_index":413,"title":{},"body":{"classes/ImageResponse.html":{},"miscellaneous/variables.html":{}}}],["image.uri",{"_index":414,"title":{},"body":{"classes/ImageResponse.html":{},"miscellaneous/variables.html":{}}}],["imageresponse",{"_index":408,"title":{"classes/ImageResponse.html":{}},"body":{"classes/ImageResponse.html":{},"classes/ProductResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":270,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/ProductRepository.html":{},"classes/ProductResponse.html":{},"injectables/ShoppingSessionRepository.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["implementation",{"_index":1072,"title":{},"body":{"index.html":{}}}],["implements",{"_index":262,"title":{},"body":{"injectables/CartItemRepository.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/OrderRepository.html":{},"injectables/PrismaService.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{}}}],["implied",{"_index":1454,"title":{},"body":{"license.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":269,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{}}}],["included",{"_index":1448,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1296,"title":{},"body":{"index.html":{}}}],["including",{"_index":1430,"title":{},"body":{"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["infrastructure",{"_index":1156,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":237,"title":{"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/MonitoringService.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}},"body":{"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/MonitoringService.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":238,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/MonitoringService.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":1182,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1176,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1328,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":335,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["instead",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":1245,"title":{},"body":{"index.html":{}}}],["integration/continuous",{"_index":1167,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1086,"title":{},"body":{"index.html":{}}}],["interface",{"_index":275,"title":{"interfaces/CartItemRepositoryModel.html":{},"interfaces/MonitoredUser.html":{},"interfaces/OrderRepositoryModel.html":{},"interfaces/ProductRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"interfaces/UserRepositoryModel.html":{}},"body":{"interfaces/CartItemRepositoryModel.html":{},"interfaces/MonitoredUser.html":{},"interfaces/OrderRepositoryModel.html":{},"interfaces/ProductRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"interfaces/UserRepositoryModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":276,"title":{},"body":{"interfaces/CartItemRepositoryModel.html":{},"interfaces/MonitoredUser.html":{},"interfaces/OrderRepositoryModel.html":{},"interfaces/ProductRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"interfaces/UserRepositoryModel.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["internalservererrorexception('error",{"_index":818,"title":{},"body":{"injectables/UserService.html":{}}}],["ip_address",{"_index":431,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["isarray",{"_index":440,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["isdecimal",{"_index":384,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["isdecimal()@min(0.01",{"_index":378,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["isemail",{"_index":742,"title":{},"body":{"classes/UserIdentity.html":{}}}],["ishttpexception",{"_index":334,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["isint",{"_index":24,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/UpdateCartItemQuantityRequest.html":{}}}],["isint()@min(1",{"_index":368,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["isprod",{"_index":986,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["issentryconfigured",{"_index":425,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["isstring",{"_index":700,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{},"classes/UserIdentity.html":{}}}],["issues",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["isuuid",{"_index":743,"title":{},"body":{"classes/UserIdentity.html":{}}}],["item",{"_index":9,"title":{},"body":{"classes/AddCartItemRequest.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/OrderItemResponse.html":{},"classes/OrderResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.controller",{"_index":235,"title":{},"body":{"modules/CartItemModule.html":{}}}],["item.controller.ts",{"_index":143,"title":{},"body":{"controllers/CartItemController.html":{},"coverage.html":{}}}],["item.controller.ts:24",{"_index":157,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.controller.ts:38",{"_index":172,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.controller.ts:53",{"_index":167,"title":{},"body":{"controllers/CartItemController.html":{}}}],["item.id",{"_index":290,"title":{},"body":{"classes/CartItemResponse.html":{},"miscellaneous/variables.html":{}}}],["item.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["item.module.ts",{"_index":233,"title":{},"body":{"modules/CartItemModule.html":{}}}],["item.product.images?.[0]?.uri",{"_index":289,"title":{},"body":{"classes/CartItemResponse.html":{},"miscellaneous/variables.html":{}}}],["item.product.name",{"_index":292,"title":{},"body":{"classes/CartItemResponse.html":{},"miscellaneous/variables.html":{}}}],["item.product_id",{"_index":291,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["item.product_name",{"_index":460,"title":{},"body":{"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["item.product_thumbnail",{"_index":461,"title":{},"body":{"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["item.productid",{"_index":267,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/ShoppingSessionService.html":{}}}],["item.productname",{"_index":679,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["item.productthumbnail",{"_index":680,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["item.quantity",{"_index":293,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"injectables/ShoppingSessionService.html":{},"miscellaneous/variables.html":{}}}],["item.repository",{"_index":236,"title":{},"body":{"modules/CartItemModule.html":{},"injectables/CartItemService.html":{}}}],["item.repository.ts",{"_index":240,"title":{},"body":{"injectables/CartItemRepository.html":{},"coverage.html":{}}}],["item.repository.ts:10",{"_index":246,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["item.repository.ts:13",{"_index":250,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["item.repository.ts:38",{"_index":254,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["item.repository.ts:57",{"_index":252,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["item.service",{"_index":177,"title":{},"body":{"controllers/CartItemController.html":{},"modules/CartItemModule.html":{}}}],["item.service.ts",{"_index":295,"title":{},"body":{"injectables/CartItemService.html":{},"coverage.html":{}}}],["item.service.ts:11",{"_index":299,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.service.ts:21",{"_index":301,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.service.ts:31",{"_index":300,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.service.ts:8",{"_index":297,"title":{},"body":{"injectables/CartItemService.html":{}}}],["item.ts",{"_index":956,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["item.unitprice",{"_index":681,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["item/cart",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{}}}],["item/controllers/cart",{"_index":142,"title":{},"body":{"controllers/CartItemController.html":{},"coverage.html":{}}}],["item/dtos/add",{"_index":7,"title":{},"body":{"classes/AddCartItemRequest.html":{},"coverage.html":{}}}],["item/dtos/cart",{"_index":282,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item/dtos/update",{"_index":689,"title":{},"body":{"classes/UpdateCartItemQuantityRequest.html":{},"coverage.html":{}}}],["item/entities/hydrated",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["item/models/cart",{"_index":277,"title":{},"body":{"interfaces/CartItemRepositoryModel.html":{},"coverage.html":{}}}],["item/services/cart",{"_index":239,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"coverage.html":{}}}],["items",{"_index":153,"title":{},"body":{"controllers/CartItemController.html":{},"classes/CreateOrderDto.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"classes/ProductListResponse.html":{},"injectables/ProductService.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"miscellaneous/variables.html":{}}}],["items/:id",{"_index":166,"title":{},"body":{"controllers/CartItemController.html":{}}}],["j",{"_index":1392,"title":{},"body":{"index.html":{}}}],["j1[rds",{"_index":1393,"title":{},"body":{"index.html":{}}}],["j2[ec2",{"_index":1394,"title":{},"body":{"index.html":{}}}],["j3[ec2",{"_index":1395,"title":{},"body":{"index.html":{}}}],["j4[ec2",{"_index":1396,"title":{},"body":{"index.html":{}}}],["j5[s3",{"_index":1397,"title":{},"body":{"index.html":{}}}],["j[deploy",{"_index":1391,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":1121,"title":{},"body":{"index.html":{}}}],["jest",{"_index":1138,"title":{},"body":{"index.html":{}}}],["js",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["jsondocumenturl",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jspdf",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["jwtmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":391,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["k",{"_index":1399,"title":{},"body":{"index.html":{}}}],["k1[cloudflare",{"_index":1400,"title":{},"body":{"index.html":{}}}],["k2[cloudflare",{"_index":1401,"title":{},"body":{"index.html":{}}}],["k3[cloudflare",{"_index":1402,"title":{},"body":{"index.html":{}}}],["k4[cloudflare",{"_index":1403,"title":{},"body":{"index.html":{}}}],["k[configure",{"_index":1398,"title":{},"body":{"index.html":{}}}],["key",{"_index":1214,"title":{},"body":{"index.html":{}}}],["keycloak",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["keycloak_admin",{"_index":1260,"title":{},"body":{"index.html":{}}}],["keycloak_admin_password",{"_index":1261,"title":{},"body":{"index.html":{}}}],["keycloak_realm_public_key",{"_index":1198,"title":{},"body":{"index.html":{}}}],["keycloak_user_id",{"_index":484,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{}}}],["keycloakconnectmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakconnectmodule.register",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakid",{"_index":476,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["keycloakuserid",{"_index":734,"title":{},"body":{"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1453,"title":{},"body":{"license.html":{}}}],["labels",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":1264,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":735,"title":{},"body":{"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":1173,"title":{},"body":{"index.html":{}}}],["legend",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["liability",{"_index":1468,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1465,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1295,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1091,"title":{},"body":{"index.html":{}}}],["library",{"_index":1088,"title":{},"body":{"index.html":{}}}],["license",{"_index":1407,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1408,"title":{},"body":{"index.html":{}}}],["limit",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["limitation",{"_index":1431,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1455,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":909,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["links",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1151,"title":{},"body":{"index.html":{}}}],["list",{"_index":451,"title":{},"body":{"controllers/OrderController.html":{},"classes/OrderListResponse.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"injectables/ProductService.html":{},"changelog.html":{},"coverage.html":{}}}],["literal",{"_index":1486,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["logger",{"_index":327,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["logger.error(`${exceptionprefix",{"_index":349,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["logging",{"_index":1103,"title":{},"body":{"index.html":{}}}],["login",{"_index":222,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionService.html":{},"index.html":{}}}],["m[upload",{"_index":1406,"title":{},"body":{"index.html":{}}}],["main",{"_index":1306,"title":{},"body":{"index.html":{}}}],["management",{"_index":1095,"title":{},"body":{"index.html":{}}}],["manages",{"_index":1341,"title":{},"body":{"index.html":{}}}],["matching",{"_index":30,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["me/address",{"_index":715,"title":{},"body":{"controllers/UserController.html":{}}}],["me/phone",{"_index":718,"title":{},"body":{"controllers/UserController.html":{}}}],["merchantability",{"_index":1457,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1310,"title":{},"body":{"index.html":{},"license.html":{}}}],["messages",{"_index":1144,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":394,"title":{},"body":{"injectables/DecodeTokenPipe.html":{},"dependencies.html":{}}}],["methodkey",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":144,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{}}}],["min",{"_index":25,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/UpdateCartItemQuantityRequest.html":{}}}],["min(0.01",{"_index":386,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["min(1",{"_index":28,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/UpdateCartItemQuantityRequest.html":{}}}],["minlength",{"_index":385,"title":{},"body":{"classes/CreateOrderItemDto.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UserIdentity.html":{}}}],["minlength(1",{"_index":381,"title":{},"body":{"classes/CreateOrderItemDto.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UserIdentity.html":{}}}],["miscellaneous",{"_index":1046,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1410,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mock",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["models/cart",{"_index":259,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["models/decoded",{"_index":399,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["models/monitored",{"_index":424,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["models/order",{"_index":482,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["models/product",{"_index":571,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["models/shopping",{"_index":639,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["models/user",{"_index":770,"title":{},"body":{"injectables/UserRepository.html":{}}}],["modern",{"_index":1068,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1433,"title":{},"body":{"license.html":{}}}],["module",{"_index":60,"title":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":62,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monitoreduser",{"_index":415,"title":{"interfaces/MonitoredUser.html":{}},"body":{"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"coverage.html":{}}}],["monitoring",{"_index":1101,"title":{},"body":{"index.html":{}}}],["monitoringservice",{"_index":355,"title":{"injectables/MonitoringService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/MonitoringService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["mono",{"_index":1157,"title":{},"body":{"index.html":{}}}],["more",{"_index":893,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mvp",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":159,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":1265,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":839,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["needed",{"_index":1199,"title":{},"body":{"index.html":{}}}],["nest",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProductController.html":{},"dependencies.html":{}}}],["nestjs",{"_index":1128,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"classes/CatchEverythingFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/DecodeTokenPipe.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":23,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"classes/UserIdentity.html":{},"classes/UserResponse.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["network",{"_index":1217,"title":{},"body":{"index.html":{}}}],["new",{"_index":216,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1210,"title":{},"body":{"index.html":{}}}],["ngrx",{"_index":1122,"title":{},"body":{"index.html":{}}}],["ngrx/signals",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1129,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":432,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["noninfringement",{"_index":1461,"title":{},"body":{"license.html":{}}}],["notable",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["notfoundexception",{"_index":303,"title":{},"body":{"injectables/CartItemService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('user",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`cart",{"_index":308,"title":{},"body":{"injectables/CartItemService.html":{}}}],["notfoundexception(`order",{"_index":530,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception(`product",{"_index":598,"title":{},"body":{"injectables/ProductService.html":{}}}],["notfoundexception(`shopping",{"_index":688,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["notice",{"_index":1446,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1174,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1241,"title":{},"body":{"index.html":{}}}],["null",{"_index":696,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{}}}],["number",{"_index":16,"title":{},"body":{"classes/AddCartItemRequest.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"interfaces/MonitoredUser.html":{},"classes/OrderItemResponse.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UserResponse.html":{},"index.html":{}}}],["number(curr.price",{"_index":514,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["number(item.price",{"_index":462,"title":{},"body":{"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["number(item.product.price",{"_index":294,"title":{},"body":{"classes/CartItemResponse.html":{},"miscellaneous/variables.html":{}}}],["number(product.price",{"_index":588,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["nx",{"_index":939,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["nx.json",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1422,"title":{},"body":{"license.html":{}}}],["omit",{"_index":1193,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":537,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":1232,"title":{},"body":{"index.html":{}}}],["openapi",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["openapi/swagger",{"_index":1131,"title":{},"body":{"index.html":{}}}],["openapigenerator",{"_index":1110,"title":{},"body":{"index.html":{}}}],["operationidfactory",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":160,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["order",{"_index":361,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/OrderListResponse.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["order.id",{"_index":516,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["order.order_items.reduce((acc",{"_index":510,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["order.repository",{"_index":528,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.status",{"_index":518,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["order.ts",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["order.user_id",{"_index":517,"title":{},"body":{"classes/OrderResponse.html":{},"miscellaneous/variables.html":{}}}],["order/dtos/create",{"_index":640,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{}}}],["order/dtos/order",{"_index":614,"title":{},"body":{"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionService.html":{}}}],["order/entities/hydrated",{"_index":641,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["order/order.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingSessionModule.html":{}}}],["order_items",{"_index":485,"title":{},"body":{"injectables/OrderRepository.html":{},"injectables/ShoppingSessionRepository.html":{}}}],["orderby",{"_index":643,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["ordercontroller",{"_index":433,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderitem",{"_index":458,"title":{},"body":{"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["orderitemresponse",{"_index":456,"title":{"classes/OrderItemResponse.html":{}},"body":{"classes/OrderItemResponse.html":{},"classes/OrderResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderlistresponse",{"_index":439,"title":{"classes/OrderListResponse.html":{}},"body":{"controllers/OrderController.html":{},"classes/OrderListResponse.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["ordermodule",{"_index":73,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ShoppingSessionModule.html":{},"modules.html":{},"overview.html":{}}}],["orderrepository",{"_index":467,"title":{"injectables/OrderRepository.html":{}},"body":{"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["orderrepositorymodel",{"_index":481,"title":{"interfaces/OrderRepositoryModel.html":{}},"body":{"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"coverage.html":{}}}],["orderresponse",{"_index":444,"title":{"classes/OrderResponse.html":{}},"body":{"controllers/OrderController.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orders",{"_index":452,"title":{},"body":{"controllers/OrderController.html":{},"index.html":{}}}],["orderservice",{"_index":446,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["ordersrepository",{"_index":524,"title":{},"body":{"injectables/OrderService.html":{}}}],["orm",{"_index":1132,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1473,"title":{},"body":{"license.html":{}}}],["out",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outputs",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outputs.push(fn(item",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1079,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":990,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":174,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["param('id",{"_index":226,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1459,"title":{},"body":{"license.html":{}}}],["password",{"_index":1268,"title":{},"body":{"index.html":{}}}],["patch.decorator",{"_index":197,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/UserController.html":{}}}],["patch.decorator.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["path",{"_index":205,"title":{},"body":{"controllers/CartItemController.html":{},"classes/CatchEverythingFilter.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["pdf",{"_index":1125,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1102,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1416,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1344,"title":{},"body":{"index.html":{}}}],["permit",{"_index":1440,"title":{},"body":{"license.html":{}}}],["persistauthorization",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":1421,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1441,"title":{},"body":{"license.html":{}}}],["pgadmin",{"_index":1225,"title":{},"body":{"index.html":{}}}],["pgadmin_default_password",{"_index":1285,"title":{},"body":{"index.html":{}}}],["phase",{"_index":1325,"title":{},"body":{"index.html":{}}}],["phone",{"_index":703,"title":{},"body":{"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":190,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["pipe.ts",{"_index":388,"title":{},"body":{"injectables/DecodeTokenPipe.html":{},"coverage.html":{}}}],["pipe.ts:6",{"_index":392,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["pipe.ts:9",{"_index":396,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["pipeline",{"_index":1298,"title":{},"body":{"index.html":{}}}],["pipetransform",{"_index":398,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["platform",{"_index":1170,"title":{},"body":{"index.html":{}}}],["please",{"_index":221,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionService.html":{}}}],["policyenforcement",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["policyenforcementmode",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["policyenforcementmode.permissive",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1450,"title":{},"body":{"license.html":{}}}],["post.decorator",{"_index":182,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["post.decorator.ts",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["postgres",{"_index":1224,"title":{},"body":{"index.html":{}}}],["postgres_password",{"_index":1291,"title":{},"body":{"index.html":{}}}],["postgres_user",{"_index":1290,"title":{},"body":{"index.html":{}}}],["postgresql",{"_index":1135,"title":{},"body":{"index.html":{}}}],["pr",{"_index":1305,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1146,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":1172,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":1152,"title":{},"body":{"index.html":{}}}],["price",{"_index":374,"title":{},"body":{"classes/CreateOrderItemDto.html":{},"classes/ProductResponse.html":{},"injectables/ShoppingSessionService.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":247,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.cartitemgetpayload",{"_index":1487,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.ordergetpayload",{"_index":1488,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.productgetpayload",{"_index":1489,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.shoppingsessiongetpayload",{"_index":1490,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma.usergetpayload",{"_index":1491,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["prisma/client",{"_index":50,"title":{},"body":{"classes/AddressResponse.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/OrderResponse.html":{},"injectables/PrismaService.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"dependencies.html":{}}}],["prisma:generate",{"_index":1220,"title":{},"body":{"index.html":{}}}],["prisma:migrate:dev",{"_index":1223,"title":{},"body":{"index.html":{}}}],["prisma:seedthe",{"_index":1273,"title":{},"body":{"index.html":{}}}],["prismaclient",{"_index":536,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":245,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/CartItemRepository.html":{},"modules/CommonModule.html":{},"injectables/OrderRepository.html":{},"injectables/PrismaService.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":210,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/UserService.html":{}}}],["process.env",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.keycloak_client_api",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.keycloak_realm",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.keycloak_realm_public_key",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.keycloak_url",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":347,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["process.env.sentry_auth_token",{"_index":426,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["process.env.sentry_demo_shop_api_dsn",{"_index":429,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["process.env.sentry_demo_shop_api_project",{"_index":428,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["process.env.sentry_org",{"_index":427,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["processing",{"_index":1099,"title":{},"body":{"index.html":{}}}],["product",{"_index":266,"title":{},"body":{"injectables/CartItemRepository.html":{},"classes/ProductListResponse.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionRepository.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["product.categories.map(category",{"_index":582,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["product.description",{"_index":587,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["product.id",{"_index":585,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["product.name",{"_index":586,"title":{},"body":{"classes/ProductResponse.html":{},"miscellaneous/variables.html":{}}}],["product.repository",{"_index":595,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["product/product.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["product_id",{"_index":375,"title":{},"body":{"classes/CreateOrderItemDto.html":{},"injectables/ShoppingSessionService.html":{}}}],["product_name",{"_index":376,"title":{},"body":{"classes/CreateOrderItemDto.html":{},"injectables/ShoppingSessionService.html":{}}}],["product_thumbnail",{"_index":377,"title":{},"body":{"classes/CreateOrderItemDto.html":{},"injectables/ShoppingSessionService.html":{}}}],["productcontroller",{"_index":540,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":13,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":348,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"miscellaneous/variables.html":{}}}],["productlistresponse",{"_index":544,"title":{"classes/ProductListResponse.html":{}},"body":{"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["productmodule",{"_index":74,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productname",{"_index":283,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["productrepository",{"_index":561,"title":{"injectables/ProductRepository.html":{}},"body":{"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["productrepositorymodel",{"_index":570,"title":{"interfaces/ProductRepositoryModel.html":{}},"body":{"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"coverage.html":{}}}],["productresponse",{"_index":547,"title":{"classes/ProductResponse.html":{}},"body":{"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":553,"title":{},"body":{"controllers/ProductController.html":{},"changelog.html":{},"index.html":{}}}],["productservice",{"_index":549,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["productsrepository",{"_index":592,"title":{},"body":{"injectables/ProductService.html":{}}}],["productthumbnail",{"_index":284,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["programmatic",{"_index":1351,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1117,"title":{},"body":{"index.html":{}}}],["project",{"_index":828,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["project.properties",{"_index":1363,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1238,"title":{},"body":{"index.html":{}}}],["promise",{"_index":163,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{}}}],["proper",{"_index":1343,"title":{},"body":{"index.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"classes/UserIdentity.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["protection",{"_index":1348,"title":{},"body":{"index.html":{}}}],["provide",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1451,"title":{},"body":{"license.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["provisioned",{"_index":1326,"title":{},"body":{"index.html":{}}}],["public",{"_index":552,"title":{},"body":{"controllers/ProductController.html":{},"index.html":{}}}],["public.git",{"_index":1181,"title":{},"body":{"index.html":{}}}],["publish",{"_index":1434,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1460,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1066,"title":{},"body":{"index.html":{}}}],["push",{"_index":1221,"title":{},"body":{"index.html":{}}}],["put.decorator",{"_index":724,"title":{},"body":{"controllers/UserController.html":{}}}],["put.decorator.ts",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["quality",{"_index":1371,"title":{},"body":{"index.html":{}}}],["quantity",{"_index":200,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CreateOrderItemDto.html":{},"classes/OrderItemResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["raised",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["rate",{"_index":908,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rds",{"_index":1333,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":34,"title":{},"body":{"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"injectables/OrderRepository.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"injectables/ProductRepository.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["realm",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["realm:buy_products",{"_index":204,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["realmpublickey",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["refactor",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1081,"title":{},"body":{"index.html":{}}}],["refined",{"_index":1071,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":38,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":1256,"title":{},"body":{"index.html":{}}}],["registration",{"_index":1255,"title":{},"body":{"index.html":{}}}],["relational",{"_index":1136,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":242,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"index.html":{}}}],["remove(id",{"_index":251,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{}}}],["removecartitem",{"_index":147,"title":{},"body":{"controllers/CartItemController.html":{}}}],["removecartitem(id",{"_index":164,"title":{},"body":{"controllers/CartItemController.html":{}}}],["repo",{"_index":1158,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1075,"title":{},"body":{"index.html":{}}}],["repository.model",{"_index":260,"title":{},"body":{"injectables/CartItemRepository.html":{},"injectables/OrderRepository.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{}}}],["repository.model.ts",{"_index":278,"title":{},"body":{"interfaces/CartItemRepositoryModel.html":{},"interfaces/OrderRepositoryModel.html":{},"interfaces/ProductRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"interfaces/UserRepositoryModel.html":{},"coverage.html":{}}}],["repository.model.ts:10",{"_index":781,"title":{},"body":{"interfaces/UserRepositoryModel.html":{}}}],["repository.model.ts:11",{"_index":280,"title":{},"body":{"interfaces/CartItemRepositoryModel.html":{}}}],["repository.model.ts:12",{"_index":783,"title":{},"body":{"interfaces/UserRepositoryModel.html":{}}}],["repository.model.ts:14",{"_index":784,"title":{},"body":{"interfaces/UserRepositoryModel.html":{}}}],["repository.model.ts:4",{"_index":488,"title":{},"body":{"interfaces/OrderRepositoryModel.html":{},"interfaces/ProductRepositoryModel.html":{}}}],["repository.model.ts:5",{"_index":579,"title":{},"body":{"interfaces/ProductRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{}}}],["repository.model.ts:6",{"_index":490,"title":{},"body":{"interfaces/OrderRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{}}}],["repository.model.ts:7",{"_index":279,"title":{},"body":{"interfaces/CartItemRepositoryModel.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{}}}],["repository.model.ts:8",{"_index":782,"title":{},"body":{"interfaces/UserRepositoryModel.html":{}}}],["repository.model.ts:9",{"_index":281,"title":{},"body":{"interfaces/CartItemRepositoryModel.html":{}}}],["req",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers[data",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":201,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{}}}],["request.phone",{"_index":779,"title":{},"body":{"injectables/UserRepository.html":{}}}],["request.ts",{"_index":10,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"coverage.html":{}}}],["request.ts:12",{"_index":693,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{}}}],["request.ts:16",{"_index":694,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{}}}],["request.ts:20",{"_index":699,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{}}}],["request.ts:24",{"_index":695,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{}}}],["request.ts:26",{"_index":698,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{}}}],["request.ts:5",{"_index":704,"title":{},"body":{"classes/UpdateUserPhoneRequest.html":{}}}],["request.ts:8",{"_index":20,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{}}}],["required",{"_index":701,"title":{},"body":{"classes/UpdateUserAddressRequest.html":{}}}],["requirements",{"_index":1350,"title":{},"body":{"index.html":{}}}],["res",{"_index":155,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["reset",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolvecurrentuser",{"_index":707,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["resolvecurrentuser(decodedtoken",{"_index":710,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["resolveshoppingsessionofcurrentuser",{"_index":605,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["resolveshoppingsessionofcurrentuser(decodedtoken",{"_index":608,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["response",{"_index":179,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"controllers/OrderController.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["response.ts",{"_index":33,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{},"classes/UserResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.ts:10",{"_index":44,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{}}}],["response.ts:11",{"_index":502,"title":{},"body":{"classes/OrderResponse.html":{},"classes/UserResponse.html":{}}}],["response.ts:12",{"_index":46,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{}}}],["response.ts:13",{"_index":498,"title":{},"body":{"classes/OrderResponse.html":{},"classes/UserResponse.html":{}}}],["response.ts:14",{"_index":48,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"classes/ProductResponse.html":{}}}],["response.ts:15",{"_index":494,"title":{},"body":{"classes/OrderResponse.html":{},"classes/UserResponse.html":{}}}],["response.ts:16",{"_index":45,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"classes/ProductResponse.html":{}}}],["response.ts:17",{"_index":501,"title":{},"body":{"classes/OrderResponse.html":{},"classes/UserResponse.html":{}}}],["response.ts:18",{"_index":287,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/ProductResponse.html":{}}}],["response.ts:19",{"_index":496,"title":{},"body":{"classes/OrderResponse.html":{}}}],["response.ts:6",{"_index":47,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"classes/ProductListResponse.html":{}}}],["response.ts:7",{"_index":785,"title":{},"body":{"classes/UserResponse.html":{}}}],["response.ts:8",{"_index":43,"title":{},"body":{"classes/AddressResponse.html":{},"classes/CartItemResponse.html":{},"classes/ImageResponse.html":{},"classes/OrderItemResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{}}}],["response.ts:9",{"_index":497,"title":{},"body":{"classes/OrderResponse.html":{},"classes/UserResponse.html":{}}}],["responsebody",{"_index":341,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["restriction",{"_index":1429,"title":{},"body":{"license.html":{}}}],["result",{"_index":774,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["result.address",{"_index":778,"title":{},"body":{"injectables/UserRepository.html":{}}}],["results",{"_index":29,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1205,"title":{},"body":{"index.html":{}}}],["return",{"_index":53,"title":{},"body":{"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"injectables/OrderRepository.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":162,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"injectables/DecodeTokenPipe.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{}}}],["rights",{"_index":1432,"title":{},"body":{"license.html":{}}}],["roleguard",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["roles",{"_index":203,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{}}}],["root",{"_index":1364,"title":{},"body":{"index.html":{}}}],["routing",{"_index":1106,"title":{},"body":{"index.html":{}}}],["rs256",{"_index":1215,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1349,"title":{},"body":{"index.html":{}}}],["run",{"_index":1208,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1330,"title":{},"body":{"index.html":{}}}],["running",{"_index":1252,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":1334,"title":{},"body":{"index.html":{}}}],["saasdotnet",{"_index":1244,"title":{},"body":{"index.html":{}}}],["safe",{"_index":1120,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1222,"title":{},"body":{"index.html":{}}}],["script",{"_index":1275,"title":{},"body":{"index.html":{}}}],["search",{"_index":1097,"title":{},"body":{"index.html":{}}}],["secret",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["secrets",{"_index":1346,"title":{},"body":{"index.html":{}}}],["section",{"_index":1196,"title":{},"body":{"index.html":{}}}],["secure",{"_index":1137,"title":{},"body":{"index.html":{}}}],["securely",{"_index":1357,"title":{},"body":{"index.html":{}}}],["security",{"_index":1404,"title":{},"body":{"index.html":{}}}],["see",{"_index":1195,"title":{},"body":{"index.html":{}}}],["seed",{"_index":1274,"title":{},"body":{"index.html":{}}}],["seeding",{"_index":1272,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1438,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1317,"title":{},"body":{"index.html":{}}}],["sentry",{"_index":423,"title":{},"body":{"injectables/MonitoringService.html":{},"index.html":{}}}],["sentry.io",{"_index":1236,"title":{},"body":{"index.html":{}}}],["sentry.setuser",{"_index":430,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["sentry/angular",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["sentry/cli",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["sentry/nestjs",{"_index":328,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"injectables/MonitoringService.html":{},"dependencies.html":{}}}],["sentry/nestjs/setup",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["sentry/profiling",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["sentry/wizard@latest",{"_index":1242,"title":{},"body":{"index.html":{}}}],["sentryexceptioncaptured",{"_index":321,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["sentryglobalfilter",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["sentrymodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["sentrymodule.forroot",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":1203,"title":{},"body":{"index.html":{}}}],["service",{"_index":1332,"title":{},"body":{"index.html":{}}}],["services",{"_index":1304,"title":{},"body":{"index.html":{}}}],["services/cart",{"_index":176,"title":{},"body":{"controllers/CartItemController.html":{},"modules/CartItemModule.html":{}}}],["services/monitoring.service",{"_index":358,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/order.repository",{"_index":469,"title":{},"body":{"modules/OrderModule.html":{}}}],["services/order.service",{"_index":447,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["services/prisma.service",{"_index":357,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/product.repository",{"_index":563,"title":{},"body":{"modules/ProductModule.html":{}}}],["services/product.service",{"_index":550,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["services/shopping",{"_index":612,"title":{},"body":{"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{}}}],["services/user.repository",{"_index":755,"title":{},"body":{"modules/UserModule.html":{}}}],["services/user.service",{"_index":721,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["session",{"_index":219,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["session.controller",{"_index":626,"title":{},"body":{"modules/ShoppingSessionModule.html":{}}}],["session.controller.ts",{"_index":603,"title":{},"body":{"controllers/ShoppingSessionController.html":{},"coverage.html":{}}}],["session.controller.ts:17",{"_index":611,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["session.controller.ts:24",{"_index":607,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["session.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{}}}],["session.module.ts",{"_index":624,"title":{},"body":{"modules/ShoppingSessionModule.html":{}}}],["session.repository",{"_index":627,"title":{},"body":{"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionService.html":{}}}],["session.repository.ts",{"_index":628,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{},"coverage.html":{}}}],["session.repository.ts:10",{"_index":629,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["session.repository.ts:13",{"_index":635,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["session.repository.ts:37",{"_index":633,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["session.repository.ts:58",{"_index":636,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["session.repository.ts:69",{"_index":631,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["session.service",{"_index":193,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{}}}],["session.service.ts",{"_index":662,"title":{},"body":{"injectables/ShoppingSessionService.html":{},"coverage.html":{}}}],["session.service.ts:11",{"_index":669,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["session.service.ts:21",{"_index":668,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["session.service.ts:49",{"_index":671,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["session.service.ts:59",{"_index":672,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["session.service.ts:8",{"_index":665,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["session.ts",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["session/controllers/shopping",{"_index":602,"title":{},"body":{"controllers/ShoppingSessionController.html":{},"coverage.html":{}}}],["session/dtos/shopping",{"_index":658,"title":{},"body":{"classes/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session/entities/hydrated",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["session/models/shopping",{"_index":655,"title":{},"body":{"interfaces/ShoppingSessionRepositoryModel.html":{},"coverage.html":{}}}],["session/services/shopping",{"_index":192,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{}}}],["session/shopping",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/ShoppingSessionModule.html":{}}}],["sessions",{"_index":206,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/ShoppingSessionController.html":{}}}],["set",{"_index":1183,"title":{},"body":{"index.html":{}}}],["setdescription('the",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":1197,"title":{},"body":{"index.html":{}}}],["settings/keys",{"_index":1212,"title":{},"body":{"index.html":{}}}],["settitle('demo",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1171,"title":{},"body":{"index.html":{}}}],["setuser",{"_index":419,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["setuser(user",{"_index":420,"title":{},"body":{"injectables/MonitoringService.html":{}}}],["setversion('v1",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1447,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1107,"title":{},"body":{"index.html":{}}}],["shop",{"_index":1058,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["shop/api",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["shopping",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["shopping_session",{"_index":268,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["shopping_session_id",{"_index":272,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["shoppingsession",{"_index":212,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"miscellaneous/variables.html":{}}}],["shoppingsession.id",{"_index":225,"title":{},"body":{"controllers/CartItemController.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"miscellaneous/variables.html":{}}}],["shoppingsession.items.map(item",{"_index":678,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["shoppingsession.user_id",{"_index":661,"title":{},"body":{"classes/ShoppingSessionResponse.html":{},"miscellaneous/variables.html":{}}}],["shoppingsession.userid",{"_index":677,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["shoppingsessioncontroller",{"_index":600,"title":{"controllers/ShoppingSessionController.html":{}},"body":{"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"coverage.html":{}}}],["shoppingsessionid",{"_index":249,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/CreateOrderDto.html":{},"injectables/ShoppingSessionService.html":{}}}],["shoppingsessionmodule",{"_index":75,"title":{"modules/ShoppingSessionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/ShoppingSessionModule.html":{},"modules.html":{},"overview.html":{}}}],["shoppingsessionrepository",{"_index":623,"title":{"injectables/ShoppingSessionRepository.html":{}},"body":{"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingsessionrepositorymodel",{"_index":638,"title":{"interfaces/ShoppingSessionRepositoryModel.html":{}},"body":{"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"coverage.html":{}}}],["shoppingsessionresponse",{"_index":610,"title":{"classes/ShoppingSessionResponse.html":{}},"body":{"controllers/ShoppingSessionController.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shoppingsessionservice",{"_index":191,"title":{"injectables/ShoppingSessionService.html":{}},"body":{"controllers/CartItemController.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"overview.html":{}}}],["shoppingsessionsrepository",{"_index":666,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["shoppingsessionsservice",{"_index":615,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["sign",{"_index":1280,"title":{},"body":{"index.html":{}}}],["simplify",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":1104,"title":{},"body":{"index.html":{}}}],["sku",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["skus",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1424,"title":{},"body":{"license.html":{}}}],["sonar",{"_index":901,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sonarcloud",{"_index":1361,"title":{},"body":{"index.html":{}}}],["sonarqube",{"_index":1307,"title":{},"body":{"index.html":{}}}],["sonarqube/sonarcloud",{"_index":1362,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"modules/AppModule.html":{},"controllers/CartItemController.html":{},"modules/CartItemModule.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"modules/CommonModule.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"modules/OrderModule.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"modules/ShoppingSessionModule.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"modules/UserModule.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["sourcemap",{"_index":1359,"title":{},"body":{"index.html":{}}}],["sourcemaps",{"_index":1243,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["ssl/tls",{"_index":1342,"title":{},"body":{"index.html":{}}}],["stack",{"_index":1060,"title":{},"body":{"index.html":{}}}],["staged",{"_index":1149,"title":{},"body":{"index.html":{}}}],["standardize",{"_index":1142,"title":{},"body":{"index.html":{}}}],["start",{"_index":223,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/ShoppingSessionService.html":{},"index.html":{}}}],["started",{"_index":824,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1123,"title":{},"body":{"index.html":{}}}],["statements",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["status",{"_index":493,"title":{},"body":{"classes/OrderResponse.html":{},"injectables/ShoppingSessionRepository.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":342,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["steps",{"_index":1207,"title":{},"body":{"index.html":{}}}],["stored",{"_index":1356,"title":{},"body":{"index.html":{}}}],["storybook",{"_index":1085,"title":{},"body":{"index.html":{}}}],["street",{"_index":39,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"classes/CartItemResponse.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"classes/ProductResponse.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1084,"title":{},"body":{"index.html":{}}}],["studio",{"_index":1281,"title":{},"body":{"index.html":{}}}],["studioaccess",{"_index":1282,"title":{},"body":{"index.html":{}}}],["styling",{"_index":844,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sub",{"_index":405,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["subgraph",{"_index":1368,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1443,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1436,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1449,"title":{},"body":{"license.html":{}}}],["success",{"_index":1374,"title":{},"body":{"index.html":{}}}],["successful",{"_index":1314,"title":{},"body":{"index.html":{}}}],["support",{"_index":1476,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1477,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1228,"title":{},"body":{"index.html":{}}}],["swagger.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('api",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1160,"title":{},"body":{"index.html":{}}}],["tab",{"_index":1267,"title":{},"body":{"index.html":{}}}],["table",{"_index":989,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1321,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":1126,"title":{},"body":{"index.html":{}}}],["tb",{"_index":1367,"title":{},"body":{"index.html":{}}}],["tech",{"_index":1115,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":1070,"title":{},"body":{"index.html":{}}}],["temporary",{"_index":1271,"title":{},"body":{"index.html":{}}}],["terraform",{"_index":1163,"title":{},"body":{"index.html":{}}}],["test",{"_index":1294,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1090,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1292,"title":{},"body":{"index.html":{}}}],["testto",{"_index":1293,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":539,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.cartitemrepository.create(dto",{"_index":304,"title":{},"body":{"injectables/CartItemService.html":{}}}],["this.cartitemrepository.remove(id",{"_index":309,"title":{},"body":{"injectables/CartItemService.html":{}}}],["this.cartitemrepository.update(id",{"_index":307,"title":{},"body":{"injectables/CartItemService.html":{}}}],["this.cartitemservice.create(dto",{"_index":224,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.cartitemservice.remove(number(id",{"_index":228,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.cartitemservice.update(number(id",{"_index":227,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.create(keycloakid",{"_index":685,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["this.createuser(fromdecodedtoken(decodedtoken",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findcurrentsessionforuser(keycloakid",{"_index":675,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["this.httpadapterhost",{"_index":331,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["this.jwtservice.decode(token",{"_index":406,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["this.monitoringservice.setuser",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["this.orderservice.find(number(id",{"_index":454,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findbyuser(decodedtoken.sub",{"_index":453,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.ordersrepository.find(id",{"_index":529,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.ordersrepository.findmanybyuser(keycloakid",{"_index":533,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.$transaction",{"_index":649,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["this.prisma.cartitem.create",{"_index":264,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["this.prisma.cartitem.delete",{"_index":274,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["this.prisma.cartitem.update",{"_index":271,"title":{},"body":{"injectables/CartItemRepository.html":{}}}],["this.prisma.order.create",{"_index":650,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["this.prisma.order.findmany",{"_index":486,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.prisma.order.finduniqueorthrow",{"_index":483,"title":{},"body":{"injectables/OrderRepository.html":{}}}],["this.prisma.product.findmany",{"_index":572,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.prisma.product.finduniqueorthrow",{"_index":577,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["this.prisma.shoppingsession.create",{"_index":647,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["this.prisma.shoppingsession.delete",{"_index":648,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["this.prisma.shoppingsession.findfirst",{"_index":642,"title":{},"body":{"injectables/ShoppingSessionRepository.html":{}}}],["this.prisma.user.create",{"_index":773,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.prisma.user.findunique",{"_index":772,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.prisma.user.update",{"_index":775,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.productservice.all",{"_index":554,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.find(number(id",{"_index":556,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productsrepository.all",{"_index":596,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productsrepository.find(id",{"_index":597,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.shoppingsessionservice.findcurrentsessionforuser(decodedtoken.sub",{"_index":214,"title":{},"body":{"controllers/CartItemController.html":{}}}],["this.shoppingsessionsrepository.checkout(createorder",{"_index":682,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["this.shoppingsessionsrepository.create(email",{"_index":673,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["this.shoppingsessionsrepository.find(keycloakid",{"_index":684,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["this.shoppingsessionsrepository.remove(id",{"_index":687,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["this.shoppingsessionsservice.checkout(decodedtoken.sub",{"_index":618,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["this.shoppingsessionsservice.findcurrentsessionforuser(decodedtoken.sub",{"_index":616,"title":{},"body":{"controllers/ShoppingSessionController.html":{}}}],["this.userservice.resolvecurrentuser(decodedtoken",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatecurrentuseraddress(decodedtoken",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatecurrentuserphone(decodedtoken",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersrepository.create(identity",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.findbykeycloakid(decodedtoken.sub",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.updateaddress(user",{"_index":817,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usersrepository.updatephone(user",{"_index":821,"title":{},"body":{"injectables/UserService.html":{}}}],["throttler",{"_index":1130,"title":{},"body":{"index.html":{}}}],["throttlerguard",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":215,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/CartItemService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/ShoppingSessionService.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":343,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["toaddressresponse",{"_index":52,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toaddressresponse(result",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["toaddressresponse(user.address",{"_index":788,"title":{},"body":{"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["tocartitemresponse",{"_index":288,"title":{},"body":{"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/ShoppingSessionResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tocartitemresponse(cartitem",{"_index":306,"title":{},"body":{"injectables/CartItemService.html":{}}}],["toimageresponse",{"_index":412,"title":{},"body":{"classes/ImageResponse.html":{},"classes/ProductResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":189,"title":{},"body":{"controllers/CartItemController.html":{},"injectables/DecodeTokenPipe.html":{},"controllers/OrderController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["token.ts",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tokens",{"_index":1201,"title":{},"body":{"index.html":{}}}],["tokenvalidation",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["tokenvalidation.offline",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["tools",{"_index":1113,"title":{},"body":{"index.html":{}}}],["toorderitemresponse",{"_index":459,"title":{},"body":{"classes/OrderItemResponse.html":{},"classes/OrderResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toorderresponse",{"_index":508,"title":{},"body":{"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toorderresponse(order",{"_index":531,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ShoppingSessionService.html":{}}}],["toproductresponse",{"_index":581,"title":{},"body":{"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toproductresponse(product",{"_index":599,"title":{},"body":{"injectables/ProductService.html":{}}}],["tort",{"_index":1472,"title":{},"body":{"license.html":{}}}],["toshoppingsessionresponse",{"_index":659,"title":{},"body":{"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toshoppingsessionresponse(session",{"_index":674,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["toshoppingsessionresponse(shoppingsession",{"_index":686,"title":{},"body":{"injectables/ShoppingSessionService.html":{}}}],["totalprice",{"_index":285,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["touserresponse",{"_index":786,"title":{},"body":{"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["touserresponse(result",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["touserresponse(user",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["tracking",{"_index":1339,"title":{},"body":{"index.html":{}}}],["transform",{"_index":389,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["transform(authheader",{"_index":393,"title":{},"body":{"injectables/DecodeTokenPipe.html":{}}}],["transformer",{"_index":372,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["trigger",{"_index":1315,"title":{},"body":{"index.html":{}}}],["triggers",{"_index":1323,"title":{},"body":{"index.html":{}}}],["true",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/CartItemRepository.html":{},"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderRepository.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["true})@type(undefined",{"_index":366,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tslib",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":14,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/AddressResponse.html":{},"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"classes/CartItemResponse.html":{},"injectables/CartItemService.html":{},"classes/CatchEverythingFilter.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/DecodeTokenPipe.html":{},"classes/ImageResponse.html":{},"interfaces/MonitoredUser.html":{},"injectables/MonitoringService.html":{},"controllers/OrderController.html":{},"classes/OrderItemResponse.html":{},"classes/OrderListResponse.html":{},"injectables/OrderRepository.html":{},"interfaces/OrderRepositoryModel.html":{},"classes/OrderResponse.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"classes/ProductListResponse.html":{},"injectables/ProductRepository.html":{},"interfaces/ProductRepositoryModel.html":{},"classes/ProductResponse.html":{},"injectables/ProductService.html":{},"controllers/ShoppingSessionController.html":{},"injectables/ShoppingSessionRepository.html":{},"interfaces/ShoppingSessionRepositoryModel.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1482,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":1119,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1087,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":407,"title":{},"body":{"injectables/DecodeTokenPipe.html":{},"classes/OrderListResponse.html":{},"classes/OrderResponse.html":{},"classes/ProductListResponse.html":{},"classes/ProductResponse.html":{},"classes/ShoppingSessionResponse.html":{}}}],["under",{"_index":1409,"title":{},"body":{"index.html":{}}}],["unhandled",{"_index":338,"title":{},"body":{"classes/CatchEverythingFilter.html":{}}}],["unit",{"_index":1139,"title":{},"body":{"index.html":{}}}],["unitprice",{"_index":286,"title":{},"body":{"classes/CartItemResponse.html":{},"classes/OrderItemResponse.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":329,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":1184,"title":{},"body":{"index.html":{}}}],["update",{"_index":243,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"injectables/UserRepository.html":{},"changelog.html":{}}}],["update(id",{"_index":253,"title":{},"body":{"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{}}}],["updateaddress",{"_index":758,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["updateaddress(user",{"_index":764,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["updatecartitem",{"_index":148,"title":{},"body":{"controllers/CartItemController.html":{}}}],["updatecartitem(id",{"_index":169,"title":{},"body":{"controllers/CartItemController.html":{}}}],["updatecartitemquantityrequest",{"_index":170,"title":{"classes/UpdateCartItemQuantityRequest.html":{}},"body":{"controllers/CartItemController.html":{},"injectables/CartItemRepository.html":{},"interfaces/CartItemRepositoryModel.html":{},"injectables/CartItemService.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"coverage.html":{}}}],["updatecurrentuseraddress",{"_index":708,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatecurrentuseraddress(decodedtoken",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["updatecurrentuseraddress(request",{"_index":713,"title":{},"body":{"controllers/UserController.html":{}}}],["updatecurrentuserphone",{"_index":709,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatecurrentuserphone(decodedtoken",{"_index":803,"title":{},"body":{"injectables/UserService.html":{}}}],["updatecurrentuserphone(request",{"_index":717,"title":{},"body":{"controllers/UserController.html":{}}}],["updatephone",{"_index":759,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["updatephone(user",{"_index":767,"title":{},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{}}}],["updates",{"_index":1316,"title":{},"body":{"index.html":{}}}],["updateuseraddressrequest",{"_index":690,"title":{"classes/UpdateUserAddressRequest.html":{}},"body":{"classes/UpdateUserAddressRequest.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserphonerequest",{"_index":702,"title":{"classes/UpdateUserPhoneRequest.html":{}},"body":{"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":819,"title":{},"body":{"injectables/UserService.html":{},"changelog.html":{}}}],["uploaded",{"_index":1337,"title":{},"body":{"index.html":{}}}],["uploads",{"_index":1360,"title":{},"body":{"index.html":{}}}],["upsert",{"_index":777,"title":{},"body":{"injectables/UserRepository.html":{}}}],["uri",{"_index":410,"title":{},"body":{"classes/ImageResponse.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":921,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":422,"title":{},"body":{"injectables/MonitoringService.html":{},"injectables/OrderRepository.html":{},"injectables/ShoppingSessionRepository.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UpdateUserPhoneRequest.html":{},"controllers/UserController.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.address",{"_index":787,"title":{},"body":{"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":789,"title":{},"body":{"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["user.firstname",{"_index":790,"title":{},"body":{"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["user.id",{"_index":776,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["user.lastname",{"_index":791,"title":{},"body":{"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["user.phone",{"_index":792,"title":{},"body":{"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["user.repository",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["user.ts",{"_index":417,"title":{},"body":{"interfaces/MonitoredUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user/user.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/ShoppingSessionModule.html":{}}}],["user?.id",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["usercontroller",{"_index":705,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":363,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/OrderResponse.html":{},"classes/ShoppingSessionResponse.html":{},"injectables/ShoppingSessionService.html":{},"miscellaneous/variables.html":{}}}],["useridentity",{"_index":730,"title":{"classes/UserIdentity.html":{}},"body":{"classes/UserIdentity.html":{},"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":76,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":1289,"title":{},"body":{"index.html":{}}}],["userrepository",{"_index":752,"title":{"injectables/UserRepository.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userrepositorymodel",{"_index":769,"title":{"interfaces/UserRepositoryModel.html":{}},"body":{"injectables/UserRepository.html":{},"interfaces/UserRepositoryModel.html":{},"coverage.html":{}}}],["userresponse",{"_index":711,"title":{"classes/UserResponse.html":{}},"body":{"controllers/UserController.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":726,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["userservice",{"_index":720,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersrepository",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["using",{"_index":1067,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":1109,"title":{},"body":{"index.html":{}}}],["v1/swagger.json",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1200,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":371,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":365,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":26,"title":{},"body":{"classes/AddCartItemRequest.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/UpdateCartItemQuantityRequest.html":{},"classes/UpdateUserAddressRequest.html":{},"classes/UserIdentity.html":{},"dependencies.html":{}}}],["value",{"_index":1216,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1239,"title":{},"body":{"index.html":{}}}],["variable",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1186,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":207,"title":{},"body":{"controllers/CartItemController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/ShoppingSessionController.html":{},"controllers/UserController.html":{},"index.html":{},"properties.html":{}}}],["versioning",{"_index":1313,"title":{},"body":{"index.html":{}}}],["via",{"_index":1254,"title":{},"body":{"index.html":{}}}],["view",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":1089,"title":{},"body":{"index.html":{}}}],["void",{"_index":324,"title":{},"body":{"classes/CatchEverythingFilter.html":{},"injectables/MonitoringService.html":{}}}],["vpc",{"_index":1354,"title":{},"body":{"index.html":{}}}],["vx.x.x",{"_index":1385,"title":{},"body":{"index.html":{}}}],["wandling",{"_index":1415,"title":{},"body":{"license.html":{}}}],["wandling/demo",{"_index":1077,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1456,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1452,"title":{},"body":{"license.html":{}}}],["web",{"_index":1069,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1469,"title":{},"body":{"license.html":{}}}],["without",{"_index":1428,"title":{},"body":{"license.html":{}}}],["wizard",{"_index":1240,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":945,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["yarn",{"_index":1175,"title":{},"body":{"index.html":{}}}],["zip",{"_index":40,"title":{},"body":{"classes/AddressResponse.html":{},"classes/UpdateUserAddressRequest.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CartItemModule.html":{},"modules/CommonModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/ShoppingSessionModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddCartItemRequest.html":{"url":"classes/AddCartItemRequest.html","title":"class - AddCartItemRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddCartItemRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/dtos/add-cart-item-request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                productId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/add-cart-item-request.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, Min } from 'class-validator';\n\nexport class AddCartItemRequest {\n  @ApiProperty()\n  @IsInt()\n  @Min(1)\n  productId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressResponse.html":{"url":"classes/AddressResponse.html","title":"class - AddressResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/dtos/address-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                apartment\n                            \n                            \n                                    \n                                    Readonly\n                                city\n                            \n                            \n                                    \n                                    Readonly\n                                country\n                            \n                            \n                                    \n                                    Readonly\n                                region\n                            \n                            \n                                    \n                                    Readonly\n                                street\n                            \n                            \n                                    \n                                    Readonly\n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        apartment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/address-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/address-response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/address-response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/address-response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/address-response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/address-response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Address } from '@prisma/client';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class AddressResponse {\n  @ApiResponseProperty()\n  readonly street: string;\n  @ApiResponseProperty()\n  readonly apartment: string;\n  @ApiResponseProperty()\n  readonly city: string;\n  @ApiResponseProperty()\n  readonly region: string;\n  @ApiResponseProperty()\n  readonly zip: string;\n  @ApiResponseProperty()\n  readonly country: string;\n}\n\nexport const toAddressResponse = (address: Address): AddressResponse => {\n  return {\n    street: address.street,\n    apartment: address.apartment,\n    city: address.city,\n    region: address.region,\n    zip: address.zip,\n    country: address.country,\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCartItemModule\n\nCartItemModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCartItemModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nShoppingSessionModule\n\nShoppingSessionModule\n\nAppModule -->\n\nShoppingSessionModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CartItemModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            ShoppingSessionModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductModule } from './product/product.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { CommonModule } from './common/common.module';\nimport { ShoppingSessionModule } from './shopping-session/shopping-session.module';\nimport { CartItemModule } from './cart-item/cart-item.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport {\n  AuthGuard,\n  KeycloakConnectModule,\n  PolicyEnforcementMode,\n  RoleGuard,\n  TokenValidation,\n} from 'nest-keycloak-connect';\nimport { APP_FILTER, APP_GUARD } from '@nestjs/core';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { SentryGlobalFilter, SentryModule } from '@sentry/nestjs/setup';\n\n@Module({\n  imports: [\n    SentryModule.forRoot(),\n    ConfigModule.forRoot(),\n    JwtModule.register({\n      global: true,\n    }),\n    ThrottlerModule.forRoot([\n      {\n        ttl: 60000,\n        limit: 10,\n      },\n    ]),\n    KeycloakConnectModule.register({\n      authServerUrl: process.env.KEYCLOAK_URL,\n      realm: process.env.KEYCLOAK_REALM,\n      clientId: process.env.KEYCLOAK_CLIENT_API,\n      secret: '',\n      tokenValidation: TokenValidation.OFFLINE,\n      policyEnforcement: PolicyEnforcementMode.PERMISSIVE,\n      realmPublicKey: process.env.KEYCLOAK_REALM_PUBLIC_KEY,\n      bearerOnly: true,\n    }),\n    CommonModule,\n    ProductModule,\n    UserModule,\n    CartItemModule,\n    OrderModule,\n    ShoppingSessionModule,\n  ],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: SentryGlobalFilter,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RoleGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n  controllers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartItemController.html":{"url":"controllers/CartItemController.html","title":"controller - CartItemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartItemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/controllers/cart-item.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createCartItem\n                            \n                            \n                                    \n                                    Async\n                                removeCartItem\n                            \n                            \n                                    \n                                    Async\n                                updateCartItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createCartItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCartItem(dto: AddCartItemRequest, decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomPost({path: '/current/cart-items', body: AddCartItemRequest, res: CartItemResponse})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/controllers/cart-item.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AddCartItemRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeCartItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeCartItem(id: string, decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomDelete({path: '/current/cart-items/:id'})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/controllers/cart-item.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateCartItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCartItem(id: string, dto: UpdateCartItemQuantityRequest, decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomPatch({path: '/current/cart-items/:id', body: UpdateCartItemQuantityRequest, res: CartItemResponse})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/controllers/cart-item.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateCartItemQuantityRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, ForbiddenException, Param } from '@nestjs/common';\nimport { CartItemService } from '../services/cart-item.service';\nimport { CartItemResponse } from '../dtos/cart-item-response';\nimport { CustomPost } from '../../common/decorators/custom-post.decorator';\nimport { Auth } from '../../common/decorators/auth.decorator';\nimport { CustomHeaders } from '../../common/decorators/custom-headers.decorator';\nimport { DecodeTokenPipe } from '../../common/pipes/decode-token-pipe';\nimport { ShoppingSessionService } from '../../shopping-session/services/shopping-session.service';\nimport { CustomDelete } from '../../common/decorators/custom-delete.decorator';\nimport { CustomPatch } from '../../common/decorators/custom-patch.decorator';\nimport { DecodedToken } from '../../common/models/decoded-token';\nimport { UpdateCartItemQuantityRequest } from '../dtos/update-cart-item-quantity-request';\nimport { AddCartItemRequest } from '../dtos/add-cart-item-request';\n\n@Auth({ roles: ['realm:buy_products'] })\n@Controller({ path: 'shopping-sessions', version: '1' })\nexport class CartItemController {\n  constructor(\n    private readonly shoppingSessionService: ShoppingSessionService,\n    private readonly cartItemService: CartItemService\n  ) {}\n\n  @CustomPost({ path: '/current/cart-items', body: AddCartItemRequest, res: CartItemResponse })\n  async createCartItem(\n    @Body() dto: AddCartItemRequest,\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    const shoppingSession = await this.shoppingSessionService.findCurrentSessionForUser(decodedToken.sub);\n\n    if (!shoppingSession) {\n      throw new ForbiddenException('No active shopping session found. Please login to start a new shopping session.');\n    }\n\n    return this.cartItemService.create(dto, shoppingSession.id);\n  }\n\n  @CustomPatch({ path: '/current/cart-items/:id', body: UpdateCartItemQuantityRequest, res: CartItemResponse })\n  async updateCartItem(\n    @Param('id') id: string,\n    @Body() dto: UpdateCartItemQuantityRequest,\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    const shoppingSession = await this.shoppingSessionService.findCurrentSessionForUser(decodedToken.sub);\n\n    if (!shoppingSession) {\n      throw new ForbiddenException('No active shopping session found. Please login to start a new shopping session.');\n    }\n\n    return this.cartItemService.update(Number(id), dto, shoppingSession.id);\n  }\n\n  @CustomDelete({ path: '/current/cart-items/:id' })\n  async removeCartItem(\n    @Param('id') id: string,\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    const shoppingSession = await this.shoppingSessionService.findCurrentSessionForUser(decodedToken.sub);\n\n    if (!shoppingSession) {\n      throw new ForbiddenException('No active shopping session found. Please login to start a new shopping session.');\n    }\n\n    await this.cartItemService.remove(Number(id), shoppingSession.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartItemModule.html":{"url":"modules/CartItemModule.html","title":"module - CartItemModule","body":"\n                   \n\n\n\n\n    Modules\n    CartItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartItemModule\n\n\n\ncluster_CartItemModule_providers\n\n\n\ncluster_CartItemModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nCartItemModule\n\nCartItemModule\n\nCartItemModule -->\n\nCommonModule->CartItemModule\n\n\n\n\n\nShoppingSessionModule\n\nShoppingSessionModule\n\nCartItemModule -->\n\nShoppingSessionModule->CartItemModule\n\n\n\n\n\nCartItemRepository\n\nCartItemRepository\n\nCartItemModule -->\n\nCartItemRepository->CartItemModule\n\n\n\n\n\nCartItemService\n\nCartItemService\n\nCartItemModule -->\n\nCartItemService->CartItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/cart-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartItemRepository\n                        \n                        \n                            CartItemService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartItemController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            ShoppingSessionModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartItemService } from './services/cart-item.service';\nimport { CartItemController } from './controllers/cart-item.controller';\nimport { CartItemRepository } from './services/cart-item.repository';\nimport { CommonModule } from '../common/common.module';\nimport { ShoppingSessionModule } from '../shopping-session/shopping-session.module';\n\n@Module({\n  imports: [CommonModule, ShoppingSessionModule],\n  controllers: [CartItemController],\n  providers: [CartItemService, CartItemRepository],\n})\nexport class CartItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartItemRepository.html":{"url":"injectables/CartItemRepository.html","title":"injectable - CartItemRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartItemRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/services/cart-item.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/cart-item/services/cart-item.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(item: AddCartItemRequest, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/services/cart-item.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            AddCartItemRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/services/cart-item.repository.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, dto: UpdateCartItemQuantityRequest, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/services/cart-item.repository.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateCartItemQuantityRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CartItem } from '@prisma/client';\nimport { HydratedCartItem } from '../entities/hydrated-cart-item';\nimport { CartItemRepositoryModel } from '../models/cart-item-repository.model';\nimport { UpdateCartItemQuantityRequest } from '../dtos/update-cart-item-quantity-request';\nimport { AddCartItemRequest } from '../dtos/add-cart-item-request';\nimport { PrismaService } from '../../common/services/prisma.service';\n\n@Injectable()\nexport class CartItemRepository implements CartItemRepositoryModel {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(item: AddCartItemRequest, shoppingSessionId: number): Promise {\n    return this.prisma.cartItem.create({\n      data: {\n        quantity: 1,\n        product: {\n          connect: {\n            id: item.productId,\n          },\n        },\n        shopping_session: {\n          connect: {\n            id: shoppingSessionId,\n          },\n        },\n      },\n      include: {\n        product: {\n          include: {\n            images: true,\n          },\n        },\n      },\n    });\n  }\n\n  update(id: number, dto: UpdateCartItemQuantityRequest, shoppingSessionId: number): Promise {\n    return this.prisma.cartItem.update({\n      where: {\n        id,\n        shopping_session_id: shoppingSessionId,\n      },\n      data: {\n        quantity: dto.quantity,\n      },\n      include: {\n        product: {\n          include: {\n            images: true,\n          },\n        },\n      },\n    });\n  }\n\n  remove(id: number, shoppingSessionId: number): Promise {\n    return this.prisma.cartItem.delete({\n      where: {\n        id,\n        shopping_session_id: shoppingSessionId,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItemRepositoryModel.html":{"url":"interfaces/CartItemRepositoryModel.html","title":"interface - CartItemRepositoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItemRepositoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/models/cart-item-repository.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(item: AddCartItemRequest, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/models/cart-item-repository.model.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            AddCartItemRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/models/cart-item-repository.model.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, dto: UpdateCartItemQuantityRequest, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/models/cart-item-repository.model.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateCartItemQuantityRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HydratedCartItem } from '../entities/hydrated-cart-item';\nimport { CartItem } from '@prisma/client';\nimport { UpdateCartItemQuantityRequest } from '../dtos/update-cart-item-quantity-request';\nimport { AddCartItemRequest } from '../dtos/add-cart-item-request';\n\nexport interface CartItemRepositoryModel {\n  create(item: AddCartItemRequest, shoppingSessionId: number): Promise;\n\n  update(id: number, dto: UpdateCartItemQuantityRequest, shoppingSessionId: number): Promise;\n\n  remove(id: number, shoppingSessionId: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartItemResponse.html":{"url":"classes/CartItemResponse.html","title":"class - CartItemResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartItemResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/dtos/cart-item-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    Readonly\n                                productId\n                            \n                            \n                                    \n                                    Readonly\n                                productName\n                            \n                            \n                                    \n                                    Readonly\n                                productThumbnail\n                            \n                            \n                                    \n                                    Readonly\n                                quantity\n                            \n                            \n                                    \n                                    Readonly\n                                totalPrice\n                            \n                            \n                                    \n                                    Readonly\n                                unitPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/cart-item-response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/cart-item-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/cart-item-response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        productThumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/cart-item-response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/cart-item-response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/cart-item-response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        unitPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/cart-item-response.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HydratedCartItem } from '../entities/hydrated-cart-item';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class CartItemResponse {\n  @ApiResponseProperty()\n  readonly id: number;\n  @ApiResponseProperty()\n  readonly productId: number;\n  @ApiResponseProperty()\n  readonly productName: string;\n  @ApiResponseProperty()\n  readonly productThumbnail: string;\n  @ApiResponseProperty()\n  readonly quantity: number;\n  @ApiResponseProperty()\n  readonly unitPrice: number;\n  @ApiResponseProperty()\n  readonly totalPrice: number;\n}\n\nexport const toCartItemResponse = (item: HydratedCartItem): CartItemResponse => {\n  const productThumbnail = item.product.images?.[0]?.uri;\n\n  return {\n    id: item.id,\n    productId: item.product_id,\n    productName: item.product.name,\n    productThumbnail,\n    quantity: item.quantity,\n    unitPrice: Number(item.product.price),\n    totalPrice: Number(item.product.price) * item.quantity,\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartItemService.html":{"url":"injectables/CartItemService.html","title":"injectable - CartItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/services/cart-item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartItemRepository: CartItemRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/cart-item/services/cart-item.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartItemRepository\n                                                  \n                                                        \n                                                                        CartItemRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: AddCartItemRequest, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/services/cart-item.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            AddCartItemRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/services/cart-item.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateCartItemQuantityRequest, shoppingSessionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/cart-item/services/cart-item.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateCartItemQuantityRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shoppingSessionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CartItemResponse, toCartItemResponse } from '../dtos/cart-item-response';\nimport { CartItemRepository } from './cart-item.repository';\nimport { UpdateCartItemQuantityRequest } from '../dtos/update-cart-item-quantity-request';\nimport { AddCartItemRequest } from '../dtos/add-cart-item-request';\n\n@Injectable()\nexport class CartItemService {\n  constructor(private readonly cartItemRepository: CartItemRepository) {}\n\n  async create(dto: AddCartItemRequest, shoppingSessionId: number): Promise {\n    const cartItem = await this.cartItemRepository.create(dto, shoppingSessionId);\n\n    if (!cartItem) {\n      throw new BadRequestException('Failed to create cart item');\n    }\n\n    return toCartItemResponse(cartItem);\n  }\n\n  async update(id: number, dto: UpdateCartItemQuantityRequest, shoppingSessionId: number): Promise {\n    const cartItem = await this.cartItemRepository.update(id, dto, shoppingSessionId);\n\n    if (!cartItem) {\n      throw new NotFoundException(`Cart item not found`);\n    }\n\n    return toCartItemResponse(cartItem);\n  }\n\n  async remove(id: number, shoppingSessionId: number): Promise {\n    const cartItem = await this.cartItemRepository.remove(id, shoppingSessionId);\n\n    if (!cartItem) {\n      throw new NotFoundException(`Cart item not found`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CatchEverythingFilter.html":{"url":"classes/CatchEverythingFilter.html","title":"class - CatchEverythingFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CatchEverythingFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/common/filters/catch-everything.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/common/filters/catch-everything.filter.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception, host: ArgumentsHost)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SentryExceptionCaptured()\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/common/filters/catch-everything.filter.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { SentryExceptionCaptured } from '@sentry/nestjs';\n\n@Catch()\nexport class CatchEverythingFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  @SentryExceptionCaptured()\n  catch(exception: unknown, host: ArgumentsHost): void {\n    const { httpAdapter } = this.httpAdapterHost;\n    const ctx = host.switchToHttp();\n    const isHttpException = exception instanceof HttpException;\n    let httpStatus: number;\n    let exceptionPrefix: 'Http' | 'Unhandled';\n\n    if (isHttpException) {\n      httpStatus = exception.getStatus();\n      exceptionPrefix = 'Http';\n    } else {\n      httpStatus = HttpStatus.INTERNAL_SERVER_ERROR;\n      exceptionPrefix = 'Unhandled';\n    }\n\n    const responseBody = {\n      statusCode: httpStatus,\n      timestamp: new Date().toISOString(),\n      path: httpAdapter.getRequestUrl(ctx.getRequest()),\n    };\n\n    httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n\n    Logger.error(`${exceptionPrefix} Exception: ${exception?.['message']}`, exception?.['stack']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nMonitoringService \n\nMonitoringService \n\n\n\nPrismaService \n\nPrismaService \n\n\n\nCommonModule\n\nCommonModule\n\nMonitoringService  -->\n\nCommonModule->MonitoringService \n\n\n\nPrismaService  -->\n\nCommonModule->PrismaService \n\n\n\n\n\nMonitoringService\n\nMonitoringService\n\nCommonModule -->\n\nMonitoringService->CommonModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCommonModule -->\n\nPrismaService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MonitoringService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MonitoringService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './services/prisma.service';\nimport { MonitoringService } from './services/monitoring.service';\n\n@Module({\n  providers: [PrismaService, MonitoringService],\n  exports: [PrismaService, MonitoringService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/dtos/create-order-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                shoppingSessionId\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOrderItemDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shoppingSessionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Min, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateOrderItemDto } from './create-order-item-dto';\n\nexport class CreateOrderDto {\n  @IsInt()\n  @Min(1)\n  shoppingSessionId: number;\n  @IsInt()\n  @Min(1)\n  userId: number;\n  @ValidateNested({ each: true })\n  @Type(() => CreateOrderItemDto)\n  items: CreateOrderItemDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderItemDto.html":{"url":"classes/CreateOrderItemDto.html","title":"class - CreateOrderItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/dtos/create-order-item-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                product_id\n                            \n                            \n                                    \n                                product_name\n                            \n                            \n                                    \n                                product_thumbnail\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@Min(0.01)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-item-dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-item-dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-item-dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-item-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/create-order-item-dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDecimal, IsInt, Min, MinLength } from 'class-validator';\n\nexport class CreateOrderItemDto {\n  @IsInt()\n  @Min(1)\n  product_id: number;\n  @MinLength(1)\n  product_name: string;\n  @MinLength(1)\n  product_thumbnail: string;\n  @IsInt()\n  @Min(1)\n  quantity: number;\n  @IsDecimal()\n  @Min(0.01)\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DecodeTokenPipe.html":{"url":"injectables/DecodeTokenPipe.html","title":"injectable - DecodeTokenPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DecodeTokenPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/common/pipes/decode-token-pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/common/pipes/decode-token-pipe.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(authHeader: string, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/common/pipes/decode-token-pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authHeader\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         DecodedToken\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { DecodedToken } from '../models/decoded-token';\n\n@Injectable()\nexport class DecodeTokenPipe implements PipeTransform {\n  constructor(private readonly jwtService: JwtService) {}\n\n  transform(authHeader: string, metadata: ArgumentMetadata): DecodedToken {\n    const [type, token] = authHeader.split(' ');\n\n    if (type === 'Bearer' && token) {\n      const { given_name, family_name, email, sub } = this.jwtService.decode(token);\n\n      return {\n        given_name,\n        family_name,\n        email,\n        sub,\n      };\n    }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImageResponse.html":{"url":"classes/ImageResponse.html","title":"class - ImageResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/product/dtos/image-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    Readonly\n                                uri\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/image-response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        uri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/image-response.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Image } from '@prisma/client';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class ImageResponse {\n  @ApiResponseProperty()\n  readonly name: string;\n  @ApiResponseProperty()\n  readonly uri: string;\n}\n\nexport const toImageResponse = (image: Image): ImageResponse => {\n  return {\n    name: image.name,\n    uri: image.uri,\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitoredUser.html":{"url":"interfaces/MonitoredUser.html","title":"interface - MonitoredUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MonitoredUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/common/models/monitored-user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MonitoredUser {\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MonitoringService.html":{"url":"injectables/MonitoringService.html","title":"injectable - MonitoringService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MonitoringService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/common/services/monitoring.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setUser\n                        \n                    \n                \n            \n            \n                \nsetUser(user: MonitoredUser)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/common/services/monitoring.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            MonitoredUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport * as Sentry from '@sentry/nestjs';\nimport { MonitoredUser } from '../models/monitored-user';\n\n@Injectable()\nexport class MonitoringService {\n  setUser(user: MonitoredUser): void {\n    const isSentryConfigured =\n      !!process.env.SENTRY_AUTH_TOKEN &&\n      !!process.env.SENTRY_ORG &&\n      !!process.env.SENTRY_DEMO_SHOP_API_PROJECT &&\n      !!process.env.SENTRY_DEMO_SHOP_API_DSN;\n\n    if (!isSentryConfigured) {\n      return;\n    }\n\n    Sentry.setUser({\n      ...user,\n      ip_address: 'none',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/controllers/order.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllOrdersOfCurrentUser\n                            \n                            \n                                    \n                                getOrderById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllOrdersOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrdersOfCurrentUser(decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomGet({res: OrderListResponse, isArray: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/order/controllers/order.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: string, decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomGet({path: ':id', res: OrderResponse})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/order/controllers/order.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param } from '@nestjs/common';\nimport { OrderService } from '../services/order.service';\nimport { OrderResponse } from '../dtos/order-response';\nimport { Auth } from '../../common/decorators/auth.decorator';\nimport { CustomGet } from '../../common/decorators/custom-get.decorator';\nimport { CustomHeaders } from '../../common/decorators/custom-headers.decorator';\nimport { DecodeTokenPipe } from '../../common/pipes/decode-token-pipe';\nimport { DecodedToken } from '../../common/models/decoded-token';\nimport { OrderListResponse } from '../dtos/order-list-response';\n\n@Auth({ roles: ['realm:buy_products'] })\n@Controller({ path: 'orders', version: '1' })\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @CustomGet({ res: OrderListResponse, isArray: true })\n  getAllOrdersOfCurrentUser(\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    return this.orderService.findByUser(decodedToken.sub);\n  }\n\n  @CustomGet({ path: ':id', res: OrderResponse })\n  getOrderById(\n    @Param('id') id: string,\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    return this.orderService.find(Number(id), decodedToken.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderItemResponse.html":{"url":"classes/OrderItemResponse.html","title":"class - OrderItemResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderItemResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/dtos/order-item-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                productId\n                            \n                            \n                                    \n                                    Readonly\n                                productName\n                            \n                            \n                                    \n                                    Readonly\n                                productThumbnail\n                            \n                            \n                                    \n                                    Readonly\n                                quantity\n                            \n                            \n                                    \n                                    Readonly\n                                totalPrice\n                            \n                            \n                                    \n                                    Readonly\n                                unitPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-item-response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-item-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        productThumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-item-response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-item-response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        totalPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-item-response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        unitPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-item-response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OrderItem } from '@prisma/client';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class OrderItemResponse {\n  @ApiResponseProperty()\n  readonly productId: number;\n  @ApiResponseProperty()\n  readonly productName: string;\n  @ApiResponseProperty()\n  readonly productThumbnail: string;\n  @ApiResponseProperty()\n  readonly quantity: number;\n  @ApiResponseProperty()\n  readonly unitPrice: number;\n  @ApiResponseProperty()\n  readonly totalPrice: number;\n}\n\nexport const toOrderItemResponse = (item: OrderItem): OrderItemResponse => {\n  return {\n    productId: item.product_id,\n    productName: item.product_name,\n    productThumbnail: item.product_thumbnail,\n    quantity: item.quantity,\n    unitPrice: Number(item.price),\n    totalPrice: Number(item.price) * item.quantity,\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderListResponse.html":{"url":"classes/OrderListResponse.html","title":"class - OrderListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/dtos/order-list-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-list-response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OrderResponse } from './order-response';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class OrderListResponse {\n  @ApiResponseProperty({ type: [OrderResponse] })\n  items: OrderResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_imports\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nCommonModule->OrderModule\n\n\n\n\n\nOrderRepository\n\nOrderRepository\n\nOrderModule -->\n\nOrderRepository->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderRepository\n                        \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderRepository } from './services/order.repository';\nimport { OrderController } from './controllers/order.controller';\nimport { CommonModule } from '../common/common.module';\nimport { OrderService } from './services/order.service';\n\n@Module({\n  imports: [CommonModule],\n  providers: [OrderRepository, OrderService],\n  controllers: [OrderController],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderRepository.html":{"url":"injectables/OrderRepository.html","title":"injectable - OrderRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/services/order.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                findManyByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/order/services/order.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: number, keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/order/services/order.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findManyByUser\n                        \n                    \n                \n            \n            \n                \nfindManyByUser(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/order/services/order.repository.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../../common/services/prisma.service';\nimport { HydratedOrder } from '../entities/hydrated-order';\nimport { OrderRepositoryModel } from '../models/order-repository.model';\n\n@Injectable()\nexport class OrderRepository implements OrderRepositoryModel {\n  constructor(private readonly prisma: PrismaService) {}\n\n  find(id: number, keycloakId: string): Promise {\n    return this.prisma.order.findUniqueOrThrow({\n      where: {\n        id,\n        user: {\n          keycloak_user_id: keycloakId,\n        },\n      },\n      include: {\n        order_items: true,\n      },\n    });\n  }\n\n  findManyByUser(keycloakId: string): Promise {\n    return this.prisma.order.findMany({\n      where: {\n        user: {\n          keycloak_user_id: keycloakId,\n        },\n      },\n      include: {\n        order_items: true,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderRepositoryModel.html":{"url":"interfaces/OrderRepositoryModel.html","title":"interface - OrderRepositoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderRepositoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/models/order-repository.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findManyByUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: number, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/order/models/order-repository.model.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findManyByUser\n                        \n                    \n                \n            \n            \n                \nfindManyByUser(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/order/models/order-repository.model.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HydratedOrder } from '../entities/hydrated-order';\n\nexport interface OrderRepositoryModel {\n  find(id: number, email: string): Promise;\n\n  findManyByUser(email: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderResponse.html":{"url":"classes/OrderResponse.html","title":"class - OrderResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/dtos/order-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                amount\n                            \n                            \n                                    \n                                    Readonly\n                                created\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    Readonly\n                                items\n                            \n                            \n                                    \n                                    Readonly\n                                status\n                            \n                            \n                                    \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderItemResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     $Enums.OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/order/dtos/order-response.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OrderItemResponse, toOrderItemResponse } from './order-item-response';\nimport { HydratedOrder } from '../entities/hydrated-order';\nimport { batchConvert } from '../../common/util/batch-convert';\nimport { $Enums } from '@prisma/client';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class OrderResponse {\n  @ApiResponseProperty()\n  readonly id: number;\n  @ApiResponseProperty()\n  readonly userId: number;\n  @ApiResponseProperty({ type: [OrderItemResponse] })\n  readonly items: OrderItemResponse[];\n  @ApiResponseProperty()\n  readonly amount: number;\n  @ApiResponseProperty({ enum: $Enums.OrderStatus })\n  readonly status: $Enums.OrderStatus;\n  @ApiResponseProperty()\n  readonly created: Date;\n}\n\nexport const toOrderResponse = (order: HydratedOrder): OrderResponse => {\n  const items = batchConvert(order.order_items, toOrderItemResponse);\n  const amount = order.order_items.reduce((acc, curr) => acc + curr.quantity * Number(curr.price), 0);\n\n  return {\n    id: order.id,\n    userId: order.user_id,\n    items,\n    amount,\n    status: order.status,\n    created: new Date(order.created_at),\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/order/services/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ordersRepository: OrderRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/order/services/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ordersRepository\n                                                  \n                                                        \n                                                                        OrderRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(id: number, keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/order/services/order.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUser(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/order/services/order.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { OrderRepository } from './order.repository';\nimport { OrderResponse, toOrderResponse } from '../dtos/order-response';\nimport { batchConvert } from '../../common/util/batch-convert';\nimport { OrderListResponse } from '../dtos/order-list-response';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly ordersRepository: OrderRepository) {}\n\n  async find(id: number, keycloakId: string): Promise {\n    const order = await this.ordersRepository.find(id, keycloakId);\n\n    if (!order) {\n      throw new NotFoundException(`Order not found`);\n    }\n\n    return toOrderResponse(order);\n  }\n\n  async findByUser(keycloakId: string): Promise {\n    return {\n      items: batchConvert(await this.ordersRepository.findManyByUser(keycloakId), toOrderResponse),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/common/services/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/common/services/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit(): Promise {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/product/controllers/product.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllProducts\n                            \n                            \n                                    \n                                getProductById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomGet({res: ProductListResponse, isArray: true})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/product/controllers/product.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomGet({path: ':id', res: ProductResponse})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/product/controllers/product.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param } from '@nestjs/common';\nimport { ProductService } from '../services/product.service';\nimport { ProductResponse } from '../dtos/product-response';\nimport { Public } from 'nest-keycloak-connect';\nimport { CustomGet } from '../../common/decorators/custom-get.decorator';\nimport { ProductListResponse } from '../dtos/product-list-response';\n\n@Public()\n@Controller({ path: 'products', version: '1', })\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @CustomGet({ res: ProductListResponse, isArray: true })\n  getAllProducts(): Promise {\n    return this.productService.all();\n  }\n\n  @CustomGet({ path: ':id', res: ProductResponse })\n  getProductById(@Param('id') id: string): Promise {\n    return this.productService.find(Number(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductListResponse.html":{"url":"classes/ProductListResponse.html","title":"class - ProductListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/product/dtos/product-list-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/product-list-response.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProductResponse } from './product-response';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class ProductListResponse {\n  @ApiResponseProperty({ type: [ProductResponse] })\n  readonly items: ProductResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nCommonModule->ProductModule\n\n\n\n\n\nProductRepository\n\nProductRepository\n\nProductModule -->\n\nProductRepository->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductRepository\n                        \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductRepository } from './services/product.repository';\nimport { ProductController } from './controllers/product.controller';\nimport { CommonModule } from '../common/common.module';\nimport { ProductService } from './services/product.service';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [ProductController],\n  providers: [ProductRepository, ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductRepository.html":{"url":"injectables/ProductRepository.html","title":"injectable - ProductRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/product/services/product.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/product/services/product.repository.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/product/services/product.repository.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/product/services/product.repository.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../../common/services/prisma.service';\nimport { HydratedProduct } from '../entities/hydrated-product';\nimport { ProductRepositoryModel } from '../models/product-repository.model';\n\n@Injectable()\nexport class ProductRepository implements ProductRepositoryModel {\n  constructor(private readonly prisma: PrismaService) {}\n\n  all(): Promise {\n    return this.prisma.product.findMany({\n      where: {\n        deleted: false,\n      },\n      include: {\n        categories: {\n          include: {\n            category: true,\n          },\n        },\n        images: true,\n      },\n    });\n  }\n\n  find(id: number): Promise {\n    return this.prisma.product.findUniqueOrThrow({\n      where: {\n        id,\n        deleted: false,\n      },\n      include: {\n        categories: {\n          include: {\n            category: true,\n          },\n        },\n        images: true,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductRepositoryModel.html":{"url":"interfaces/ProductRepositoryModel.html","title":"interface - ProductRepositoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductRepositoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/product/models/product-repository.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        all\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/product/models/product-repository.model.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/product/models/product-repository.model.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HydratedProduct } from '../entities/hydrated-product';\n\nexport interface ProductRepositoryModel {\n  all(): Promise;\n  find(id: number): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductResponse.html":{"url":"classes/ProductResponse.html","title":"class - ProductResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/product/dtos/product-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                categories\n                            \n                            \n                                    \n                                    Readonly\n                                description\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    Readonly\n                                images\n                            \n                            \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    Readonly\n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/product-response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/product-response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/product-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/product-response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/product-response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/product/dtos/product-response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HydratedProduct } from '../entities/hydrated-product';\nimport { ImageResponse, toImageResponse } from './image-response';\nimport { batchConvert } from '../../common/util/batch-convert';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class ProductResponse {\n  @ApiResponseProperty()\n  readonly id: number;\n  @ApiResponseProperty()\n  readonly name: string;\n  @ApiResponseProperty()\n  readonly description: string;\n  @ApiResponseProperty()\n  readonly categories: string[];\n  @ApiResponseProperty({ type: [ImageResponse] })\n  readonly images: ImageResponse[];\n  @ApiResponseProperty()\n  readonly price: number;\n}\n\nexport const toProductResponse = (product: HydratedProduct): ProductResponse => {\n  const categories = product.categories.map(category => category.category.name);\n  const images = batchConvert(product.images, toImageResponse);\n\n  return {\n    id: product.id,\n    name: product.name,\n    description: product.description,\n    categories,\n    images,\n    price: Number(product.price),\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/product/services/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                find\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepository: ProductRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/product/services/product.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepository\n                                                  \n                                                        \n                                                                        ProductRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        all\n                        \n                    \n                \n            \n            \n                \n                        \n                    all()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/product/services/product.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/product/services/product.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { ProductRepository } from './product.repository';\nimport { ProductResponse, toProductResponse } from '../dtos/product-response';\nimport { batchConvert } from '../../common/util/batch-convert';\nimport { ProductListResponse } from '../dtos/product-list-response';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly productsRepository: ProductRepository) {}\n\n  async all(): Promise {\n    return {\n      items: batchConvert(await this.productsRepository.all(), toProductResponse),\n    };\n  }\n\n  async find(id: number): Promise {\n    const product = await this.productsRepository.find(id);\n\n    if (!product) {\n      throw new NotFoundException(`Product not found`);\n    }\n\n    return toProductResponse(product);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ShoppingSessionController.html":{"url":"controllers/ShoppingSessionController.html","title":"controller - ShoppingSessionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ShoppingSessionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/shopping-session/controllers/shopping-session.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                checkout\n                            \n                            \n                                    \n                                    Async\n                                resolveShoppingSessionOfCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout(decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomPost({path: 'checkout', res: OrderResponse})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/controllers/shopping-session.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        resolveShoppingSessionOfCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveShoppingSessionOfCurrentUser(decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomPost({path: 'current', res: ShoppingSessionResponse})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/controllers/shopping-session.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { ShoppingSessionService } from '../services/shopping-session.service';\nimport { ShoppingSessionResponse } from '../dtos/shopping-session-response';\nimport { Auth } from '../../common/decorators/auth.decorator';\nimport { CustomPost } from '../../common/decorators/custom-post.decorator';\nimport { CustomHeaders } from '../../common/decorators/custom-headers.decorator';\nimport { DecodeTokenPipe } from '../../common/pipes/decode-token-pipe';\nimport { DecodedToken } from '../../common/models/decoded-token';\nimport { OrderResponse } from '../../order/dtos/order-response';\nimport { Controller } from '@nestjs/common';\n\n@Auth({ roles: ['realm:buy_products'] })\n@Controller({ path: 'shopping-sessions', version: '1' })\nexport class ShoppingSessionController {\n  constructor(private readonly shoppingSessionsService: ShoppingSessionService) {}\n\n  @CustomPost({ path: 'current', res: ShoppingSessionResponse })\n  async resolveShoppingSessionOfCurrentUser(\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    return this.shoppingSessionsService.findCurrentSessionForUser(decodedToken.sub);\n  }\n\n  @CustomPost({ path: 'checkout', res: OrderResponse })\n  async checkout(@CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken): Promise {\n    return this.shoppingSessionsService.checkout(decodedToken.sub);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShoppingSessionModule.html":{"url":"modules/ShoppingSessionModule.html","title":"module - ShoppingSessionModule","body":"\n                   \n\n\n\n\n    Modules\n    ShoppingSessionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShoppingSessionModule\n\n\n\ncluster_ShoppingSessionModule_providers\n\n\n\ncluster_ShoppingSessionModule_exports\n\n\n\ncluster_ShoppingSessionModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nShoppingSessionModule\n\nShoppingSessionModule\n\nShoppingSessionModule -->\n\nCommonModule->ShoppingSessionModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nShoppingSessionModule -->\n\nOrderModule->ShoppingSessionModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nShoppingSessionModule -->\n\nUserModule->ShoppingSessionModule\n\n\n\n\n\nShoppingSessionService \n\nShoppingSessionService \n\nShoppingSessionService  -->\n\nShoppingSessionModule->ShoppingSessionService \n\n\n\n\n\nShoppingSessionRepository\n\nShoppingSessionRepository\n\nShoppingSessionModule -->\n\nShoppingSessionRepository->ShoppingSessionModule\n\n\n\n\n\nShoppingSessionService\n\nShoppingSessionService\n\nShoppingSessionModule -->\n\nShoppingSessionService->ShoppingSessionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app/shopping-session/shopping-session.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ShoppingSessionRepository\n                        \n                        \n                            ShoppingSessionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ShoppingSessionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ShoppingSessionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ShoppingSessionService } from './services/shopping-session.service';\nimport { ShoppingSessionController } from './controllers/shopping-session.controller';\nimport { ShoppingSessionRepository } from './services/shopping-session.repository';\nimport { CommonModule } from '../common/common.module';\nimport { UserModule } from '../user/user.module';\nimport { OrderModule } from '../order/order.module';\n\n@Module({\n  imports: [CommonModule, UserModule, OrderModule],\n  controllers: [ShoppingSessionController],\n  providers: [ShoppingSessionService, ShoppingSessionRepository],\n  exports: [ShoppingSessionService],\n})\nexport class ShoppingSessionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingSessionRepository.html":{"url":"injectables/ShoppingSessionRepository.html","title":"injectable - ShoppingSessionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingSessionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/shopping-session/services/shopping-session.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                create\n                            \n                            \n                                find\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/shopping-session/services/shopping-session.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout(dto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.repository.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.repository.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.repository.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number, keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.repository.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ShoppingSession } from '@prisma/client';\nimport { PrismaService } from '../../common/services/prisma.service';\nimport { HydratedShoppingSession } from '../entities/hydrated-shopping-session';\nimport { ShoppingSessionRepositoryModel } from '../models/shopping-session-repository.model';\nimport { CreateOrderDto } from '../../order/dtos/create-order-dto';\nimport { HydratedOrder } from '../../order/entities/hydrated-order';\n\n@Injectable()\nexport class ShoppingSessionRepository implements ShoppingSessionRepositoryModel {\n  constructor(private readonly prisma: PrismaService) {}\n\n  find(keycloakId: string): Promise {\n    return this.prisma.shoppingSession.findFirst({\n      orderBy: {\n        created_at: 'desc',\n      },\n      where: {\n        user: {\n          keycloak_user_id: keycloakId,\n        },\n      },\n      include: {\n        cart_items: {\n          include: {\n            product: {\n              include: {\n                images: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n\n  create(keycloakId: string): Promise {\n    return this.prisma.shoppingSession.create({\n      data: {\n        user: {\n          connect: { keycloak_user_id: keycloakId },\n        },\n      },\n      include: {\n        cart_items: {\n          include: {\n            product: {\n              include: {\n                images: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n\n  remove(id: number, keycloakId: string): Promise {\n    return this.prisma.shoppingSession.delete({\n      where: {\n        id,\n        user: {\n          keycloak_user_id: keycloakId,\n        },\n      },\n    });\n  }\n\n  async checkout(dto: CreateOrderDto): Promise {\n    const [hydratedOrder] = await this.prisma.$transaction([\n      this.prisma.order.create({\n        data: {\n          user: {\n            connect: { id: dto.userId },\n          },\n          order_items: {\n            createMany: {\n              data: dto.items,\n            },\n          },\n          status: 'Created',\n        },\n        include: {\n          order_items: true,\n        },\n      }),\n      this.prisma.shoppingSession.delete({\n        where: {\n          id: dto.shoppingSessionId,\n        },\n      }),\n    ]);\n\n    return hydratedOrder;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShoppingSessionRepositoryModel.html":{"url":"interfaces/ShoppingSessionRepositoryModel.html","title":"interface - ShoppingSessionRepositoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShoppingSessionRepositoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/shopping-session/models/shopping-session-repository.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        remove\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/models/shopping-session-repository.model.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/models/shopping-session-repository.model.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/models/shopping-session-repository.model.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HydratedShoppingSession } from '../entities/hydrated-shopping-session';\nimport { ShoppingSession } from '@prisma/client';\n\nexport interface ShoppingSessionRepositoryModel {\n  find(email: string): Promise;\n  create(email: string): Promise;\n  remove(id: number, email: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShoppingSessionResponse.html":{"url":"classes/ShoppingSessionResponse.html","title":"class - ShoppingSessionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShoppingSessionResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/shopping-session/dtos/shopping-session-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/shopping-session/dtos/shopping-session-response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartItemResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/shopping-session/dtos/shopping-session-response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/shopping-session/dtos/shopping-session-response.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HydratedShoppingSession } from '../entities/hydrated-shopping-session';\nimport { CartItemResponse, toCartItemResponse } from '../../cart-item/dtos/cart-item-response';\nimport { batchConvert } from '../../common/util/batch-convert';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class ShoppingSessionResponse {\n  @ApiResponseProperty()\n  id: number;\n  @ApiResponseProperty()\n  userId: number;\n  @ApiResponseProperty({ type: [CartItemResponse] })\n  items: CartItemResponse[];\n}\n\nexport const toShoppingSessionResponse = (shoppingSession: HydratedShoppingSession): ShoppingSessionResponse => {\n  const items = batchConvert(shoppingSession.cart_items, toCartItemResponse);\n\n  return {\n    id: shoppingSession.id,\n    userId: shoppingSession.user_id,\n    items,\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShoppingSessionService.html":{"url":"injectables/ShoppingSessionService.html","title":"injectable - ShoppingSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShoppingSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/shopping-session/services/shopping-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findCurrentSessionForUser\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shoppingSessionsRepository: ShoppingSessionRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/shopping-session/services/shopping-session.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shoppingSessionsRepository\n                                                  \n                                                        \n                                                                        ShoppingSessionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findCurrentSessionForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCurrentSessionForUser(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/shopping-session/services/shopping-session.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, Injectable, NotFoundException } from '@nestjs/common';\nimport { ShoppingSessionResponse, toShoppingSessionResponse } from '../dtos/shopping-session-response';\nimport { ShoppingSessionRepository } from './shopping-session.repository';\nimport { OrderResponse, toOrderResponse } from '../../order/dtos/order-response';\nimport { CreateOrderDto } from '../../order/dtos/create-order-dto';\n\n@Injectable()\nexport class ShoppingSessionService {\n  constructor(private readonly shoppingSessionsRepository: ShoppingSessionRepository) {}\n\n  async create(email: string): Promise {\n    const session = await this.shoppingSessionsRepository.create(email);\n\n    if (!session) {\n      throw new BadRequestException('Failed to create shopping session');\n    }\n\n    return toShoppingSessionResponse(session);\n  }\n\n  async checkout(keycloakId: string): Promise {\n    const shoppingSession = await this.findCurrentSessionForUser(keycloakId);\n\n    if (!shoppingSession) {\n      throw new ForbiddenException('No active shopping session found. Please login to start a new shopping session.');\n    }\n\n    const createOrder: CreateOrderDto = {\n      shoppingSessionId: shoppingSession.id,\n      userId: shoppingSession.userId,\n      items: shoppingSession.items.map(item => ({\n        product_id: item.productId,\n        product_name: item.productName,\n        product_thumbnail: item.productThumbnail,\n        quantity: item.quantity,\n        price: item.unitPrice,\n      })),\n    };\n\n    const order = await this.shoppingSessionsRepository.checkout(createOrder);\n\n    if (!order) {\n      throw new Error('Order could not be created');\n    }\n\n    return toOrderResponse(order);\n  }\n\n  async findCurrentSessionForUser(keycloakId: string): Promise {\n    const shoppingSession = await this.shoppingSessionsRepository.find(keycloakId);\n\n    if (!shoppingSession) {\n      return this.create(keycloakId);\n    }\n\n    return toShoppingSessionResponse(shoppingSession);\n  }\n\n  async remove(id: number, keycloakId: string): Promise {\n    const shoppingSession = await this.shoppingSessionsRepository.remove(id, keycloakId);\n\n    if (!shoppingSession) {\n      throw new NotFoundException(`Shopping session not found`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartItemQuantityRequest.html":{"url":"classes/UpdateCartItemQuantityRequest.html","title":"class - UpdateCartItemQuantityRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartItemQuantityRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/cart-item/dtos/update-cart-item-quantity-request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsInt()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/cart-item/dtos/update-cart-item-quantity-request.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, Min } from 'class-validator';\n\nexport class UpdateCartItemQuantityRequest {\n  @ApiProperty()\n  @IsInt()\n  @Min(1)\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserAddressRequest.html":{"url":"classes/UpdateUserAddressRequest.html","title":"class - UpdateUserAddressRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserAddressRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/dtos/update-user-address-request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                apartment\n                            \n                            \n                                    \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    Optional\n                                region\n                            \n                            \n                                    \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                    \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        apartment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/update-user-address-request.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/update-user-address-request.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/update-user-address-request.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/update-user-address-request.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/update-user-address-request.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        zip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/update-user-address-request.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, MinLength } from 'class-validator';\n\nexport class UpdateUserAddressRequest {\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  street: string;\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  apartment: string;\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  city: string;\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  zip: string;\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  country: string;\n  @ApiProperty({ required: false })\n  region?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserPhoneRequest.html":{"url":"classes/UpdateUserPhoneRequest.html","title":"class - UpdateUserPhoneRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserPhoneRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/dtos/update-user-phone-request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/update-user-phone-request.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUserPhoneRequest {\n  @ApiProperty()\n  phone?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/controllers/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                resolveCurrentUser\n                            \n                            \n                                    \n                                    Async\n                                updateCurrentUserAddress\n                            \n                            \n                                    \n                                    Async\n                                updateCurrentUserPhone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        resolveCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveCurrentUser(decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomPost({path: 'me', res: UserResponse})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/user/controllers/user.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUserAddress(request: UpdateUserAddressRequest, decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomPut({path: 'me/address', res: AddressResponse, body: UpdateUserAddressRequest})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/user/controllers/user.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            UpdateUserAddressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateCurrentUserPhone\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUserPhone(request: UpdateUserPhoneRequest, decodedToken: DecodedToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @CustomPatch({path: 'me/phone', res: UserResponse, body: UpdateUserPhoneRequest})\n                \n            \n\n                    \n                        \n                            Defined in apps/backend/src/app/user/controllers/user.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            UpdateUserPhoneRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { UserService } from '../services/user.service';\nimport { UserResponse } from '../dtos/user-response';\nimport { CustomHeaders } from '../../common/decorators/custom-headers.decorator';\nimport { DecodeTokenPipe } from '../../common/pipes/decode-token-pipe';\nimport { Auth } from '../../common/decorators/auth.decorator';\nimport { DecodedToken } from '../../common/models/decoded-token';\nimport { CustomPost } from '../../common/decorators/custom-post.decorator';\nimport { CustomPut } from '../../common/decorators/custom-put.decorator';\nimport { UpdateUserAddressRequest } from '../dtos/update-user-address-request';\nimport { Body, Controller } from '@nestjs/common';\nimport { CustomPatch } from '../../common/decorators/custom-patch.decorator';\nimport { AddressResponse } from '../dtos/address-response';\nimport { UpdateUserPhoneRequest } from '../dtos/update-user-phone-request';\n\n@Auth({ roles: ['realm:buy_products'] })\n@Controller({ path: 'users', version: '1' })\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @CustomPost({ path: 'me', res: UserResponse })\n  async resolveCurrentUser(\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    return await this.userService.resolveCurrentUser(decodedToken);\n  }\n\n  @CustomPut({ path: 'me/address', res: AddressResponse, body: UpdateUserAddressRequest })\n  async updateCurrentUserAddress(\n    @Body() request: UpdateUserAddressRequest,\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    return await this.userService.updateCurrentUserAddress(decodedToken, request);\n  }\n\n  @CustomPatch({ path: 'me/phone', res: UserResponse, body: UpdateUserPhoneRequest })\n  async updateCurrentUserPhone(\n    @Body() request: UpdateUserPhoneRequest,\n    @CustomHeaders('authorization', DecodeTokenPipe) decodedToken: DecodedToken\n  ): Promise {\n    return await this.userService.updateCurrentUserPhone(decodedToken, request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserIdentity.html":{"url":"classes/UserIdentity.html","title":"class - UserIdentity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserIdentity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/dtos/user-identity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                keycloakUserId\n                            \n                            \n                                    \n                                    \n                                    \n                                lastname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-identity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-identity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        keycloakUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-identity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-identity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, IsUUID, MinLength } from 'class-validator';\nimport { DecodedToken } from '../../common/models/decoded-token';\n\nexport class UserIdentity {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsUUID()\n  keycloakUserId: string;\n\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  firstname: string;\n\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  lastname: string;\n}\n\nexport const fromDecodedToken = (decodedToken: DecodedToken): UserIdentity => ({\n  firstname: decodedToken.given_name,\n  lastname: decodedToken.family_name,\n  email: decodedToken.email,\n  keycloakUserId: decodedToken.sub,\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/backend/src/app/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controllers/user.controller';\nimport { UserRepository } from './services/user.repository';\nimport { CommonModule } from '../common/common.module';\nimport { UserService } from './services/user.service';\n\n@Module({\n  imports: [CommonModule],\n  controllers: [UserController],\n  providers: [UserRepository, UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/services/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findByKeycloakId\n                            \n                            \n                                    Async\n                                updateAddress\n                            \n                            \n                                    Async\n                                updatePhone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/user/services/user.repository.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: UserIdentity)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.repository.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserIdentity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByKeycloakId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByKeycloakId(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.repository.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAddress(user: HydratedUser, request: UpdateUserAddressRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.repository.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            HydratedUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateUserAddressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePhone\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePhone(user: HydratedUser, request: UpdateUserPhoneRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.repository.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            HydratedUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateUserPhoneRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../../common/services/prisma.service';\nimport { HydratedUser } from '../entities/hydrated-user';\nimport { UserRepositoryModel } from '../models/user-repository.model';\n\nimport { UserIdentity } from '../dtos/user-identity';\nimport { Address } from '@prisma/client';\nimport { UpdateUserAddressRequest } from '../dtos/update-user-address-request';\nimport { UpdateUserPhoneRequest } from '../dtos/update-user-phone-request';\n\n@Injectable()\nexport class UserRepository implements UserRepositoryModel {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findByKeycloakId(keycloakId: string): Promise {\n    return this.prisma.user.findUnique({\n      where: {\n        keycloak_user_id: keycloakId,\n        deleted: false,\n      },\n      include: {\n        address: true,\n      },\n    });\n  }\n\n  async create(dto: UserIdentity): Promise {\n    const { firstname, lastname, email, keycloakUserId } = dto;\n    return this.prisma.user.create({\n      data: {\n        firstname,\n        lastname,\n        email,\n        keycloak_user_id: keycloakUserId,\n      },\n      include: {\n        address: true,\n      },\n    });\n  }\n\n  async updateAddress(user: HydratedUser, request: UpdateUserAddressRequest): Promise {\n    const result = await this.prisma.user.update({\n      where: {\n        id: user.id,\n      },\n      data: {\n        address: {\n          upsert: {\n            create: request,\n            update: request,\n          },\n        },\n      },\n      include: {\n        address: true,\n      },\n    });\n\n    return result.address;\n  }\n\n  async updatePhone(user: HydratedUser, request: UpdateUserPhoneRequest): Promise {\n    return this.prisma.user.update({\n      where: {\n        id: user.id,\n      },\n      data: {\n        phone: request.phone,\n      },\n      include: {\n        address: true,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRepositoryModel.html":{"url":"interfaces/UserRepositoryModel.html","title":"interface - UserRepositoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRepositoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/models/user-repository.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findByKeycloakId\n                                    \n                                \n                                \n                                    \n                                        updateAddress\n                                    \n                                \n                                \n                                    \n                                        updatePhone\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: UserIdentity)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/models/user-repository.model.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UserIdentity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByKeycloakId\n                        \n                    \n                \n            \n            \n                \nfindByKeycloakId(keycloakId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/models/user-repository.model.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keycloakId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAddress\n                        \n                    \n                \n            \n            \n                \nupdateAddress(user: HydratedUser, request: UpdateUserAddressRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/models/user-repository.model.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            HydratedUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateUserAddressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePhone\n                        \n                    \n                \n            \n            \n                \nupdatePhone(user: HydratedUser, request: UpdateUserPhoneRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/models/user-repository.model.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            HydratedUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateUserPhoneRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HydratedUser } from '../entities/hydrated-user';\nimport { UserIdentity } from '../dtos/user-identity';\nimport { UpdateUserPhoneRequest } from '../dtos/update-user-phone-request';\nimport { UpdateUserAddressRequest } from '../dtos/update-user-address-request';\nimport { Address } from '@prisma/client';\n\nexport interface UserRepositoryModel {\n  findByKeycloakId(keycloakId: string): Promise;\n\n  create(dto: UserIdentity): Promise;\n\n  updateAddress(user: HydratedUser, request: UpdateUserAddressRequest): Promise;\n\n  updatePhone(user: HydratedUser, request: UpdateUserPhoneRequest): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/dtos/user-response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    Readonly\n                                firstname\n                            \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                    \n                                    Readonly\n                                lastname\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty({type: AddressResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiResponseProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/backend/src/app/user/dtos/user-response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HydratedUser } from '../entities/hydrated-user';\nimport { AddressResponse, toAddressResponse } from './address-response';\nimport { ApiResponseProperty } from '@nestjs/swagger';\n\nexport class UserResponse {\n  @ApiResponseProperty()\n  readonly id: number;\n  @ApiResponseProperty()\n  readonly email: string;\n  @ApiResponseProperty()\n  readonly firstname: string;\n  @ApiResponseProperty()\n  readonly lastname: string;\n  @ApiResponseProperty()\n  readonly phone?: string;\n  @ApiResponseProperty({ type: AddressResponse })\n  readonly address?: AddressResponse;\n}\n\nexport const toUserResponse = (user: HydratedUser): UserResponse => {\n  const address = user.address && toAddressResponse(user.address);\n\n  return {\n    id: user.id,\n    email: user.email,\n    firstname: user.firstname,\n    lastname: user.lastname,\n    phone: user.phone,\n    address,\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/backend/src/app/user/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                resolveCurrentUser\n                            \n                            \n                                    Async\n                                updateCurrentUserAddress\n                            \n                            \n                                    Async\n                                updateCurrentUserPhone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(monitoringService: MonitoringService, usersRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/backend/src/app/user/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitoringService\n                                                  \n                                                        \n                                                                        MonitoringService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(identity: UserIdentity)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            UserIdentity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resolveCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveCurrentUser(decodedToken: DecodedToken)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCurrentUserAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUserAddress(decodedToken: DecodedToken, request: UpdateUserAddressRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateUserAddressRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCurrentUserPhone\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUserPhone(decodedToken: DecodedToken, request: UpdateUserPhoneRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/backend/src/app/user/services/user.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decodedToken\n                                            \n                                                            DecodedToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                            UpdateUserPhoneRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport { toUserResponse, UserResponse } from '../dtos/user-response';\nimport { fromDecodedToken, UserIdentity } from '../dtos/user-identity';\nimport { DecodedToken } from '../../common/models/decoded-token';\nimport { MonitoringService } from '../../common/services/monitoring.service';\nimport { UpdateUserAddressRequest } from '@demo-shop/api';\nimport { AddressResponse, toAddressResponse } from '../dtos/address-response';\nimport { UpdateUserPhoneRequest } from '../dtos/update-user-phone-request';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly monitoringService: MonitoringService,\n    private readonly usersRepository: UserRepository\n  ) {}\n\n  async resolveCurrentUser(decodedToken: DecodedToken): Promise {\n    const user = await this.usersRepository.findByKeycloakId(decodedToken.sub);\n    if (!user) {\n      return this.createUser(fromDecodedToken(decodedToken));\n    }\n\n    this.monitoringService.setUser({ id: user?.id });\n\n    return toUserResponse(user);\n  }\n\n  async createUser(identity: UserIdentity): Promise {\n    const user = await this.usersRepository.create(identity);\n    if (!user) {\n      throw new BadRequestException('Failed to create user');\n    }\n\n    this.monitoringService.setUser({ id: user?.id });\n\n    return toUserResponse(user);\n  }\n\n  async updateCurrentUserAddress(\n    decodedToken: DecodedToken,\n    request: UpdateUserAddressRequest\n  ): Promise {\n    const user = await this.usersRepository.findByKeycloakId(decodedToken.sub);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const result = await this.usersRepository.updateAddress(user, request);\n    if (!result) {\n      throw new InternalServerErrorException('Error updating user address');\n    }\n\n    return toAddressResponse(result);\n  }\n\n  async updateCurrentUserPhone(decodedToken: DecodedToken, request: UpdateUserPhoneRequest): Promise {\n    const user = await this.usersRepository.findByKeycloakId(decodedToken.sub);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n\n    const result = await this.usersRepository.updatePhone(user, request);\n    if (!result) {\n      throw new InternalServerErrorException('Error updating user phone');\n    }\n\n    return toUserResponse(result);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\n0.3.23 (2025-03-15)\n0.3.22 (2025-03-14)\nFeatures\n\nfrontend: add navigation to products from cart and checkout (#54) (22daee8)\n\n0.3.21 (2025-03-14)\n0.3.20 (2025-03-14)\nFeatures\n\norder: update styling of list and detail view (#52) (54417dc)\n\n0.3.19 (2025-03-13)\nFeatures\n\nbackend: add endpoints for updating user address and phone (#51) (f49f741)\n\n0.3.18 (2025-03-12)\n0.3.17 (2025-03-12)\nBug Fixes\n\nfix data fetching for deep links (#49) (634f627)\n\n0.3.16 (2025-03-12)\nBug Fixes\n\nfix broken image links by displaying a fallback image (#48) (5374a97)\n\n0.3.15 (2025-03-12)\n0.3.14 (2025-03-12)\n0.3.13 (2025-03-12)\n0.3.12 (2025-03-12)\n0.3.11 (2025-03-10)\n0.3.10 (2025-03-10)\n0.3.9 (2025-03-10)\n0.3.8 (2025-03-10)\n0.3.7 (2025-03-10)\n0.3.6 (2025-03-02)\n0.3.5 (2025-01-09)\n0.3.4 (2025-01-09)\n0.3.3 (2025-01-08)\n0.3.2 (2025-01-06)\n0.3.1 (2025-01-06)\nFeatures\n\nbackend: update errors to be more descriptive\n\nBug Fixes\n\ncart: fix checkout form autocomplete labels\nfix deployment issues\nfix issues raised by sonar\nfix keycloak deployment\n\n0.3.0 (2024-11-05)\n\nadd helmet, enable rate limiting and add ssl\nauth: add keycloak\n\n0.2.0 (2024-09-24)\n\nsimplify data model for a faster mvp\n\n0.1.0 (2024-08-22)\n\nbackend: update data model\nbackend: add dto factories\nrefactor frontend to use api instead of mock data\n\n0.0.1 (2024-08-20)\n\nbackend: Fix relationship between Skus and attributes\nbackend: add order dtos and hydrated entities\nbackend: add product dtos, hydrated entities and fix sku attribute relationship\nbackend: add user dto and openapi defintion\n\n0.0.0 (2024-08-20)\n\nnx: Added Nx Cloud token to your nx.json\nnx: Generated CI workflow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/backend/src/app/cart-item/controllers/cart-item.controller.ts\n            \n            controller\n            CartItemController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/cart-item/dtos/add-cart-item-request.ts\n            \n            class\n            AddCartItemRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app/cart-item/dtos/cart-item-response.ts\n            \n            class\n            CartItemResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/cart-item/dtos/cart-item-response.ts\n            \n            variable\n            toCartItemResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/cart-item/dtos/update-cart-item-quantity-request.ts\n            \n            class\n            UpdateCartItemQuantityRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/cart-item/entities/hydrated-cart-item.ts\n            \n            type alias\n            HydratedCartItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/cart-item/models/cart-item-repository.model.ts\n            \n            interface\n            CartItemRepositoryModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/cart-item/services/cart-item.repository.ts\n            \n            injectable\n            CartItemRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/backend/src/app/cart-item/services/cart-item.service.ts\n            \n            injectable\n            CartItemService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/decorators/auth.decorator.ts\n            \n            function\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/decorators/custom-delete.decorator.ts\n            \n            function\n            CustomDelete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/decorators/custom-get.decorator.ts\n            \n            function\n            CustomGet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/decorators/custom-headers.decorator.ts\n            \n            variable\n            CustomHeaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/decorators/custom-patch.decorator.ts\n            \n            function\n            CustomPatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/decorators/custom-post.decorator.ts\n            \n            function\n            CustomPost\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/decorators/custom-put.decorator.ts\n            \n            function\n            CustomPut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/common/filters/catch-everything.filter.ts\n            \n            class\n            CatchEverythingFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/models/decoded-token.ts\n            \n            type alias\n            DecodedToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/common/models/monitored-user.ts\n            \n            interface\n            MonitoredUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app/common/pipes/decode-token-pipe.ts\n            \n            injectable\n            DecodeTokenPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/src/app/common/services/monitoring.service.ts\n            \n            injectable\n            MonitoringService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app/common/services/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/util/batch-convert.ts\n            \n            variable\n            batchConvert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/common/util/enable-swagger.ts\n            \n            variable\n            enableSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/controllers/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/dtos/create-order-dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/dtos/create-order-item-dto.ts\n            \n            class\n            CreateOrderItemDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/dtos/order-item-response.ts\n            \n            class\n            OrderItemResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/order/dtos/order-item-response.ts\n            \n            variable\n            toOrderItemResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/dtos/order-list-response.ts\n            \n            class\n            OrderListResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/dtos/order-response.ts\n            \n            class\n            OrderResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/order/dtos/order-response.ts\n            \n            variable\n            toOrderResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/order/entities/hydrated-order.ts\n            \n            type alias\n            HydratedOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/models/order-repository.model.ts\n            \n            interface\n            OrderRepositoryModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/services/order.repository.ts\n            \n            injectable\n            OrderRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/order/services/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/product/controllers/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/src/app/product/dtos/image-response.ts\n            \n            class\n            ImageResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/product/dtos/image-response.ts\n            \n            variable\n            toImageResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/product/dtos/product-list-response.ts\n            \n            class\n            ProductListResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app/product/dtos/product-response.ts\n            \n            class\n            ProductResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/product/dtos/product-response.ts\n            \n            variable\n            toProductResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/product/entities/hydrated-product.ts\n            \n            type alias\n            HydratedProduct\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/product/models/product-repository.model.ts\n            \n            interface\n            ProductRepositoryModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/src/app/product/services/product.repository.ts\n            \n            injectable\n            ProductRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/product/services/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/shopping-session/controllers/shopping-session.controller.ts\n            \n            controller\n            ShoppingSessionController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/backend/src/app/shopping-session/dtos/shopping-session-response.ts\n            \n            class\n            ShoppingSessionResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/shopping-session/dtos/shopping-session-response.ts\n            \n            variable\n            toShoppingSessionResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/shopping-session/entities/hydrated-shopping-session.ts\n            \n            type alias\n            HydratedShoppingSession\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/shopping-session/models/shopping-session-repository.model.ts\n            \n            interface\n            ShoppingSessionRepositoryModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/shopping-session/services/shopping-session.repository.ts\n            \n            injectable\n            ShoppingSessionRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/app/shopping-session/services/shopping-session.service.ts\n            \n            injectable\n            ShoppingSessionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/controllers/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/dtos/address-response.ts\n            \n            class\n            AddressResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/user/dtos/address-response.ts\n            \n            variable\n            toAddressResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/dtos/update-user-address-request.ts\n            \n            class\n            UpdateUserAddressRequest\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/dtos/update-user-phone-request.ts\n            \n            class\n            UpdateUserPhoneRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/dtos/user-identity.ts\n            \n            class\n            UserIdentity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/user/dtos/user-identity.ts\n            \n            variable\n            fromDecodedToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/dtos/user-response.ts\n            \n            class\n            UserResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/user/dtos/user-response.ts\n            \n            variable\n            toUserResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/app/user/entities/hydrated-user.ts\n            \n            type alias\n            HydratedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/models/user-repository.model.ts\n            \n            interface\n            UserRepositoryModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/services/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/backend/src/app/user/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        apps/backend/src/instrument.ts\n            \n            variable\n            isProd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/instrument.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        apps/backend/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 18.2.9\n        \n            @angular/build : 18.2.9\n        \n            @angular/common : 18.2.9\n        \n            @angular/compiler : 18.2.9\n        \n            @angular/core : 18.2.9\n        \n            @angular/forms : 18.2.9\n        \n            @angular/platform-browser : 18.2.9\n        \n            @angular/platform-browser-dynamic : 18.2.9\n        \n            @angular/router : 18.2.9\n        \n            @date-fns/utc : ^2.1.0\n        \n            @nestjs/common : ^10.0.2\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.2\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.2\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/throttler : ^6.2.1\n        \n            @ngrx/signals : 18.1.1\n        \n            @prisma/client : ^5.18.0\n        \n            @sentry/angular : ^8.41.0\n        \n            @sentry/cli : ^2.39.1\n        \n            @sentry/nestjs : ^8.38.0\n        \n            @sentry/profiling-node : ^8.38.0\n        \n            axios : ^1.6.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            date-fns : ^4.1.0\n        \n            helmet : ^8.0.0\n        \n            html2canvas : ^1.4.1\n        \n            jspdf : ^2.5.2\n        \n            keycloak-connect : ^26.0.0\n        \n            keycloak-js : 22.0.5\n        \n            nest-keycloak-connect : ^1.10.1\n        \n            prisma : ^5.18.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : 0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Auth   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            CustomDelete   (apps/.../custom-delete.decorator.ts)\n                        \n                        \n                            CustomGet   (apps/.../custom-get.decorator.ts)\n                        \n                        \n                            CustomPatch   (apps/.../custom-patch.decorator.ts)\n                        \n                        \n                            CustomPost   (apps/.../custom-post.decorator.ts)\n                        \n                        \n                            CustomPut   (apps/.../custom-put.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend/src/app/common/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n            \n                \nAuth(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/backend/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/backend/src/app/common/decorators/custom-delete.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomDelete\n                        \n                    \n                \n            \n            \n                \nCustomDelete(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/backend/src/app/common/decorators/custom-get.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomGet\n                        \n                    \n                \n            \n            \n                \nCustomGet(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/backend/src/app/common/decorators/custom-patch.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomPatch\n                        \n                    \n                \n            \n            \n                \nCustomPatch(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/backend/src/app/common/decorators/custom-post.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomPost\n                        \n                    \n                \n            \n            \n                \nCustomPost(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    apps/backend/src/app/common/decorators/custom-put.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomPut\n                        \n                    \n                \n            \n            \n                \nCustomPut(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDemo shop public\nA full-stack e-commerce application built for educational purposes using modern web technologies.\nA more refined implementation of the API with ASP.NET Core can be found in this repository:\n\ngithub.com/christian-wandling/demo-shop-dotnet-api\n\nOverview\nBackend\n\nAPI Documentation - Complete API reference and backend architecture\n\nFrontend\n\nFrontend Documentation - Component structure and frontend architecture\nStorybook - Interactive UI component library and visual testing\n\nLibraries\n\nAuthentication - User authentication and authorization flows\nUser - User management\nProducts - Product catalog, categories, and search functionality\nShopping - Shopping cart implementation and session management\nOrder - Order processing, history, and management\nMonitoring - Application performance monitoring and logging\nNavigation - Site navigation components and routing\nShared - Common utilities and shared components\nOpenApiGenerator - API client generation tools and configurations\n\nTech Stack\nFrontend\n\nAngular - Progressive web framework\nTypeScript - Type-safe JavaScript\nNgRx - State Management\nHTML2Canvas/jsPDF - Pdf generation\nTailwind CSS - Styling\n\nBackend\n\nNestJS - Progressive Node.js framework\nNestJS Throttler - Rate limiting\nOpenAPI/Swagger - API documentation\nPrisma - Modern ORM for database access\nPostgreSQL - Relational database\n\nMonitoring\n\nSentry - Monitoring\n\nAuth\n\nKeycloak - Secure Authentication\n\nTesting\n\nJest - Unit testing\n\nDev workflow\n\nCommitlint/Commitizen - Standardize commit messages\nHusky - Pre-commit hooks\nESLint/Lint-staged - automatic linting\nPrettier - automatic code formating\n\nDevOps & Infrastructure\n\nNx - Mono-repo build system\nDocker - Containerization\nTerraform - Infrastructure as Code\nGithub CI/CD - Continuous Integration/Continuous Deployment\nAWS - Cloud hosting platform\n\nSetup\nPrerequisites\n\nNode.js 20 or later\nnpm or yarn\nDocker\n\nInstallation\n\nClone the repository\n\nExample :git clone https://github.com/christian-wandling/demo-shop-public.git\nInstall dependencies\n\nExample :npm install\nSet up environment variables\n\nExample :# Edit .env file with your configuration\ncp .env.example .env\nYou can choose to omit configuring sentry or see the section on setting up sentry\nKEYCLOAK_REALM_PUBLIC_KEY is needed by the api to validate tokens. It is dynamically created on keycloak server creation.\nTo retrieve it, follow the installation steps to build & run the docker containers\nNext access the keycloak server.\n\nExample :http://localhost:8080/admin/master/console/#/demo_shop/realm-settings/keys\nClick on the Public Key of RS256 and use its value in your .env file\n\n\n\n\nCreate shared docker network (or remove network from compose file)\n\nExample :docker network create shared\nGenerate prisma client\n\nExample :npm run prisma:generate\nPush the prisma schema to database\n\nExample :npm run prisma:migrate:dev\nBuild & Run the docker containers\n\nExample :# this will build and run docker containers for frontend, api, postgres, keycloak, pgadmin\nnpm start\nAccess the application\n\nExample :Frontend: http://localhost:4200\nAPI: http://localhost:3000\nSwagger Documentation: http://localhost:3000/api\nKeycloak: http://localhost:8080\nPgAdmin: http://localhost:80Usage\n\nOpen the web app\n\nExample :http://localhost:4200Sentry Setup\n\nGo to sentry.io to create an account and follow the steps to setup projects for frontend and api\n\nAdd configuration values to your .env file\n\nRun the sentry wizard to complete the setup\n\n\nExample :npx @sentry/wizard@latest -i sourcemaps --saasDotnet APi Integration\nAn equivalent API created with ASP.Net Core is available in the following repository:\n\ngithub.com/christian-wandling/demo-shop-dotnet-api\n\nTo use the API with this frontend, ensure both applications are running and connected via the shared Docker network.\nUser management\nUser registration via web app\n\nOpen the web app\n\nExample :http://localhost:4200\nClick Register and create the user\n\nUser creation via Keycloak admin console\n\nAccess the Keycloak server to add a user\n\nExample :http://localhost:8080/admin/master/console/#/demo_shop/users/add-user\nTo login use KEYCLOAK_ADMIN and KEYCLOAK_ADMIN_PASSWORD defined in your .env file.\n\nFill Email, First Name and Last name\n\nNavigate to the Credentials tab and use Set Password to create as password\n\nFill Password and Password Confirmation and deselect Temporary\n\n\nDatabase\nSeeding\nExample :npm run prisma:seedThe seed script will attempt to add entities to the database:\n\nproducts, if the product table is empty\nusers, if any user in the keycloak has not been added to the user table\norders, for any user that has no orders attached\n\n\nBrowse products\n\nSign in to access the shopping and order features\n\n\nAccess with Prisma Studio\nOpen prisma studio via console\nExample :prisma studioAccess with PgAdmin\n\nOpen PgAdmin in your browser\n\nExample :http://localhost:80\nEnter the password you set for PGADMIN_DEFAULT_PASSWORD in your .env file\n\nRegister new server. You can give it any name.\n\nIn the connection tab of the server use db for host and for username and password use the values of POSTGRES_USER and POSTGRES_PASSWORD in your .env file\n\n\nTesting\nTo run all tests in the project use\nExample :npm run testTo test an app or lib use\nExample :nx test Deployment\nThis repository includes a comprehensive CI/CD pipeline for deploying a fullstack application to AWS with Cloudflare for DNS management and CDN services.\nContinuous Integration\n\nPR Workflow: When a PR is created to main, a test build is created with unit tests, linting, SonarQube, and GitHub code checks\nMain Branch CI: On merge to main, test builds and checks run again\nVersioning: Successful main branch builds trigger the version workflow, which:\nUpdates the version number using semantic versioning determined from commit messages\nGenerates a changelog from commit messages\nCreates a new tag\n\n\n\nContinuous Deployment\n\nTrigger: New tag creation automatically triggers the CD workflow\n\nBuild Phase: Docker images are built for both frontend and API components\n\nInfrastructure Deployment:\n\nNetwork infrastructure is provisioned using Terraform\nEC2 instance with custom GitHub runner is deployed\n\n\nService Deployment via custom GitHub runner:\n\nRDS database\nEC2 instance for API\nEC2 instance for frontend\nEC2 instance for Keycloak\nS3 bucket for assets\n\n\nMonitoring: Sourcemaps are uploaded to Sentry for error tracking\n\nExternal Services\n\nCloudflare: Manages DNS, SSL/TLS, and CDN services\n\n\n\nPrerequisites\n\nGithub Setup\n\nGitHub repository access with proper permissions\nGitHub Actions secrets configured for AWS, Cloudflare, and Sentry credentials\nBranch protection rules for main branch\n\n\nAWS Requirements:\n\nAWS account with programmatic access\nIAM user with appropriate permissions for EC2, S3, RDS, VPC, etc.\nAWS credentials stored securely in GitHub Secrets\nPostgres and Keycloak credentials stored securely in AWS\n\n\nCloudflare Requirements:\n\nCloudflare account\nDomain added to Cloudflare\nAPI token with appropriate permissions\nCloudflare API token stored in GitHub Secrets\n\n\nSentry Requirements:\n\nSentry account and project\nAuth token for sourcemap uploads\nSentry credentials stored in GitHub Secrets\n\n\nSonarQube Requirements:\n\nSonarQube server or SonarCloud account\nProject setup in SonarQube/SonarCloud\nSonarQube credentials stored in GitHub Secrets\nsonar-project.properties file in repository root\n\n\n\nDiagram\nExample :flowchart TB\n    subgraph \"PR\"\n        A[PR Created] --> B[Test build, Unit Tests, Linting, Quality Gate]\n        B --> |On Success| C[Merge to Main]\n    end\n\n    subgraph \"CI\"\n        C[Merge to Main] --> D[Test Build, Unit Tests, Linting]\n        D --> |On Success| E[Trigger version]\n\n    end\n\n    subgraph \"Version Tag\"\n        E[CI Success] --> F[Update Version & Changelog]\n        F --> G[Create Tag]\n    end\n\n    subgraph \"CD\"\n        G[Tag vX.X.X] --> H[Build Docker Images]\n        H --> I[Deploy AWS Infrastructure]\n        I --> I1[Network]\n        I --> I2[EC2 with Custom Github Runner]\n        I --> J[Deploy Services]\n        J --> J1[RDS Database]\n        J --> J2[EC2 for API]\n        J --> J3[EC2 for Frontend]\n        J --> J4[EC2 for Keycloak]\n        J --> J5[S3 Bucket]\n        I --> K[Configure Cloudflare]\n        K --> K1[Cloudflare DNS]\n        K --> K2[Cloudflare SSL/TLS]\n        K --> K3[Cloudflare CDN]\n        K --> K4[Cloudflare Security Headers]\n        I --> M[Upload sourcemaps to Sentry]\n    end📜 License\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2025 Christian Wandling\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShoppingSessionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CartItemModule\n\n\n\ncluster_CartItemModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ShoppingSessionModule\n\n\n\ncluster_ShoppingSessionModule_exports\n\n\n\ncluster_ShoppingSessionModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCartItemModule\n\nCartItemModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCartItemModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nCartItemModule -->\n\nCommonModule->CartItemModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nCommonModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nCommonModule->ProductModule\n\n\n\n\n\nShoppingSessionModule\n\nShoppingSessionModule\n\nShoppingSessionModule -->\n\nCommonModule->ShoppingSessionModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCommonModule->UserModule\n\n\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nMonitoringService \n\nMonitoringService \n\nMonitoringService  -->\n\nCommonModule->MonitoringService \n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nCommonModule->PrismaService \n\n\n\nShoppingSessionModule -->\n\nOrderModule->ShoppingSessionModule\n\n\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nCartItemModule -->\n\nShoppingSessionModule->CartItemModule\n\n\n\nAppModule -->\n\nShoppingSessionModule->AppModule\n\n\n\n\n\nShoppingSessionService \n\nShoppingSessionService \n\nShoppingSessionService  -->\n\nShoppingSessionModule->ShoppingSessionService \n\n\n\nShoppingSessionModule -->\n\nUserModule->ShoppingSessionModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nCartItemRepository\n\nCartItemRepository\n\nCartItemModule -->\n\nCartItemRepository->CartItemModule\n\n\n\n\n\nCartItemService\n\nCartItemService\n\nCartItemModule -->\n\nCartItemService->CartItemModule\n\n\n\n\n\nMonitoringService\n\nMonitoringService\n\nCommonModule -->\n\nMonitoringService->CommonModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nCommonModule -->\n\nPrismaService->CommonModule\n\n\n\n\n\nOrderRepository\n\nOrderRepository\n\nOrderModule -->\n\nOrderRepository->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nProductRepository\n\nProductRepository\n\nProductModule -->\n\nProductRepository->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nShoppingSessionRepository\n\nShoppingSessionRepository\n\nShoppingSessionModule -->\n\nShoppingSessionRepository->ShoppingSessionModule\n\n\n\n\n\nShoppingSessionService\n\nShoppingSessionService\n\nShoppingSessionModule -->\n\nShoppingSessionService->ShoppingSessionModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.3.23\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DecodedToken   (apps/.../decoded-token.ts)\n                        \n                        \n                            HydratedCartItem   (apps/.../hydrated-cart-item.ts)\n                        \n                        \n                            HydratedOrder   (apps/.../hydrated-order.ts)\n                        \n                        \n                            HydratedProduct   (apps/.../hydrated-product.ts)\n                        \n                        \n                            HydratedShoppingSession   (apps/.../hydrated-shopping-session.ts)\n                        \n                        \n                            HydratedUser   (apps/.../hydrated-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend/src/app/common/models/decoded-token.ts\n    \n    \n        \n            \n                \n                    \n                    DecodedToken\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/backend/src/app/cart-item/entities/hydrated-cart-item.ts\n    \n    \n        \n            \n                \n                    \n                    HydratedCartItem\n                \n            \n            \n                \n                        Prisma.CartItemGetPayload\n\n                \n            \n        \n    \n    apps/backend/src/app/order/entities/hydrated-order.ts\n    \n    \n        \n            \n                \n                    \n                    HydratedOrder\n                \n            \n            \n                \n                        Prisma.OrderGetPayload\n\n                \n            \n        \n    \n    apps/backend/src/app/product/entities/hydrated-product.ts\n    \n    \n        \n            \n                \n                    \n                    HydratedProduct\n                \n            \n            \n                \n                        Prisma.ProductGetPayload\n\n                \n            \n        \n    \n    apps/backend/src/app/shopping-session/entities/hydrated-shopping-session.ts\n    \n    \n        \n            \n                \n                    \n                    HydratedShoppingSession\n                \n            \n            \n                \n                        Prisma.ShoppingSessionGetPayload\n\n                \n            \n        \n    \n    apps/backend/src/app/user/entities/hydrated-user.ts\n    \n    \n        \n            \n                \n                    \n                    HydratedUser\n                \n            \n            \n                \n                        Prisma.UserGetPayload\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            batchConvert   (apps/.../batch-convert.ts)\n                        \n                        \n                            CustomHeaders   (apps/.../custom-headers.decorator.ts)\n                        \n                        \n                            enableSwagger   (apps/.../enable-swagger.ts)\n                        \n                        \n                            fromDecodedToken   (apps/.../user-identity.ts)\n                        \n                        \n                            isProd   (apps/.../instrument.ts)\n                        \n                        \n                            toAddressResponse   (apps/.../address-response.ts)\n                        \n                        \n                            toCartItemResponse   (apps/.../cart-item-response.ts)\n                        \n                        \n                            toImageResponse   (apps/.../image-response.ts)\n                        \n                        \n                            toOrderItemResponse   (apps/.../order-item-response.ts)\n                        \n                        \n                            toOrderResponse   (apps/.../order-response.ts)\n                        \n                        \n                            toProductResponse   (apps/.../product-response.ts)\n                        \n                        \n                            toShoppingSessionResponse   (apps/.../shopping-session-response.ts)\n                        \n                        \n                            toUserResponse   (apps/.../user-response.ts)\n                        \n                        \n                               (apps/.../instrument.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/backend/src/app/common/util/batch-convert.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        batchConvert\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (items: Input[], fn: (input: Input) => Output): Output[] => {\n  const outputs: Output[] = [];\n\n  for (const item of items) {\n    outputs.push(fn(item));\n  }\n\n  return outputs;\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/common/decorators/custom-headers.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  const req = ctx.switchToHttp().getRequest();\n  return data && typeof data === 'string' ? req.headers[data] : req.headers;\n})\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/common/util/enable-swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enableSwagger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : app => {\n  const config = new DocumentBuilder()\n    .addTag('demo-shop')\n    .setTitle('Demo shop')\n    .setDescription('The demo shop API description')\n    .setVersion('v1')\n    .addBearerAuth()\n    .build();\n\n  const document = SwaggerModule.createDocument(app, config, {\n    operationIdFactory: (controllerKey, methodKey) => methodKey,\n  });\n\n  SwaggerModule.setup('api', app, document, {\n    jsonDocumentUrl: '/v1/swagger.json',\n    swaggerOptions: {\n      persistAuthorization: true,\n    },\n  });\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/user/dtos/user-identity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fromDecodedToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (decodedToken: DecodedToken): UserIdentity => ({\n  firstname: decodedToken.given_name,\n  lastname: decodedToken.family_name,\n  email: decodedToken.email,\n  keycloakUserId: decodedToken.sub,\n})\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/instrument.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isProd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : NODE_ENV === 'production'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/user/dtos/address-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toAddressResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (address: Address): AddressResponse => {\n  return {\n    street: address.street,\n    apartment: address.apartment,\n    city: address.city,\n    region: address.region,\n    zip: address.zip,\n    country: address.country,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/cart-item/dtos/cart-item-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toCartItemResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (item: HydratedCartItem): CartItemResponse => {\n  const productThumbnail = item.product.images?.[0]?.uri;\n\n  return {\n    id: item.id,\n    productId: item.product_id,\n    productName: item.product.name,\n    productThumbnail,\n    quantity: item.quantity,\n    unitPrice: Number(item.product.price),\n    totalPrice: Number(item.product.price) * item.quantity,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/product/dtos/image-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toImageResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (image: Image): ImageResponse => {\n  return {\n    name: image.name,\n    uri: image.uri,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/order/dtos/order-item-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toOrderItemResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (item: OrderItem): OrderItemResponse => {\n  return {\n    productId: item.product_id,\n    productName: item.product_name,\n    productThumbnail: item.product_thumbnail,\n    quantity: item.quantity,\n    unitPrice: Number(item.price),\n    totalPrice: Number(item.price) * item.quantity,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/order/dtos/order-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toOrderResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (order: HydratedOrder): OrderResponse => {\n  const items = batchConvert(order.order_items, toOrderItemResponse);\n  const amount = order.order_items.reduce((acc, curr) => acc + curr.quantity * Number(curr.price), 0);\n\n  return {\n    id: order.id,\n    userId: order.user_id,\n    items,\n    amount,\n    status: order.status,\n    created: new Date(order.created_at),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/product/dtos/product-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toProductResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (product: HydratedProduct): ProductResponse => {\n  const categories = product.categories.map(category => category.category.name);\n  const images = batchConvert(product.images, toImageResponse);\n\n  return {\n    id: product.id,\n    name: product.name,\n    description: product.description,\n    categories,\n    images,\n    price: Number(product.price),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/shopping-session/dtos/shopping-session-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toShoppingSessionResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (shoppingSession: HydratedShoppingSession): ShoppingSessionResponse => {\n  const items = batchConvert(shoppingSession.cart_items, toCartItemResponse);\n\n  return {\n    id: shoppingSession.id,\n    userId: shoppingSession.user_id,\n    items,\n  };\n}\n                    \n                \n\n\n        \n    \n\n    apps/backend/src/app/user/dtos/user-response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        toUserResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (user: HydratedUser): UserResponse => {\n  const address = user.address && toAddressResponse(user.address);\n\n  return {\n    id: user.id,\n    email: user.email,\n    firstname: user.firstname,\n    lastname: user.lastname,\n    phone: user.phone,\n    address,\n  };\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
