name: Doc

on:
  workflow_run:
    workflows: [version]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    concurrency:
      group: doc-workflow
      cancel-in-progress: true
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Compodoc (Backend)
        run: npm run compodoc:backend

      - name: Build Compodoc (Frontend)
        run: npm run compodoc:frontend

      - name: Build Dependency Graph (Backend)
        run: npm run graph:backend

      - name: Build Dependency Graph (Frontend)
        run: npm run graph:frontend

      - name: Create Directory
        run: mkdir -p ./dist/docs

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/docs'

  deploy-chromatic:
    runs-on: ubuntu-latest
    concurrency:
      group: chromatic-workflow
      cancel-in-progress: false
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - uses: chromaui/action@c93e0bc3a63aa176e14a75b61a31847cbfdd341c
        with:
          buildScriptName: 'storybook:build'
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-gh-pages:
    needs: [build]
    runs-on: ubuntu-latest
    concurrency:
      group: doc-workflow
      cancel-in-progress: false
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
